{"version":3,"sources":["pages/TTPages/List/List.js","const/url.js","pages/TTPages/TeacherForm/TeacherForm.js","api/tt.api.js","pages/TTPages/AddBatch/AddBatch.js","api/upload.api.js","pages/TTPages/TimeTable2/TimeTable2.js"],"names":["teachers_list","FacultyID","Faculty","subject","batch","BatchID","Batch","CourseID","time","LectureID","Lecture","Time_From","Time_To","BASE_URL","URL","UPLOAD_FILE","GET_UPLOAD_FILE_URL","GET_SAVE_TIMETABLE_URL","GET_ALL_TT","GET_EDIT_TT","REMOVE_TT","AddTeacher","_ref","showModal","setShowModal","teacherList","useEffect","fetchApiData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_context","prev","next","fetch","sent","json","setApiData","t0","stop","apply","arguments","_useState","useState","_useState2","_slicedToArray","setFaculties","_useState3","_useState4","apiData","_useState5","_useState6","checkedItems","setCheckedItems","_useState7","_useState8","showAlert","setShowAlert","_useState9","_useState10","timeOfAlert","setTimeOfAlert","_apiData$Object","Object","responseObject","_responseObject$Facul","FacultyList","_responseObject$UserL","UserList","facultyNameMap","forEach","user","UserID","UserName","handleCheckboxChange","event","_event$target","target","name","checked","_objectSpread","_defineProperty","updatedFacultyList","map","faculty","closeModal","_jsx","children","_jsxs","Modal","isOpen","toggle","centered","ModalHeader","ModalBody","className","style","maxHeight","overflowY","maxWidth","listStyle","facultyUser","bgColor","find","facultyName","type","onChange","ModalFooter","Button","color","onClick","newTeachersList","_loop","facultyID","selectedItem","parseInt","some","teacher","push","UncontrolledAlert","fade","setTimeout","TtApi","_createClass","_classCallCheck","getTtList","res","method","abrupt","Error","message","options","getEditTt","_callee2","fromDateEdit","myHeaders","_context2","Headers","append","headers","body","JSON","stringify","FromDate","replaceAll","_x","addUpdateTt","_ref3","_callee3","ttRequestBody","_context3","_x2","removeTtById","_ref4","_callee4","timeTableID","_context4","_x3","AddBatch","batchList","setBatches","_responseObject$Batch","newBatches","batchID","UploadApi","getWattsappApi","url","cell","fileName","console","log","URLSearchParams","number","media_url","filename","instance_id","access_token","_x4","getWattsappGroupApiTeachers","group_id","_x5","_x6","_x7","getWattsappGroupApiOthers","_x8","_x9","_x10","uplaodFile","file","formData","FormData","_x11","getUploadedFile","_callee5","_context5","TimeTable2","tableWidth","setTableWidth","draggedCellKey","setDraggedCellKey","duplicateElements","setDuplicateElements","duplicateDetected","setDuplicateDetected","setTeacher","_useState11","_useState12","teacherCounter","setTeacherCounter","_useState13","_useState14","teacherAssignment","setTeacherAssignment","_useState15","_useState16","lectureList","setLectureList","_useState17","_useState18","addBatch","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","setImage","_useState25","_useState26","showAddBatchModal","setShowAddBatchModal","_useState27","_useState28","showAddTeacherModal","setShowAddTeacherModal","_useState29","_useState30","fromDate","setFromDate","_useState31","_useState32","toDate","setToDate","tableElement","document","querySelector","offsetWidth","alert","divRef","useRef","generateUID","firstPart","Math","random","secondPart","toString","slice","convertToImage","canvas","imgData","byteString","mimeString","ia","i","blob","imageName","_data$Object","data","fileDetail","html2canvas","current","toDataURL","atob","split","Uint8Array","length","charCodeAt","Blob","File","reverse","obj","_obj$Title","Title","indexOf","LongURL","t1","dragItem","handleDrop","e","key","_objectSpread2","sourceAssignment","targetAssignment","teacher_assignment","teacherCount","rowId","teacherInCurrentRow","cellKey","startsWith","duplicates","reduce","acc","item","newDuplicateKeys","values","filter","keys","flat","includes","checkForDuplicateInRow","batchId","lectureId","teacherName","batchVo","it","lectureVo","teacherVo","lecture","Subject","IsActive","CreatedByUserID","CreatedOnDate","lecture_list","_toConsumableArray","allowDrop","ev","t","classList","contains","parentNode","innerText","trim","preventDefault","saveTable","saveTt","_Fragment","ref","Form","FormGroup","Input","id","value","onChangeFromDate","onChangeToDate","each","b","_teacherAssignment$ke","_teacherAssignment$ke2","_teacherAssignment$ke3","_teacherAssignment$ke4","draggable","onDragOver","onDrop","onDragStart","handleTableCellDragStart","concat","backgroundColor","removeTeacher","RxCross2","index","teacherInfo"],"mappings":"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","file":"static/js/7.cee40d21.chunk.js","sourcesContent":["import {v4 as uuidv4} from \"uuid\"\nexport const teachers_list = [\n        {\n            FacultyID: 22,\n            Faculty: \"MYK\",\n            subject: \"Physics\"\n        },\n        \n        {\n            FacultyID: 3038,\n            Faculty: \"KPS\",\n            subject:\"Chemistry\"\n        },\n\n        {\n            FacultyID: 2029,\n            Faculty: \"MRS\",\n            subject:\"Chemistry\"\n        },\n\n        {\n            FacultyID: 3051,\n            Faculty: \"MAS\",\n            subject:\"Physics\"\n        },\n\n        {\n            FacultyID: 3050,\n            Faculty: \"RSS\",\n            subject:\"Physics\"\n        },\n        {\n            FacultyID: 25,\n            Faculty: \"NMS\",\n            subject:\"Biology\"\n        },\n        {\n            FacultyID: 3037,\n            Faculty: \"HDS\",\n            subject:\"Chemistry\"\n        },\n        {\n            FacultyID: 3032,\n            Faculty: \"MNM\",\n            subject: \"Biology\"\n        },\n        \n        {\n            FacultyID: 1023,\n            Faculty: \"SJ\",\n            subject:\"Biology\"\n        },\n\n        {\n            FacultyID: 1025,\n            Faculty: \"AJ\",\n            subject:\"Biology\"\n        },\n\n        {\n            FacultyID: 1026,\n            Faculty: \"DMPS\",\n            subject:\"Chemistry\"\n        },\n\n        \n       \n        \n        {\n            FacultyID: 1027,\n            Faculty: \"PSJ\",\n            subject:\"Physics\"\n        },\n        {\n            FacultyID: 3033,\n            Faculty: \"YBS\",\n            subject:\"Biology\"\n        },\n        {\n            FacultyID: 3030,\n            Faculty: \"AKS\",\n            subject:\"Chemistry\"\n        },\n        {\n            FacultyID: 2028,\n            Faculty: \"AMS\",\n            subject:\"Maths\"\n        },\n        {\n            FacultyID: 3031,\n            Faculty: \"NDS\",\n            subject:\"Physics\"\n        },\n        {\n            FacultyID: 3052,\n            Faculty: \"HWS\",\n            subject:\"Physics\"\n        },\n        {\n            FacultyID: 1029,\n            Faculty: \"JRS\",\n            subject:\"Chemistry\"\n        },\n        {\n            FacultyID: 3053,\n            Faculty: \"HTS\",\n            subject:\"Chemistry\"\n        },\n        {\n            FacultyID: 3054,\n            Faculty: \"NPS\",\n            subject:\"Chemistry\"\n        },\n        {\n            FacultyID: 3055,\n            Faculty: \"SKS\",\n            subject:\"Maths\"\n        },\n    ]; \n    \n\nexport const batch= [\n    {\n        BatchID: 1,\n        Batch: \"A1\",\n        CourseID: 3\n    },\n    {\n        BatchID: 2,\n        Batch: \"B1\",\n        CourseID: 2\n    },\n    {\n        BatchID: 3,\n        Batch: \"C1\",\n        CourseID: 1\n    },\n    {\n        BatchID: 6,\n        Batch: \"A2\",\n        CourseID: 3\n    },\n    \n    {\n        BatchID: 7,\n        Batch: \"A4\",\n        CourseID: 3\n    },\n    {\n        BatchID: 10,\n        Batch: \"A3\",\n        CourseID: 3\n    },\n    \n    {\n        BatchID: 15,\n        Batch: \"C2\",\n        CourseID: 1\n    },\n    \n    \n    //MORE BATCHES ADDED WITH A FAKE BATCHID AND FAKE COURSEID NEED TO CHANGE LATER\n\n    {\n        BatchID: 20,\n        Batch: \"JO1\",\n        CourseID: 13\n    },\n    {\n        BatchID: 22,\n        Batch: \"JXII-1\",\n        CourseID: 12\n    },\n    {\n        BatchID: 3042,\n        Batch: \"JXI-1\",\n        CourseID: 11\n    },\n    {\n        BatchID: 3049,\n        Batch: \"B2\",\n        CourseID: 2\n    },\n    {\n        BatchID: 3061,\n        Batch: \"JXI-2\",\n        CourseID: 11\n    },\n    {\n        BatchID: 3078,\n        Batch: \"JEE adv\",\n        CourseID: 13\n    },\n    \n    {\n        BatchID: 3079,\n        Batch: \"JEE XL\",\n        CourseID: 1025\n    }\n    \n]\n\n\nexport const time= [\n    {\n        LectureID: 1,\n        Lecture: \"L1\",\n        Time_From: \"08:30 AM\",\n        Time_To: \"09:45 AM\"\n    },\n    {\n        LectureID: 2,\n        Lecture: \"L2\",\n        Time_From: \"09:50 AM\",\n        Time_To: \"11:05 AM\"\n    },\n    {\n        LectureID: 3,\n        Lecture: \"L3\",\n        Time_From: \"11:20 AM\",\n        Time_To: \"12:35 PM\"\n    },\n    {\n        LectureID: 4,\n        Lecture: \"L4\",\n        Time_From: \"12:40 PM\",\n        Time_To: \"01:55 PM\"\n    },\n    {\n        LectureID: 5,\n        Lecture: \"L5\",\n        Time_From: \"02:00 PM\",\n        Time_To: \"03:15 PM\"\n    },\n    {\n        LectureID: 6,\n        Lecture: \"L6\",\n        Time_From: \"03:20 PM\",\n        Time_To: \"04:35 PM\"\n    },\n    {\n        LectureID: 7,\n        Lecture: \"L7\",\n        Time_From: \"04:50 PM\",\n        Time_To: \"06:05 PM\"\n    },\n    {\n        LectureID: 8,\n        Lecture: \"L8\",\n        Time_From: \"06:15 PM\",\n        Time_To: \"07:30 PM\"\n    }\n]\n","const ENV_URL = 'https://api.aayamcareerinstitute.co.in/api'; // producation fn\nconst DEV_URL = 'http://localhost:5001'; // producation fn\nconst BASE_URL= ENV_URL\n\n\n\nexport const URL = {\n    UPLOAD_FILE: BASE_URL + '/UploadFilesAttachment',\n    GET_UPLOAD_FILE_URL: BASE_URL + '/GetFiles', \n    GET_SAVE_TIMETABLE_URL: BASE_URL+ '/AddUpdateTimeTable',\n    GET_ALL_TT: BASE_URL + '/GetTimeTable', \n\n    GET_EDIT_TT: BASE_URL + '/GetTimeTableByDate',\n    REMOVE_TT: BASE_URL + '/DeleteTimeTable',\n\n\n\n\n};  \n","import React, { useState, useEffect } from 'react';\nimport { batch } from '../List/List';\nimport { teachers_list } from '../List/List';\n// import { teachers_list } from '../../../const/teacherList';\n// import { batch } from '../../../const/batchList';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledAlert } from 'reactstrap';\nimport \"./TeacherForm.css\";\n\nconst AddTeacher = ({ showModal, setShowModal, teacherList }) => {\n\n  /************************************Use Effect****************************************** */\n  useEffect(() => {\n    if (showModal) {\n      const fetchApiData = async () => {\n        try {\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\n          const result = await response.json();\n          setApiData(result);\n        } catch (error) {\n        }\n      };\n\n      fetchApiData();\n    }\n  }, [showModal]);\n\n  /***********************Use State***************************************************** */\n  const [faculties, setFaculties] = useState(teacherList);\n  // const [batches, setBatches] = useState(JSON.parse(localStorage.getItem('batches')) || batch);\n  const [apiData, setApiData] = useState({});\n  const [checkedItems, setCheckedItems] = useState({});\n  const [showAlert, setShowAlert] = useState(\"\");\n  const [timeOfAlert, setTimeOfAlert] = useState(false);\n\n  /*************************other consts*************************************************** */\n  const { Object: responseObject = {} } = apiData;\n  const { Batch = [], FacultyList = [], UserList = [] } = responseObject;\n  const facultyNameMap = {};\n\n  UserList.forEach((user) => {\n    facultyNameMap[user.UserID] = user.UserName;\n  });\n  /****************************************methods******************************************* */\n  const handleCheckboxChange = (event) => {\n    const { name, checked } = event.target;\n    setCheckedItems({\n      ...checkedItems,\n      [name]: checked,\n    });\n  };\n\n  const updatedFacultyList = FacultyList.map((faculty) => ({\n    ...faculty,\n    Faculty: facultyNameMap[faculty.FacultyID] || faculty.Faculty,\n  }));\n\n  const addToFaculty = () => {\n    const newTeachersList = teacherList;\n\n    for (const facultyID in checkedItems) {\n      if (checkedItems[facultyID]) {\n        const selectedItem = updatedFacultyList.find(\n          (faculty) => faculty.FacultyID === parseInt(facultyID)\n        );\n\n        if (selectedItem) {\n          const facultyUser = UserList.find(\n            (user) => user.UserID === selectedItem.FacultyID\n          );\n          const facultyName = facultyUser ? facultyUser.UserName : selectedItem.Faculty;\n\n          const isTeacherAlreadyAdded = newTeachersList.some(\n            (teacher) => teacher.FacultyID === selectedItem.FacultyID\n          );\n\n          if (!isTeacherAlreadyAdded) {\n            newTeachersList.push({\n              FacultyID: selectedItem.FacultyID,\n              Faculty: facultyName,\n            });\n          }\n        }\n      }\n    }\n    setFaculties(newTeachersList);\n    if (!timeOfAlert) {\n      setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\n        Teachers added successfully\n      </UncontrolledAlert>);\n      setTimeout(() => {\n        setTimeOfAlert(false);\n        setShowAlert(\"\");\n      }, 3000);\n    };\n    closeModal();\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  /**********************************************Template to return******************************** */\n  return (\n    <div>\n      <Modal isOpen={showModal} toggle={closeModal} centered={true}>\n        <ModalHeader toggle={closeModal}>Select Teachers from the list</ModalHeader>\n        <ModalBody>\n          {showAlert}\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\n              {updatedFacultyList.map((faculty) => {\n                const { FacultyID, bgColor, className } = faculty;\n                const facultyUser = UserList.find((user) => user.UserID === FacultyID);\n                const facultyName = facultyUser ? facultyUser.UserName : faculty.Faculty;\n                return (\n                  <li key={faculty.FacultyID}>\n                    <div className=\"add-faculty-style\">\n                      <input\n                        type=\"checkbox\"\n                        name={faculty.FacultyID}\n                        checked={checkedItems[faculty.FacultyID] || false}\n                        onChange={handleCheckboxChange}\n                        className=\"addfaculty-checkbox-style\"\n                      />\n                      {facultyName}\n                    </div>\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={addToFaculty}>Add</Button>{' '}\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\nexport default AddTeacher;\n\n\n\n\n\n\n","import { URL } from '../const/url';\n\nexport default class TtApi {\n    getTtList = async () => {\n        try {\n            const res = await fetch(URL.GET_ALL_TT, {\n                method: 'GET',\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n    getEditTt = async (fromDateEdit) => {\n        try {\n            // const formData = new FormData();\n            // formData.append('file', file, file.name);\n            const myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            const res = await fetch(URL.GET_EDIT_TT, {\n                method: 'POST',\n                headers: myHeaders,\n                body: JSON.stringify({\n                    FromDate: fromDateEdit.replaceAll(\"-\", \"/\"),\n                })\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n    \n    addUpdateTt = async (ttRequestBody) => {\n        try {\n            const myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            const res = await fetch(URL.GET_SAVE_TIMETABLE_URL, {\n                method: 'POST',\n                headers: myHeaders,\n                body: JSON.stringify(ttRequestBody)\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n    removeTtById = async (timeTableID) => {\n        try {\n            // const formData = new FormData();\n            // formData.append('file', file, file.name);\n            const myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            const res = await fetch(URL.REMOVE_TT, {\n                method: 'POST',\n                headers: myHeaders,\n                body: timeTableID\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n}","\nimport React, { useState, useEffect } from 'react';\nimport { batch } from '../List/List';\n// import { batch } from '../../../const/batchList';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledAlert } from 'reactstrap';\nimport \"./AddBatch.css\"\n\nconst AddBatch = ({ showModal, setShowModal, batchList }) => {\n  /******************************************Use Effect********************************************** */\n  useEffect(() => {\n    if (showModal) {\n      const fetchApiData = async () => {\n        try {\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\n          const result = await response.json();\n          setApiData(result);\n        } catch (error) {\n        }\n      };\n      fetchApiData();\n    }\n  }, [showModal]);\n  /********************************************Use State****************************************** */\n  const [batches, setBatches] = useState(batchList);\n  const [apiData, setApiData] = useState({});\n  const [checkedItems, setCheckedItems] = useState({});\n  const [showAlert, setShowAlert] = useState(\"\");\n  const [timeOfAlert, setTimeOfAlert] = useState(false);\n\n\n  /*****************************Other consts******************************************************** */\n  const { Object: responseObject = {} } = apiData;\n  const { Batch = [] } = responseObject;\n\n  /***************************************Methods*************************************************** */\n  const handleCheckboxChange = (event) => {\n    const { name, checked } = event.target;\n    setCheckedItems({\n      ...checkedItems,\n      [name]: checked,\n    });\n  };\n\n  const addToBatch = () => {\n    const newBatches = batchList;\n    for (const batchID in checkedItems) {\n      if (checkedItems[batchID]) {\n        const selectedItem = Batch.find((batch) => batch.BatchID === parseInt(batchID));\n        if (selectedItem && !newBatches.find((batch) => batch.BatchID === selectedItem.BatchID)) {\n          newBatches.push({\n            BatchID: selectedItem.BatchID,\n            Batch: selectedItem.Batch,\n            CourseID: selectedItem.CourseID,\n          });\n        }\n      }\n    }\n    setBatches(newBatches);\n    if (!timeOfAlert) {\n      setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\n        Batches added successfully\n      </UncontrolledAlert>);\n\n      setTimeout(() => {\n        setTimeOfAlert(false);\n        setShowAlert(\"\");\n      }, 3000);\n\n    };\n    closeModal();\n  }\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  /***************************Template to return******************************************************* */\n  return (\n    <div>\n      <Modal centered={true} isOpen={showModal} toggle={closeModal}>\n        <ModalHeader toggle={closeModal}>Select Batches from the list</ModalHeader>\n        <ModalBody>\n          {showAlert}\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\n              {Batch.map((batch) => (\n                <li key={batch.BatchID}>\n                  <div className=\"add-batch-style\">\n                    <input\n                      type=\"checkbox\"\n                      name={batch.BatchID}\n                      checked={checkedItems[batch.BatchID] || false}\n                      onChange={handleCheckboxChange}\n                      className=\"addbatch-checkbox-style\"\n                    />\n                    {batch.Batch}\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={addToBatch}>Add</Button>{' '}\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\nexport default AddBatch;\n\n","import { URL } from '../const/url';\n\nexport default class UploadApi {\n    // getUserWalletBalance = async (userId) => {\n    //     try {\n    //         GlobalEmitterService.emit(true);\n    //         const token = `Bearer ${AuthService.getToken()}`;\n    //         const res = await fetch(URL.USER_WALLET_BALANCE + '?' + new URLSearchParams({\n    //             userId\n    //         }), {\n    //             method: 'GET',\n    //             headers: { 'Content-Type': 'application/json', 'Authorization': token },\n    //         });\n    //         const result = await res.json();\n    //         GlobalEmitterService.emit(false);\n    //         return result;\n    //     } catch (e) {\n    //         GlobalEmitterService.emit(false);\n    //         throw new Error(e.message, e.options);\n    //     }\n    // }\n\n\n    getWattsappApi = async (url, message, cell, fileName) => {\n        try {\n            console.log(\"url\", url);\n            console.log(\"mesage\", message);\n            console.log(\"cel\", cell);\n            console.log(\"file\", fileName);\n            // https://ziper.io/api/send.php?number=917898118503&type=media&message=test%20message&media_url=https://api.aayamcareerinstitute.co.in//Uploads/Files/File_3431223213168.pdf&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\n            const res = await fetch(\"https://ziper.io/api/send.php\" + '?' + new URLSearchParams({\n                number: cell,\n                type: \"media\",\n                message: message,\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\n                filename: fileName,\n                instance_id: \"647B3C9AA8D0A\",\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\n            }), {\n                method: 'GET',\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n\n    getWattsappGroupApiTeachers = async (url, message, fileName) => {\n        try {\n            console.log(\"url\", url);\n            console.log(\"mesage\", message);\n            console.log(\"file\", fileName);\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\n                group_id: \"919977116612-1595572006@g.us\",\n                type: \"media\",\n                message: message,\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\n                filename: fileName,\n                instance_id: \"647B3C9AA8D0A\",\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\n            }), {\n                method: 'GET',\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n    getWattsappGroupApiOthers = async (url, message, fileName) => {\n        try {\n            console.log(\"url\", url);\n            console.log(\"mesage\", message);\n            console.log(\"file\", fileName);\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\n                group_id: \"919826362001-1628170376@g.us\",\n                type: \"media\",\n                message: message,\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\n                filename: fileName,\n                instance_id: \"647B3C9AA8D0A\",\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\n\n            }), {\n                method: 'GET',\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n    uplaodFile = async (file) => {\n        try {\n            const formData = new FormData();\n            formData.append('file', file, file.name);\n            const res = await fetch(URL.UPLOAD_FILE, {\n                method: 'POST',\n                body: formData,\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n    getUploadedFile = async () => {\n        try {\n            const res = await fetch(URL.GET_UPLOAD_FILE_URL, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({})\n\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { RxCross2 } from \"react-icons/rx\";\nimport { batch, teachers_list, time } from '../List/List';\n// import { teachers_list } from '../../../const/teacherList';\n// import { batch } from '../../../const/batchList';\n// import { time } from '../../../const/time';\nimport \"./TimeTable2.scss\";\n// import { RiDeleteBin2Line } from \"react-icons/ri\";\n// import htmlToCanvas from 'html-to-canvas';\nimport html2canvas from 'html2canvas';\nimport { Card, Row, Col, CardTitle, CardBody, Button, Form, FormGroup, Label, Input, FormText, } from \"reactstrap\";\nimport AddBatch from '../AddBatch/AddBatch';\nimport UploadApi from '../../../api/upload.api';\nimport AddTeacher from '../TeacherForm/TeacherForm';\nimport TtApi from '../../../api/tt.api.js';\n\nconst TimeTable2 = () => {\n  /**************************************** Use Effect Section ************************************/\n  /**************************************** State Section *****************************************/\n  const [tableWidth, setTableWidth] = useState(0);\n  const [draggedCellKey, setDraggedCellKey] = useState(null);\n  const [duplicateElements, setDuplicateElements] = useState({});\n  const [duplicateDetected, setDuplicateDetected] = useState(false);\n  const [teacher, setTeacher] = useState({});\n  const [teacherCounter, setTeacherCounter] = useState({}); // key: teacherId, value: counter\n  const [teacherAssignment, setTeacherAssignment] = useState({});\n  const [lectureList, setLectureList] = useState([]);\n  const [addBatch, setAddBatch] = useState(null);\n  // const [numberList, setNumberList] = useState([918989529107, 917898118503, 918871688429, 918349215747,919826362001,918349215747,917314058393,917869597239,919977116612,918085390900,918302184021,918358810742,919893640561,919713519598,919713030834,919827274005,919691938832,917043127836,919977711607,917298519996,919713191848,918871841238,917007794323,919669889020,918770153381]);\n  const [numberList, setNumberList] = useState([917898118503]);\n  const [batchList, setBatchList] = useState(batch);\n  const [image, setImage] = useState(null);   //  for div to image conversion\n  const [showAddBatchModal, setShowAddBatchModal] = useState(false); //for add Batch popup\n  const [showAddTeacherModal, setShowAddTeacherModal] = useState(false);\n  const [fromDate, setFromDate] = useState(\"\");\n  const [toDate, setToDate] = useState(\"\");\n\n  /**************************************** Use Effect Section ************************************/\n  useEffect(() => {\n    const tableElement = document.querySelector('.table-style');\n    if (tableElement) {\n      const tableWidth = tableElement.offsetWidth;\n      setTableWidth(tableWidth);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (duplicateDetected) {\n      alert('Two same teachers found in the same row');\n      setDuplicateDetected(false);\n      setTimeout(() => {\n        setDuplicateElements({});\n      }, 3000); // Blink duration\n    }\n  }, [duplicateDetected]);\n\n  useEffect(() => {\n    if (duplicateDetected) {\n      // alert('Two same teachers found in the same row');   \n      setDuplicateDetected(false);\n    }\n  }, [duplicateDetected]);\n  /***************************************other const section*********************************** */\n  const divRef = useRef(null);\n  const color = [\"#D4E6F1\", \"#E8DAEF\", \"#008080\", \"#808000\", \"#C39BD3\", \"#76D7C4\", \"#3498DB\", \"#358b79\", \"#847f86\", \"rgb(251, 235, 9)\", \"#CA6F1E\", \"#CCCCFF\", \"#F4D03F\", \"rgb(199, 185, 84)\", \"#979A9A\", \"#F0B27A\", \"rgb(117, 98, 179)\", \"#CD5C5C\", \"#40E0D0\", \"#DAF7A6\", \"#008080\", \"#808000\", \"#FADBD8\", \"green\", \"yellow\", \"white\", \"red\", \"pink\"]\n  /**************************************** Component Method Section *********************************/\n\n  const generateUID = () => {\n    // I generate the UID from two parts here \n    // to ensure the random number provide enough bits.\n    var firstPart = (Math.random() * 46656) | 0;\n    var secondPart = (Math.random() * 46656) | 0;\n    firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\n    secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\n    return firstPart + secondPart;\n  }\n  const convertToImage = async () => {\n    // alert(\"Time table image sent successfully\")\n    const canvas = await html2canvas(divRef.current);\n    const imgData = canvas.toDataURL();\n    setImage(imgData);\n    /*converting page64 url got as imgData into file Object by using blob below*/\n    const byteString = atob(imgData.split(',')[1]);\n    const mimeString = imgData.split(',')[0].split(':')[1].split(';')[0];\n    const ia = new Uint8Array(byteString.length);\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    const blob = new Blob([ia], { type: mimeString });\n    const imageName = generateUID();\n    const file = new File([blob], imageName + \".jpg\");\n    const fileName = imageName + \".jpg\";\n    const result = await new UploadApi().uplaodFile(file);\n    if (result === \"Success\") {\n      const data = await new UploadApi().getUploadedFile();\n      if (data.Object?.length > 0) {\n        const fileDetail = data.Object.reverse().find(obj => { return obj.Title?.indexOf(imageName) >= 0 });\n        // for (let i = 0; i < numberList.length; i++) {       THIS IS USED WHEN GETWATTSAPPAPI WILL USED SO DONT DELETE THIS LINES\n        try {\n          // const cell = numberList[i];\n          /*CHECK THE DETAILS OF THIS GETWATTSAPPAPI IN UPLOAD.API.JS FILE IN API FOLDER*/\n          // await new UploadApi().getWattsappApi(fileDetail.LongURL, \"time table\", cell, fileName);\n          await new UploadApi().getWattsappGroupApiOthers(fileDetail.LongURL, \"time table\", fileName);\n          // await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\n        } catch (e) {\n          // continue;\n          console.log(\"error\")\n        }\n        try {\n          await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\n        } catch (e) {\n          console.log(\"error\")\n        }\n      }\n    }\n    alert(\"Time table image sent successfully\")\n  }\n  const dragItem = teacher;\n  const dragStart = (e, teacherInfo) => {\n    dragItem.current = teacherInfo;\n    console.log(teacherInfo)\n  };\n  const handleTableCellDragStart = (e, key) => {\n    setDraggedCellKey(key);\n  };\n  const checkForDuplicateInRow = (key) => {\n    const rowId = key.split('_')[0];\n    const teacherInCurrentRow = [];\n    for (const cellKey in teacherAssignment) {\n      if (cellKey.startsWith(rowId)) {\n        teacherInCurrentRow.push({\n          key: cellKey,\n          teacher: teacherAssignment[cellKey].teacher,\n        });\n      }\n    }\n    const duplicates = teacherInCurrentRow.reduce((acc, item) => {\n      if (acc[item.teacher]) {\n        acc[item.teacher].push(item.key);\n      } else {\n        acc[item.teacher] = [item.key];\n      }\n      return acc;\n    }, {});\n    const newDuplicateKeys = Object.values(duplicates)\n      .filter((keys) => keys.length > 1)\n      .flat();\n    const oldDuplicateKeys = Object.keys(duplicateElements);\n    const isNewDuplicate = !oldDuplicateKeys.includes(key) && newDuplicateKeys.includes(key);\n    if (isNewDuplicate) {\n      setDuplicateDetected(true);\n      setDuplicateElements(\n        newDuplicateKeys.reduce((acc, key) => {\n          acc[key] = true;\n          return acc;\n        }, {})\n      );\n    }\n  };\n\n  const handleDrop = (e, key) => {\n    console.log(key)\n    console.log(\"jjjjj\", teacherAssignment)\n    console.log(\"drag cell key\", draggedCellKey);\n    if (draggedCellKey) {\n      // Move table item\n      const sourceAssignment = teacherAssignment[draggedCellKey];\n      const targetAssignment = teacherAssignment[key];\n      setTeacherAssignment({\n        ...teacherAssignment,\n        [draggedCellKey]: targetAssignment,\n        [key]: sourceAssignment,\n      });\n      setDraggedCellKey(null);\n    } else {\n      // Assign teacher to the cell\n      const teacher_assignment = teacherAssignment;\n      teacherAssignment[key] = dragItem.current;\n      setTeacherAssignment({ ...teacher_assignment });\n      setTeacher({});\n      const teacherCount = teacherCounter;\n      if (!teacherCount[dragItem.current.teacher]) {\n        teacherCount[dragItem.current.teacher] = 1;\n      } else {\n        teacherCount[dragItem.current.teacher] += 1;\n      }\n      setTeacherCounter({ ...teacherCount });\n      checkForDuplicateInRow(key);\n\n      const teacher = teacherAssignment[key];\n      const batchId = key.split(\"_\")[1];\n      const lectureId = key.split(\"_\")[0];\n      const teacherName = teacher.teacher;\n\n      const batchVo = batch.find(it => it.BatchID == batchId);\n      console.log('xxxx xx xx teacher ', teacher);\n      console.log('xxxx xx xx batchId ', batchId);\n      console.log('xxxx xx xx lectureId', lectureId);\n      console.log('xxxx xx xx teacherAssignment', teacherAssignment);\n      // making lectureVO \n      const lectureVo = time.find(it => it.LectureID == lectureId);\n      const teacherVo = teachers_list.find(it => it.Faculty == teacherName)\n      console.log(\"iiii\", teacherVo)\n\n      const lecture = {};\n      lecture.ID = \"0\"\n      lecture.TimeTableID = \"0\";\n      lecture.LectureName = \"\";\n      lecture.Batch = batchVo;\n      lecture.Lecture = lectureVo;\n      lecture.Subject = teacherVo.subject;\n      lecture.FacultyID = teacherVo.FacultyID;\n      lecture.IsActive = true;\n      lecture.CreatedByUserID = \"1\";\n      lecture.CreatedOnDate = \"02/05/2023\";\n      console.log(\"fff\", lecture);\n      console.log(\"zzzz\", teacher)\n\n      const lecture_list = lectureList;\n      lecture_list.push(lecture);\n      setLectureList([...lecture_list])\n      /* THIS LECTURE LIST WILL BE USED BELOW IN THE CONST SAVETABLE() METHOD FROM WHERE WE SEND IT TO DATABASE THROUGH API WRITTEN IN SAVETABLE() METHOD*/\n    }\n  }\n\n  const allowDrop = (ev) => {\n    let t = ev.target;\n    while (t && (!t.classList || !t.classList.contains(\"each-block\"))) {\n      t = t.parentNode;\n    }\n    if (t && t.innerText.trim() !== \"\") {\n      // Prevent drop event if cell is not empty\n      return false;\n    }\n    ev.preventDefault();\n  };\n\n  const removeTeacher = (key) => {\n    const teacher_assignment = teacherAssignment;\n    setTeacherAssignment({ ...teacher_assignment });\n    setTeacher({});\n    const teacherCount = teacherCounter;\n    if ([teacherAssignment[key].teacher]) {\n      teacherCount[teacherAssignment[key].teacher] -= 1;\n    }\n    delete teacherAssignment[key].teacher;\n    delete teacherAssignment[key].color;\n    setTeacherCounter(teacherCount);\n  }\n\n  const onChangeFromDate = (e) => {\n    setFromDate(e.target.value);\n  }\n\n  const onChangeToDate = (e) => {\n    setToDate(e.target.value);\n  }\n\n  const onAddBatch = () => {\n    // setAddBatch(<AddBatch batchList={batchList} />)\n    setShowAddBatchModal(true);\n  }\n  \n  const onAddTeacher = () => {\n    setShowAddTeacherModal(true);\n  }\n\n  const saveTable = async() => {\n    const result = await new TtApi().saveTt(fromDate,toDate,lectureList);\n    alert(\"time table saved successfully\");\n  };\n  \n  /**************************************** Template Section *****************************************/\n  return (\n    <>\n      <div className=\"bg-container\">\n        <h1 className='heading-style'>CLASS SCHEDULE</h1>\n        <div className=\"button-group added-style\">\n          <Button className=\"btn \" color=\"info\" onClick={onAddBatch}>\n            Add Batches\n          </Button>\n          {showAddBatchModal && <AddBatch showModal={showAddBatchModal} setShowModal={setShowAddBatchModal} />}\n          {addBatch}\n          <Button className=\"btn\" color=\"info\" onClick={onAddTeacher}>\n            Add Teachers\n          </Button>\n          {showAddTeacherModal && <AddTeacher showModal={showAddTeacherModal} setShowModal={setShowAddTeacherModal} />}\n          <Button className=\"btn\" color=\"info\" onClick={saveTable}>\n            Save\n          </Button>\n          <Button className=\"btn\" color=\"info\" onClick={convertToImage}>\n            Post\n          </Button>\n        </div>\n        <div>\n          <div ref={divRef}>\n            <br />\n            <Form >\n              <div className='time-table-date-style'>\n                <FormGroup className=\"label-date-allignment\">\n                  <p>From:</p>\n                  <Input\n                    id=\"fromDate\"\n                    name=\"date\"\n                    type=\"date\"\n                    onChange={(e) => { onChangeFromDate(e) }}\n                    className='input-size'\n                  />\n                </FormGroup>\n                <FormGroup className=\"label-date-allignment\">\n                  <p>To:</p>\n                  <Input\n                    id=\"toDate\"\n                    name=\"date\"\n                    type=\"date\"\n                    onChange={(e) => { onChangeToDate(e) }}\n                    className='input-size'\n\n                  />\n                </FormGroup>\n              </div>\n            </Form>\n            <table className='table-style'>\n              <tbody>\n                <div className=\"for-time\">\n                  <tr>\n                    <td className='F-style time-style'>Time</td>\n                    {batch.map((each) => {\n                      return (\n                        <td className='F-style batch-style' key={batch.BatchID}>{each.Batch}</td>\n                      )\n                    })}\n                  </tr>\n                </div>\n                <tr >\n                  {time.map((t) => {\n                    return (\n                      <div >\n                        <td className='F-style time-style'>{t.Time_From}-{t.Time_To}</td>\n                        {batchList.map((b) => {\n                          const key = t.LectureID + '_' + b.BatchID\n                          return (\n                            <td\n                              draggable={true}\n                              onDragOver={allowDrop}\n                              onDrop={(e) => handleDrop(e, key)}\n                              onDragStart={(e) => teacherAssignment[key] && handleTableCellDragStart(e, key)}\n                              key={key}\n                              id={key}\n                              className={`each-block ${duplicateElements[key] ? \"blink\" : \"\"}`}\n                              style={{ backgroundColor: teacherAssignment[key]?.color }}\n                            // className={`each-block ${duplicateElements[key]}`}\n                            >\n                              {teacherAssignment[key] && (\n                                <div className={`teacname-cross-style ${teacherAssignment[key]?.className} `}>\n                                  <div className=\"teacher-name\" >\n                                    {teacherAssignment[key]?.teacher}\n                                  </div>\n                                  <div className=\"cross-btn-container\">\n                                    {teacherAssignment[key]?.teacher ? (\n                                      <button\n                                        className=\"cross-style\"\n                                        onClick={() => removeTeacher(key)}\n                                      >\n                                        {/* <RiDeleteBin2Line /> */}\n                                        <RxCross2 />\n                                      </button>\n                                    ) : (\n                                      ''\n                                    )}\n                                  </div>\n                                </div>\n                              )}\n                            </td>\n                          )\n                        })}\n                      </div>\n                    )\n                  })}\n                </tr>\n              </tbody>\n            </table>\n            <br />\n            {/* <button onClick={onAddBatch}>+</button>\n            {addBatch} */}\n          </div>\n\n          {/* {image && <img src={image} alt=\"table\" style={{ maxWidth: tableWidth }} />} */}\n          {/* <button onClick={saveTable}>Save</button> */}\n        </div>\n        <div className='teacher-container' style={{ maxWidth: tableWidth }}>\n          {teachers_list.map((teacher, index) => {\n            const { FacultyID, Faculty } = teacher;\n            return (\n              <div\n                style={{ maxWidth: tableWidth, backgroundColor: color[index % color.length] }}\n                key={FacultyID}\n                className=\"teacher-item\"\n                draggable={true}\n                onDragStart={(e) => dragStart(e, { teacher: Faculty, color: color[index % color.length] })}\n              >\n                <h3>{Faculty}</h3>\n                {teacherCounter[Faculty] > 0 && (\n                  <span className={`counter-item `} draggable={false}>\n                    {teacherCounter[Faculty]}\n                  </span>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  )\n}\nexport default TimeTable2;"],"sourceRoot":""}