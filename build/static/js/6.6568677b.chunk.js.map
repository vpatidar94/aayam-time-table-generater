{"version":3,"sources":["pages/TTPages/List/List.js","service/GlobalEmitterService.js","const/url.js","pages/TTPages/TeacherForm/TeacherForm.js","api/tt.api.js","pages/TTPages/AddBatch/AddBatch.js","api/upload.api.js","const/color.const.js","pages/TTPages/TimeTable/TimeTable.js"],"names":["teachers_list","FacultyID","Faculty","subject","batch","BatchID","Batch","CourseID","time","LectureID","Lecture","Time_From","Time_To","GlobalEmitterService","_createClass","_classCallCheck","emit","status","event","CustomEvent","detail","window","dispatchEvent","BASE_URL","URL","UPLOAD_FILE","GET_UPLOAD_FILE_URL","GET_SAVE_TIMETABLE_URL","GET_ALL_TT","GET_EDIT_TT","REMOVE_TT","AddTeacher","_ref","showModal","setShowModal","teacherList","useEffect","fetchApiData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_context","prev","next","fetch","sent","json","setApiData","t0","stop","apply","arguments","_useState","useState","_useState2","_slicedToArray","setFaculties","_useState3","_useState4","apiData","_useState5","_useState6","checkedItems","setCheckedItems","_useState7","_useState8","showAlert","setShowAlert","_useState9","_useState10","timeOfAlert","setTimeOfAlert","_apiData$Object","Object","responseObject","_responseObject$Facul","FacultyList","_responseObject$UserL","UserList","facultyNameMap","forEach","user","UserID","UserName","handleCheckboxChange","_event$target","target","name","checked","_objectSpread","_defineProperty","updatedFacultyList","map","faculty","closeModal","_jsx","children","_jsxs","Modal","isOpen","toggle","centered","ModalHeader","ModalBody","className","style","maxHeight","overflowY","maxWidth","listStyle","facultyUser","bgColor","find","facultyName","type","onChange","ModalFooter","Button","color","onClick","newTeachersList","_loop","facultyID","selectedItem","parseInt","some","teacher","push","UncontrolledAlert","fade","setTimeout","TtApi","getTtList","res","method","abrupt","Error","message","options","getEditTt","_callee2","fromDateEdit","myHeaders","_context2","Headers","append","headers","body","JSON","stringify","FromDate","replaceAll","_x","addUpdateTt","_ref3","_callee3","ttRequestBody","_context3","_x2","removeTtById","_ref4","_callee4","timeTableID","_context4","_x3","AddBatch","batchList","setBatches","_responseObject$Batch","newBatches","batchID","UploadApi","getWattsappApi","url","cell","fileName","URLSearchParams","number","media_url","filename","instance_id","access_token","_x4","getWattsappGroupApiTeachers","group_id","_x5","_x6","_x7","getWattsappGroupApiOthers","_x8","_x9","_x10","uplaodFile","file","formData","FormData","_x11","getUploadedFile","_callee5","_context5","COLORS","TimeTable","appenColorTOTeacherList","draggedTeacher","setDraggedTeacher","lectureList","setLectureList","teacherAssignment","setTeacherAssignment","teacherCounter","setTeacherCounter","lectureTeacherCounter","setLectureTeacherCounter","_useState11","_useState12","duplicateTeacherDetectedInRow","setDuplicateTeacherDetectedInRow","_useState13","_useState14","draggedCellKey","setDraggedCellKey","_useState15","_useState16","setBatchList","_useState17","_useState18","setTeacherList","_useState19","_useState20","showAddBatchModal","setShowAddBatchModal","_useState21","_useState22","showAddTeacherModal","setShowAddTeacherModal","_useState23","_useState24","fromDate","setFromDate","_useState25","_useState26","toDate","setToDate","_useState27","_useState28","_useState29","_useState30","_useState31","_useState32","numberList","divRef","useRef","stateTeacherList","i","concat","allowDrop","ev","t","classList","contains","parentNode","innerText","trim","preventDefault","handleDrop","e","lecture","selectedTeacher","keyInside","removeTeacher","stateTeacherAssignment","key","stateLectureList","lectureDto","Subject","IsActive","CreatedByUserID","CreatedOnDate","_toConsumableArray","updateLectureListOnDrop","lectureId","teacherId","stateLectureTeacherCounter","checkDuplicateTeacherInRowOnDrop","stateTeacherCounter","updateTeacherCounterOnDrop","batchId","index","findIndex","row","_row$Batch","_row$Lecture","console","log","splice","lectureTeacherKey","keyLtId","isTeacherDuplicateInLecture","generateUID","firstPart","Math","random","secondPart","toString","slice","convertToImage","canvas","imgData","byteString","mimeString","ia","blob","imageName","_data$Object","data","fileDetail","_i","current","width","html2canvas","toDataURL","atob","split","Uint8Array","length","charCodeAt","Blob","File","reverse","obj","_obj$Title","Title","indexOf","LongURL","onAddBatch","onAddTeacher","saveTable","sentBatchID","_result$ExceptionMess","item","TimeTableID","Description","DateType","ToDate","ShiftID","SessionID","Session","Date","LectureList","ExceptionMessage","clearAll","_Fragment","Row","Col","Alert","Form","Input","id","defaultValue","value","onChangeFromDate","min","toISOString","placeholder","onChangeToDate","disabled","ButtonGroup","UncontrolledDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","divider","ref","each","confirm","updatedBatches","filter","onDeleteBatch","RxCross2","b","_teacherAssignment$ke","_teacherAssignment$ke2","_teacherAssignment$ke3","_teacherAssignment$ke4","_teacherAssignment$ke5","_teacherAssignment$ke6","_teacherAssignment$ke7","draggable","onDragOver","onDrop","onDragStart","backgroundColor","onDragEnd","Badge","updatedTeachers","onDeleteTeacher"],"mappings":"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","file":"static/js/6.6568677b.chunk.js","sourcesContent":["import {v4 as uuidv4} from \"uuid\"\r\nexport const teachers_list = [\r\n        {\r\n            FacultyID: 22,\r\n            Faculty: \"MYK\",\r\n            subject: \"Physics\"\r\n        },\r\n        \r\n        {\r\n            FacultyID: 3038,\r\n            Faculty: \"KPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 2029,\r\n            Faculty: \"MRS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 3051,\r\n            Faculty: \"MAS\",\r\n            subject:\"Physics\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 3050,\r\n            Faculty: \"RSS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 25,\r\n            Faculty: \"NMS\",\r\n            subject:\"Biology\"\r\n        },\r\n        {\r\n            FacultyID: 3037,\r\n            Faculty: \"HDS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3032,\r\n            Faculty: \"MNM\",\r\n            subject: \"Biology\"\r\n        },\r\n        \r\n        {\r\n            FacultyID: 1023,\r\n            Faculty: \"SJ\",\r\n            subject:\"Biology\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 1025,\r\n            Faculty: \"AJ\",\r\n            subject:\"Biology\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 1026,\r\n            Faculty: \"DMPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n\r\n        \r\n       \r\n        \r\n        {\r\n            FacultyID: 1027,\r\n            Faculty: \"PSJ\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 3033,\r\n            Faculty: \"YBS\",\r\n            subject:\"Biology\"\r\n        },\r\n        {\r\n            FacultyID: 3030,\r\n            Faculty: \"AKS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 2028,\r\n            Faculty: \"AMS\",\r\n            subject:\"Maths\"\r\n        },\r\n        {\r\n            FacultyID: 3031,\r\n            Faculty: \"NDS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 3052,\r\n            Faculty: \"HWS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 1029,\r\n            Faculty: \"JRS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3053,\r\n            Faculty: \"HTS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3054,\r\n            Faculty: \"NPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3055,\r\n            Faculty: \"SKS\",\r\n            subject:\"Maths\"\r\n        },\r\n    ]; \r\n    \r\n\r\nexport const batch= [\r\n    {\r\n        BatchID: 1,\r\n        Batch: \"A1\",\r\n        CourseID: 3\r\n    },\r\n    {\r\n        BatchID: 2,\r\n        Batch: \"B1\",\r\n        CourseID: 2\r\n    },\r\n    {\r\n        BatchID: 3,\r\n        Batch: \"C1\",\r\n        CourseID: 1\r\n    },\r\n    {\r\n        BatchID: 6,\r\n        Batch: \"A2\",\r\n        CourseID: 3\r\n    },\r\n    \r\n    {\r\n        BatchID: 7,\r\n        Batch: \"A4\",\r\n        CourseID: 3\r\n    },\r\n    {\r\n        BatchID: 10,\r\n        Batch: \"A3\",\r\n        CourseID: 3\r\n    },\r\n    \r\n    {\r\n        BatchID: 15,\r\n        Batch: \"C2\",\r\n        CourseID: 1\r\n    },\r\n    \r\n    \r\n    //MORE BATCHES ADDED WITH A FAKE BATCHID AND FAKE COURSEID NEED TO CHANGE LATER\r\n\r\n    {\r\n        BatchID: 20,\r\n        Batch: \"JO1\",\r\n        CourseID: 13\r\n    },\r\n    {\r\n        BatchID: 22,\r\n        Batch: \"JXII-1\",\r\n        CourseID: 12\r\n    },\r\n    {\r\n        BatchID: 3042,\r\n        Batch: \"JXI-1\",\r\n        CourseID: 11\r\n    },\r\n    {\r\n        BatchID: 3049,\r\n        Batch: \"B2\",\r\n        CourseID: 2\r\n    },\r\n    {\r\n        BatchID: 3061,\r\n        Batch: \"JXI-2\",\r\n        CourseID: 11\r\n    },\r\n    {\r\n        BatchID: 3078,\r\n        Batch: \"JEE adv\",\r\n        CourseID: 13\r\n    },\r\n    \r\n    {\r\n        BatchID: 3079,\r\n        Batch: \"JEE XL\",\r\n        CourseID: 1025\r\n    }\r\n    \r\n]\r\n\r\n\r\nexport const time= [\r\n    {\r\n        LectureID: 1,\r\n        Lecture: \"L1\",\r\n        Time_From: \"08:30 AM\",\r\n        Time_To: \"09:45 AM\"\r\n    },\r\n    {\r\n        LectureID: 2,\r\n        Lecture: \"L2\",\r\n        Time_From: \"09:50 AM\",\r\n        Time_To: \"11:05 AM\"\r\n    },\r\n    {\r\n        LectureID: 3,\r\n        Lecture: \"L3\",\r\n        Time_From: \"11:20 AM\",\r\n        Time_To: \"12:35 PM\"\r\n    },\r\n    {\r\n        LectureID: 4,\r\n        Lecture: \"L4\",\r\n        Time_From: \"12:40 PM\",\r\n        Time_To: \"01:55 PM\"\r\n    },\r\n    {\r\n        LectureID: 5,\r\n        Lecture: \"L5\",\r\n        Time_From: \"02:00 PM\",\r\n        Time_To: \"03:15 PM\"\r\n    },\r\n    {\r\n        LectureID: 6,\r\n        Lecture: \"L6\",\r\n        Time_From: \"03:20 PM\",\r\n        Time_To: \"04:35 PM\"\r\n    },\r\n    {\r\n        LectureID: 7,\r\n        Lecture: \"L7\",\r\n        Time_From: \"04:50 PM\",\r\n        Time_To: \"06:05 PM\"\r\n    },\r\n    {\r\n        LectureID: 8,\r\n        Lecture: \"L8\",\r\n        Time_From: \"06:15 PM\",\r\n        Time_To: \"07:30 PM\"\r\n    }\r\n]\r\n","export default class GlobalEmitterService {\r\n    static emit = (status) => {\r\n        const event = new CustomEvent('spinner-load', { detail: status });\r\n        window.dispatchEvent(event);\r\n    }\r\n\r\n    // static loggedInEmitter = (loggedIn) => {\r\n    //     const event = new CustomEvent('auth-changed', { detail: loggedIn });\r\n    //     window.dispatchEvent(event);\r\n    // }\r\n}","const ENV_URL = 'https://api.aayamcareerinstitute.co.in/api'; // producation fn\r\nconst DEV_URL = 'http://localhost:5001'; // producation fn\r\nconst BASE_URL= ENV_URL\r\n\r\n\r\n\r\nexport const URL = {\r\n    UPLOAD_FILE: BASE_URL + '/UploadFilesAttachment',\r\n    GET_UPLOAD_FILE_URL: BASE_URL + '/GetFiles', \r\n    GET_SAVE_TIMETABLE_URL: BASE_URL+ '/AddUpdateTimeTable',\r\n    GET_ALL_TT: BASE_URL + '/GetTimeTable', \r\n\r\n    GET_EDIT_TT: BASE_URL + '/GetTimeTableByDate',\r\n    REMOVE_TT: BASE_URL + '/DeleteTimeTable',\r\n\r\n\r\n\r\n\r\n};  \r\n","import React, { useState, useEffect } from 'react';\r\nimport { batch } from '../List/List';\r\nimport { teachers_list } from '../List/List';\r\n// import { teachers_list } from '../../../const/teacherList';\r\n// import { batch } from '../../../const/batchList';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledAlert } from 'reactstrap';\r\nimport \"./TeacherForm.css\";\r\n\r\nconst AddTeacher = ({ showModal, setShowModal, teacherList }) => {\r\n\r\n  /************************************Use Effect****************************************** */\r\n  useEffect(() => {\r\n    if (showModal) {\r\n      const fetchApiData = async () => {\r\n        try {\r\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\r\n          const result = await response.json();\r\n          setApiData(result);\r\n        } catch (error) {\r\n        }\r\n      };\r\n\r\n      fetchApiData();\r\n    }\r\n  }, [showModal]);\r\n\r\n  /***********************Use State***************************************************** */\r\n  const [faculties, setFaculties] = useState(teacherList);\r\n  // const [batches, setBatches] = useState(JSON.parse(localStorage.getItem('batches')) || batch);\r\n  const [apiData, setApiData] = useState({});\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n  const [showAlert, setShowAlert] = useState(\"\");\r\n  const [timeOfAlert, setTimeOfAlert] = useState(false);\r\n\r\n  /*************************other consts*************************************************** */\r\n  const { Object: responseObject = {} } = apiData;\r\n  const { Batch = [], FacultyList = [], UserList = [] } = responseObject;\r\n  const facultyNameMap = {};\r\n\r\n  UserList.forEach((user) => {\r\n    facultyNameMap[user.UserID] = user.UserName;\r\n  });\r\n  /****************************************methods******************************************* */\r\n  const handleCheckboxChange = (event) => {\r\n    const { name, checked } = event.target;\r\n    setCheckedItems({\r\n      ...checkedItems,\r\n      [name]: checked,\r\n    });\r\n  };\r\n\r\n  const updatedFacultyList = FacultyList.map((faculty) => ({\r\n    ...faculty,\r\n    Faculty: facultyNameMap[faculty.FacultyID] || faculty.Faculty,\r\n  }));\r\n\r\n  const addToFaculty = () => {\r\n    const newTeachersList = teacherList;\r\n\r\n    for (const facultyID in checkedItems) {\r\n      if (checkedItems[facultyID]) {\r\n        const selectedItem = updatedFacultyList.find(\r\n          (faculty) => faculty.FacultyID === parseInt(facultyID)\r\n        );\r\n\r\n        if (selectedItem) {\r\n          const facultyUser = UserList.find(\r\n            (user) => user.UserID === selectedItem.FacultyID\r\n          );\r\n          const facultyName = facultyUser ? facultyUser.UserName : selectedItem.Faculty;\r\n\r\n          const isTeacherAlreadyAdded = newTeachersList.some(\r\n            (teacher) => teacher.FacultyID === selectedItem.FacultyID\r\n          );\r\n\r\n          if (!isTeacherAlreadyAdded) {\r\n            newTeachersList.push({\r\n              FacultyID: selectedItem.FacultyID,\r\n              Faculty: facultyName,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setFaculties(newTeachersList);\r\n    if (!timeOfAlert) {\r\n      setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\r\n        Teachers added successfully\r\n      </UncontrolledAlert>);\r\n      setTimeout(() => {\r\n        setTimeOfAlert(false);\r\n        setShowAlert(\"\");\r\n      }, 3000);\r\n    };\r\n    closeModal();\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  /**********************************************Template to return******************************** */\r\n  return (\r\n    <div>\r\n      <Modal isOpen={showModal} toggle={closeModal} centered={true}>\r\n        <ModalHeader toggle={closeModal}>Select Teachers from the list</ModalHeader>\r\n        <ModalBody>\r\n          {showAlert}\r\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\r\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\r\n              {updatedFacultyList.map((faculty) => {\r\n                const { FacultyID, bgColor, className } = faculty;\r\n                const facultyUser = UserList.find((user) => user.UserID === FacultyID);\r\n                const facultyName = facultyUser ? facultyUser.UserName : faculty.Faculty;\r\n                return (\r\n                  <li key={faculty.FacultyID}>\r\n                    <div className=\"add-faculty-style\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        name={faculty.FacultyID}\r\n                        checked={checkedItems[faculty.FacultyID] || false}\r\n                        onChange={handleCheckboxChange}\r\n                        className=\"addfaculty-checkbox-style\"\r\n                      />\r\n                      {facultyName}\r\n                    </div>\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={addToFaculty}>Add</Button>{' '}\r\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default AddTeacher;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import GlobalEmitterService from '../service/GlobalEmitterService';\r\nimport { URL } from '../const/url';\r\n\r\nexport default class TtApi {\r\n    getTtList = async () => {\r\n        try {\r\n            GlobalEmitterService.emit(true);           // GlobalEmitterService.emit is made true for adding spinner untill api is completed\r\n            const res = await fetch(URL.GET_ALL_TT, {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getEditTt = async (fromDateEdit) => {\r\n        try {\r\n            // const formData = new FormData();\r\n            // formData.append('file', file, file.name);\r\n            GlobalEmitterService.emit(true);\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.GET_EDIT_TT, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: JSON.stringify({\r\n                    FromDate: fromDateEdit.replaceAll(\"-\", \"/\"),\r\n                })\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n\r\n    addUpdateTt = async (ttRequestBody) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.GET_SAVE_TIMETABLE_URL, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: JSON.stringify(ttRequestBody)\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    removeTtById = async (timeTableID) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            // const formData = new FormData();\r\n            // formData.append('file', file, file.name);\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.REMOVE_TT, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: timeTableID\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n}","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { batch } from '../List/List';\r\n// import { batch } from '../../../const/batchList';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledAlert } from 'reactstrap';\r\nimport \"./AddBatch.css\"\r\n\r\nconst AddBatch = ({ showModal, setShowModal, batchList }) => {\r\n  /******************************************Use Effect********************************************** */\r\n  useEffect(() => {\r\n    if (showModal) {\r\n      const fetchApiData = async () => {\r\n        try {\r\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\r\n          const result = await response.json();\r\n          setApiData(result);\r\n        } catch (error) {\r\n        }\r\n      };\r\n      fetchApiData();\r\n    }\r\n  }, [showModal]);\r\n  /********************************************Use State****************************************** */\r\n  const [batches, setBatches] = useState(batchList);\r\n  const [apiData, setApiData] = useState({});\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n  const [showAlert, setShowAlert] = useState(\"\");\r\n  const [timeOfAlert, setTimeOfAlert] = useState(false);\r\n\r\n\r\n  /*****************************Other consts******************************************************** */\r\n  const { Object: responseObject = {} } = apiData;\r\n  const { Batch = [] } = responseObject;\r\n\r\n  /***************************************Methods*************************************************** */\r\n  const handleCheckboxChange = (event) => {\r\n    const { name, checked } = event.target;\r\n    setCheckedItems({\r\n      ...checkedItems,\r\n      [name]: checked,\r\n    });\r\n  };\r\n\r\n  const addToBatch = () => {\r\n    const newBatches = batchList;\r\n    for (const batchID in checkedItems) {\r\n      if (checkedItems[batchID]) {\r\n        const selectedItem = Batch.find((batch) => batch.BatchID === parseInt(batchID));\r\n        if (selectedItem && !newBatches.find((batch) => batch.BatchID === selectedItem.BatchID)) {\r\n          newBatches.push({\r\n            BatchID: selectedItem.BatchID,\r\n            Batch: selectedItem.Batch,\r\n            CourseID: selectedItem.CourseID,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    setBatches(newBatches);\r\n    if (!timeOfAlert) {\r\n      setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\r\n        Batches added successfully\r\n      </UncontrolledAlert>);\r\n\r\n      setTimeout(() => {\r\n        setTimeOfAlert(false);\r\n        setShowAlert(\"\");\r\n      }, 3000);\r\n\r\n    };\r\n    closeModal();\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  /***************************Template to return******************************************************* */\r\n  return (\r\n    <div>\r\n      <Modal centered={true} isOpen={showModal} toggle={closeModal}>\r\n        <ModalHeader toggle={closeModal}>Select Batches from the list</ModalHeader>\r\n        <ModalBody>\r\n          {showAlert}\r\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\r\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\r\n              {Batch.map((batch) => (\r\n                <li key={batch.BatchID}>\r\n                  <div className=\"add-batch-style\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name={batch.BatchID}\r\n                      checked={checkedItems[batch.BatchID] || false}\r\n                      onChange={handleCheckboxChange}\r\n                      className=\"addbatch-checkbox-style\"\r\n                    />\r\n                    {batch.Batch}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={addToBatch}>Add</Button>{' '}\r\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default AddBatch;\r\n\r\n","import GlobalEmitterService from '../service/GlobalEmitterService';\r\nimport { URL } from '../const/url';\r\n\r\nexport default class UploadApi {\r\n    // getUserWalletBalance = async (userId) => {\r\n    //     try {\r\n    //         GlobalEmitterService.emit(true);\r\n    //         const token = `Bearer ${AuthService.getToken()}`;\r\n    //         const res = await fetch(URL.USER_WALLET_BALANCE + '?' + new URLSearchParams({\r\n    //             userId\r\n    //         }), {\r\n    //             method: 'GET',\r\n    //             headers: { 'Content-Type': 'application/json', 'Authorization': token },\r\n    //         });\r\n    //         const result = await res.json();\r\n    //         GlobalEmitterService.emit(false);\r\n    //         return result;\r\n    //     } catch (e) {\r\n    //         GlobalEmitterService.emit(false);\r\n    //         throw new Error(e.message, e.options);\r\n    //     }\r\n    // }\r\n\r\n\r\n    getWattsappApi = async (url, message, cell, fileName) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            // https://ziper.io/api/send.php?number=917898118503&type=media&message=test%20message&media_url=https://api.aayamcareerinstitute.co.in//Uploads/Files/File_3431223213168.pdf&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/send.php\" + '?' + new URLSearchParams({\r\n                number: cell,\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"647B3C9AA8D0A\",\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n\r\n    getWattsappGroupApiTeachers = async (url, message, fileName) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\r\n                // group_id: \"919977116612-1595572006@g.us\",\r\n                group_id: \"919977116612-1595572006@g.us\",\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"647B3C9AA8D0A\",\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getWattsappGroupApiOthers = async (url, message, fileName) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\r\n                group_id: \"919826362001-1628170376@g.us\",\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"647B3C9AA8D0A\", \r\n\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    uplaodFile = async (file) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            const formData = new FormData();\r\n            formData.append('file', file, file.name);\r\n            const res = await fetch(URL.UPLOAD_FILE, {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getUploadedFile = async () => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            const res = await fetch(URL.GET_UPLOAD_FILE_URL, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({})\r\n\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n}","export const COLORS = [\"#D4E6F1\", \"#E8DAEF\", \"#008080\", \"#808000\", \"#C39BD3\", \"#76D7C4\", \"#3498DB\", \"#358b79\", \"#847f86\", \"rgb(251, 235, 9)\", \"#CA6F1E\", \"#CCCCFF\", \"#F4D03F\", \"rgb(199, 185, 84)\", \"#979A9A\", \"#F0B27A\", \"rgb(117, 98, 179)\", \"#CD5C5C\", \"#40E0D0\", \"#DAF7A6\",\"#CECCA9\", \"#808000\", \"#FADBD8\", \"green\", \"yellow\", \"white\", \"red\", \"pink\"]\r\n","import html2canvas from 'html2canvas';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport { Alert, Badge, Button, ButtonGroup, Col, DropdownItem, DropdownMenu, DropdownToggle, Form, FormGroup, Input, Row, UncontrolledAlert, UncontrolledDropdown } from 'reactstrap';\r\nimport TtApi from '../../../api/tt.api.js';\r\nimport UploadApi from '../../../api/upload.api.js';\r\nimport { COLORS } from '../../../const/color.const.js';\r\nimport AddBatch from '../AddBatch/AddBatch.js';\r\nimport { batch, teachers_list, time } from '../List/List.js';\r\nimport AddTeacher from '../TeacherForm/TeacherForm.js';\r\nimport \"./TimeTable.scss\";\r\n\r\nconst TimeTable = () => {\r\n  /***************************************** Use Params Section******************************/\r\n  /**************************************** const Section ************************************/\r\n\r\n  /**************************************** Use Effect Section ************************************/\r\n  useEffect(() => {\r\n    appenColorTOTeacherList();\r\n  }, []);\r\n\r\n  /**************************************** State Section *****************************************/\r\n  const [draggedTeacher, setDraggedTeacher] = useState({}); // Contains dragged teacher\r\n  const [lectureList, setLectureList] = useState([]);\r\n  const [teacherAssignment, setTeacherAssignment] = useState({});\r\n  const [teacherCounter, setTeacherCounter] = useState({}); // key: teacherId, value: counter\r\n  const [lectureTeacherCounter, setLectureTeacherCounter] = useState({}); // key: lectureId_teacherId, value: counter to check duplicate rows\r\n  const [duplicateTeacherDetectedInRow, setDuplicateTeacherDetectedInRow] = useState(false);\r\n  const [draggedCellKey, setDraggedCellKey] = useState(null);\r\n\r\n  // contains key of teacher asignment which is grag within the table\r\n  const [batchList, setBatchList] = useState(batch);\r\n  const [teacherList, setTeacherList] = useState(teachers_list);\r\n  const [showAddBatchModal, setShowAddBatchModal] = useState(false); //for add Batch popup\r\n  const [showAddTeacherModal, setShowAddTeacherModal] = useState(false);\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n  const [showAlert, setShowAlert] = useState(\"\");\r\n  const [timeOfAlert, setTimeOfAlert] = useState(false);\r\n  // const [numberList, setNumberList] = useState([918871688429, 917898118503, 918349215747]);\r\n  const [numberList, setNumberList] = useState([917898118503, 918349215747,919826362001,918349215747,917314058393,917869597239,919977116612,918085390900,918302184021,918358810742,919893640561,919713519598,919713030834,919827274005,919691938832,917043127836,919977711607,917298519996,919713191848,918871841238,917007794323,919669889020,918770153381,919770432150]);\r\n  const divRef = useRef(null);\r\n\r\n  /**************************************** Component Method Section *********************************/\r\n  /**\r\n   * \r\n   * @param {*} e drag event\r\n   * @param {*} teacherInfo teacherVo\r\n   * Calls when drag start & drag the reacher\r\n   */\r\n  const dragStart = (e, teacherDragged) => {\r\n    setDraggedTeacher(teacherDragged);\r\n  };\r\n\r\n  const appenColorTOTeacherList = () => {\r\n    //due to this method once the color assigned to the teacher will stick to that teacher only i.e on deleting the teacher from teacher list the color will aslo be deleted i.e will not assign to the next teacher.\r\n    const stateTeacherList = [];\r\n    teachers_list.forEach((teacher, i) => {\r\n      teacher.color = COLORS[i];\r\n      stateTeacherList.push(teacher);\r\n    });\r\n    setTeacherList([...stateTeacherList]);\r\n  };\r\n\r\n  const allowDrop = (ev) => {\r\n    let t = ev.target;\r\n    while (t && (!t.classList || !t.classList.contains(\"each-block\"))) {\r\n      t = t.parentNode;\r\n    }\r\n    if (t && t.innerText.trim() !== \"\") {\r\n      // Prevent drop event if cell is not empty\r\n      return false;\r\n    }\r\n    ev.preventDefault();\r\n  };\r\n\r\n  // Prepare lecture list\r\n  const updateLectureListOnDrop = (lecture, batch, teacher) => {\r\n    const stateLectureList = lectureList;\r\n    const lectureDto = {};\r\n    lectureDto.ID = \"0\";\r\n    lectureDto.TimeTableID = \"0\";\r\n    lectureDto.LectureName = \"\";\r\n    lectureDto.Batch = batch;\r\n    lectureDto.Lecture = lecture;\r\n    lectureDto.Subject = teacher.subject;\r\n    lectureDto.FacultyID = teacher.FacultyID;\r\n    lectureDto.IsActive = true;\r\n    lectureDto.CreatedByUserID = \"1\";\r\n    lectureDto.CreatedOnDate = \"02/05/2023\";\r\n    stateLectureList.push(lectureDto);\r\n    setLectureList([...stateLectureList]);\r\n  };\r\n\r\n  const updateTeacherCounterOnDrop = (teacher, lectureId) => {\r\n    const stateTeacherCounter = teacherCounter;\r\n    if (!stateTeacherCounter[teacher.FacultyID]) {\r\n      stateTeacherCounter[teacher.FacultyID] = 1;\r\n      setTeacherCounter({ ...stateTeacherCounter });\r\n      return;\r\n    }\r\n    // to update the counter of teacher when new teacher is droped into the cell of table\r\n    const key = lectureId + '_' + teacher.FacultyID;\r\n    if (lectureTeacherCounter && lectureTeacherCounter[key] && lectureTeacherCounter[key] > 1) {\r\n      return;\r\n    }\r\n    stateTeacherCounter[teacher.FacultyID] += 1;\r\n    setTeacherCounter({ ...stateTeacherCounter });\r\n  }\r\n\r\n  const checkDuplicateTeacherInRowOnDrop = (lectureId, teacherId) => {\r\n    const key = lectureId + '_' + teacherId;\r\n    const stateLectureTeacherCounter = lectureTeacherCounter;\r\n    if (!stateLectureTeacherCounter[key]) {\r\n      stateLectureTeacherCounter[key] = 1\r\n    } else {\r\n      stateLectureTeacherCounter[key] += 1\r\n    }\r\n    setLectureTeacherCounter({ ...stateLectureTeacherCounter });\r\n    if (stateLectureTeacherCounter[key] > 1) {\r\n      setDuplicateTeacherDetectedInRow(true);\r\n      setTimeout(() => {\r\n        setDuplicateTeacherDetectedInRow(false);\r\n      }, 3000); // Alert duration \r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On Drop\r\n   * Check if drops within the table if yes remove techer from current block by preserving the teacher and proceed for select teacher & if no proceed for select teacher\r\n   * set teacher assignment object\r\n   * set teature lecture list for api call (updateLectureListOnDrop)\r\n   * update teacher drop counter (updateTeacherCounterOnDrop)\r\n   * Check if teacher dropped in same row if yes show alert and set lecture vs teacher counter to use for blink (checkDuplicateTeacherInRowOnDrop)\r\n   * empty teacher state\r\n   * empty state used withing table drag\r\n   */\r\n  const handleDrop = (e, lecture, batch) => {\r\n    let selectedTeacher = draggedTeacher;\r\n    if (draggedCellKey) {\r\n      // if dragged within the table remove source & proceed for drop\r\n      const keyInside = draggedCellKey.lecture.LectureID + '_' + draggedCellKey.batch.BatchID;\r\n      selectedTeacher = teacherAssignment[keyInside];\r\n      removeTeacher(draggedCellKey.lecture.LectureID, draggedCellKey.batch.BatchID, teacherAssignment[keyInside].FacultyID);\r\n    }\r\n    const stateTeacherAssignment = teacherAssignment;\r\n    const key = lecture.LectureID + '_' + batch.BatchID;\r\n    teacherAssignment[key] = selectedTeacher;\r\n    setTeacherAssignment({ ...stateTeacherAssignment });\r\n    updateLectureListOnDrop(lecture, batch, selectedTeacher);\r\n    checkDuplicateTeacherInRowOnDrop(lecture.LectureID, selectedTeacher.FacultyID);\r\n    updateTeacherCounterOnDrop(selectedTeacher, lecture.LectureID);\r\n    setDraggedTeacher({});\r\n    setDraggedCellKey(null);\r\n  }\r\n\r\n  const removeTeacher = (lectureId, batchId, teacherId) => {\r\n    // Remove from teacher assignment\r\n    const key = lectureId + '_' + batchId;\r\n    const stateTeacherAssignment = teacherAssignment;\r\n    delete stateTeacherAssignment[key];\r\n    setTeacherAssignment({ ...stateTeacherAssignment });\r\n\r\n    // Remove from lecture list\r\n    const stateLectureList = lectureList;\r\n    const index = stateLectureList?.findIndex(row => row.Batch?.BatchID === batchId && row.Lecture?.LectureID === lectureId);\r\n    console.log(\"xxx\", index);\r\n    if (index >= 0) {\r\n      stateLectureList.splice(index, 1);\r\n      setLectureList([...stateLectureList]);\r\n    }\r\n    // To make not blink when teacher itself dragged from one place to other in same row\r\n    const stateLectureTeacherCounter = lectureTeacherCounter;\r\n    const lectureTeacherKey = lectureId + '_' + teacherId;\r\n    if (stateLectureTeacherCounter[lectureTeacherKey] > 1) {\r\n      stateLectureTeacherCounter[lectureTeacherKey] -= 1;\r\n    } else {\r\n      delete stateLectureTeacherCounter[lectureTeacherKey];\r\n    }\r\n    setLectureTeacherCounter(stateLectureTeacherCounter);\r\n\r\n    const keyLtId = lectureId + '_' + teacherId;\r\n    if (lectureTeacherCounter && lectureTeacherCounter[keyLtId] && lectureTeacherCounter[keyLtId] >= 1) {\r\n      return;\r\n    }\r\n\r\n    // Decrease one from teacher counter\r\n    const stateTeacherCounter = teacherCounter;\r\n    stateTeacherCounter[teacherId] -= 1;\r\n    if (stateTeacherCounter[teacherId] <= 0) {\r\n      delete stateTeacherCounter[teacherId];\r\n    }\r\n    setTeacherCounter(stateTeacherCounter);\r\n\r\n\r\n  }\r\n\r\n  // Called to provide class name if true set classname blink else empty\r\n  // return true if same teacher counter greater than one with respect to lectureId\r\n  const isTeacherDuplicateInLecture = (lectureId, teacherId) => {\r\n    if (!lectureId || !teacherId) {\r\n      return false;\r\n    }\r\n    const key = lectureId + '_' + teacherId;\r\n    console.log(key);\r\n    return lectureTeacherCounter[key] > 1;\r\n  };\r\n\r\n  const handleTableCellDragStart = (e, lecture, batch) => {\r\n    setDraggedCellKey({\r\n      lecture, batch\r\n    });\r\n  };\r\n\r\n  const onDragEnd = (e) => {\r\n    setDraggedTeacher({});\r\n  }\r\n\r\n  /*********************************************This below methods are added by jitendra from TimeTable.js***********************************/\r\n  const generateUID = () => {\r\n    // I generate the UID from two parts here \r\n    // to ensure the random number provide enough bits.\r\n    var firstPart = (Math.random() * 46656) | 0;\r\n    var secondPart = (Math.random() * 46656) | 0;\r\n    firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\r\n    secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\r\n    return firstPart + secondPart;\r\n  }\r\n\r\n  const convertToImage = async () => {\r\n    divRef.current.style.width = \"max-content\";\r\n    const canvas = await html2canvas(divRef.current);\r\n    const imgData = canvas.toDataURL();\r\n    /*converting page64 url got as imgData into file Object by using blob below*/\r\n    const byteString = atob(imgData.split(',')[1]);\r\n    const mimeString = imgData.split(',')[0].split(':')[1].split(';')[0];\r\n    const ia = new Uint8Array(byteString.length);\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n    }\r\n    const blob = new Blob([ia], { type: mimeString });\r\n    const imageName = generateUID();\r\n    const file = new File([blob], imageName + \".jpg\");\r\n    const fileName = imageName + \".jpg\";\r\n    const result = await new UploadApi().uplaodFile(file);\r\n    divRef.current.style.width = \"100%\";\r\n    if (result === \"Success\") {\r\n      const data = await new UploadApi().getUploadedFile();\r\n      if (data.Object?.length > 0) {\r\n        const fileDetail = data.Object.reverse().find(obj => { return obj.Title?.indexOf(imageName) >= 0 });\r\n        for (let i = 0; i < numberList.length; i++) {\r\n          try {\r\n            const cell = numberList[i];\r\n            /*CHECK THE DETAILS OF THIS GETWATTSAPPAPI IN UPLOAD.API.JS FILE IN API FOLDER*/\r\n            await new UploadApi().getWattsappApi(fileDetail.LongURL, \"time table\", cell, fileName);\r\n            // await new UploadApi().getWattsappGroupApiOthers(fileDetail.LongURL, \"time table\", fileName);\r\n\r\n            continue;\r\n          } catch (e) {\r\n            continue;\r\n            // console.log(\"error\")\r\n          }\r\n          // try {\r\n          //   await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\r\n          // } catch (e) {\r\n          //   console.log(\"error\")\r\n          // }\r\n        }\r\n      }\r\n    }\r\n    if (!timeOfAlert) {\r\n      setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\r\n        Time table image sent successfully\r\n      </UncontrolledAlert>);\r\n      setTimeout(() => {\r\n        setTimeOfAlert(false);\r\n        setShowAlert(\"\");\r\n      }, 3000);\r\n    };\r\n\r\n  }\r\n\r\n  const onChangeFromDate = (e) => {\r\n    setFromDate(e.target.value);\r\n  }\r\n\r\n  const onChangeToDate = (e) => {\r\n    setToDate(e.target.value);\r\n  }\r\n\r\n  const onAddBatch = () => {\r\n    // setAddBatch(<AddBatch batchList={batchList} />)\r\n    setShowAddBatchModal(true);\r\n  }\r\n\r\n  const onDeleteBatch = (batchID) => {\r\n    const confirmDelete = window.confirm('Are you sure you want to delete this batch?');\r\n    if (confirmDelete) {\r\n      const updatedBatches = batchList.filter((each) => each.BatchID !== batchID);\r\n      setBatchList(updatedBatches);\r\n    }\r\n  };\r\n\r\n  const onAddTeacher = () => {\r\n    setShowAddTeacherModal(true);\r\n  }\r\n\r\n  const onDeleteTeacher = (facultyID) => {\r\n    const confirmDelete = window.confirm('Are you sure you want to delete this Faculty?');\r\n    if (confirmDelete) {\r\n      const updatedTeachers = teacherList.filter((each) => each.FacultyID !== facultyID);\r\n      setTeacherList(updatedTeachers);\r\n    };\r\n  }\r\n\r\n  const saveTable = async () => {\r\n    const sentBatchID = batchList.map(item => item.BatchID)\r\n    const body = {\r\n      TimeTableID: 0,\r\n      Description: \"time table save\",\r\n      DateType: !!toDate ? \"multiple\" : \"single\",\r\n      FromDate: fromDate,\r\n      ToDate: toDate,\r\n      ShiftID: 1,\r\n      SessionID: 6,\r\n      Session: \"2023-24\",\r\n      BatchID: sentBatchID,\r\n      LectureID: [\r\n        1, 2, 3, 4, 5, 6, 7, 8\r\n      ],\r\n      IsActive: true,\r\n      CreatedByUserID: 1,\r\n      CreatedOnDate: new Date(),\r\n      LectureList: lectureList\r\n    };\r\n\r\n    const result = await new TtApi().addUpdateTt(body);\r\n    if (result === 'Success') {\r\n      if (!timeOfAlert) {\r\n        setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\r\n          time table saved successfully\r\n        </UncontrolledAlert>);\r\n        setTimeout(() => {\r\n          setTimeOfAlert(false);\r\n          setShowAlert(\"\");\r\n        }, 3000);\r\n      };\r\n\r\n    } else {\r\n      if (!timeOfAlert) {\r\n        setShowAlert(<UncontrolledAlert color=\"danger\" fade={false}>\r\n          {result?.ExceptionMessage ?? 'An error has occurred.'}\r\n        </UncontrolledAlert>);\r\n        setTimeout(() => {\r\n          setTimeOfAlert(false);\r\n          setShowAlert(\"\");\r\n        }, 3000);\r\n      };\r\n    }\r\n  };\r\n\r\n  const clearAll = (key) => {\r\n    // const key = lectureId + '_' + batchId\r\n    const stateTeacherAssignment = teacherAssignment;\r\n    delete stateTeacherAssignment[key];\r\n    setTeacherAssignment({ stateTeacherAssignment });\r\n  }\r\n\r\n  /**************************************** Template Section *****************************************/\r\n  return (\r\n    <>\r\n      <div className=\"bg-container\">\r\n        <Row>\r\n          <Col>\r\n            {showAlert}\r\n            {\r\n              duplicateTeacherDetectedInRow ? <Alert color=\"warning\">\r\n                Two same teachers found in the same row\r\n              </Alert> : <></>\r\n            }\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* <Row>\r\n          <Col>\r\n            <h1 className='heading-style'>CLASS SCHEDULE</h1>\r\n          </Col>\r\n        </Row> */}\r\n\r\n        <Row>\r\n          <Col>\r\n            <Form>\r\n              <div>\r\n                <Row>\r\n                  <div className=\"col-sm-12 col-md-3 label-date-allignment\">\r\n                    <span className=\"date-label-style\">From<span style={{ color: \"red\" }}>*</span>:&nbsp;&nbsp;</span>\r\n                    <Input\r\n                      id=\"fromDate\"\r\n                      name=\"date\"\r\n                      type=\"date\"\r\n                      defaultValue={fromDate}\r\n                      onChange={(e) => { onChangeFromDate(e) }}\r\n                      className='input-size'\r\n                      min={new Date().toISOString().split('T')[0]}\r\n                      placeholder='From Date'\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-sm-12 col-md-3 label-date-allignment\">\r\n                    <span className=\"date-label-style\">To:&nbsp;&nbsp;</span>\r\n                    <Input\r\n                      id=\"toDate\"\r\n                      name=\"date\"\r\n                      type=\"date\"\r\n                      defaultValue={toDate}\r\n                      onChange={(e) => { onChangeToDate(e) }}\r\n                      className='input-size'\r\n                      min={new Date().toISOString().split('T')[0]}\r\n                    />\r\n                  </div>\r\n                  <div className=\"d-lg-none\">\r\n                    <br></br>\r\n                    <div className=\"button-group\">\r\n                      <Button className=\"btn\" color=\"info\" onClick={saveTable} disabled={fromDate === ''}>\r\n                        Save\r\n                      </Button>\r\n                      <Button className=\"btn\" color=\"info\" onClick={convertToImage}>\r\n                        Post\r\n                      </Button>\r\n                      <ButtonGroup >\r\n                        <UncontrolledDropdown>\r\n                          <DropdownToggle color=\"info\" caret>\r\n                            More Actions\r\n                          </DropdownToggle>\r\n                          <DropdownMenu>\r\n                            <DropdownItem onClick={onAddBatch}>\r\n                              Add Batches\r\n                            </DropdownItem>\r\n                            <DropdownItem divider />\r\n                            <DropdownItem onClick={onAddTeacher}>\r\n                              Add Teachers\r\n                            </DropdownItem>\r\n                            <DropdownItem divider />\r\n                            <DropdownItem onClick={clearAll}>\r\n                              Clear ALL\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </ButtonGroup>\r\n                    </div>\r\n                    <br></br>\r\n                  </div>\r\n                  <div className=\"d-none d-md-block col-md-6\">\r\n                    <div className=\"button-group\">\r\n                      <Button className=\"btn \" color=\"info\" onClick={onAddBatch}>\r\n                        Add Batches\r\n                      </Button>\r\n                      <Button className=\"btn\" color=\"info\" onClick={onAddTeacher}>\r\n                        Add Teachers\r\n                      </Button>\r\n                      <Button className=\"btn\" color=\"info\" onClick={saveTable} disabled={fromDate === ''}>\r\n                        Save\r\n                      </Button>\r\n                      <Button className=\"btn\" color=\"info\" onClick={convertToImage}>\r\n                        Post\r\n                      </Button>\r\n                      <Button className=\"btn\" color=\"info\" onClick={clearAll}>\r\n                        Clear ALL\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Row>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col>\r\n            <div>\r\n              {showAddBatchModal && <AddBatch showModal={showAddBatchModal} setShowModal={setShowAddBatchModal} batchList={batchList} />}\r\n              {showAddTeacherModal && <AddTeacher showModal={showAddTeacherModal} setShowModal={setShowAddTeacherModal} teacherList={teacherList} />}\r\n              <div ref={divRef} className='table-container'>\r\n                <table className='table-style'>\r\n                  <tbody>\r\n                    <div className=\"for-time\">\r\n                      <tr>\r\n                        <td className='F-style time-style'>Time</td>\r\n                        {batchList.map((each) => {\r\n                          return (\r\n                            <td className='F-style batch-style' key={each.BatchID}>{each.Batch}\r\n                              <button className=\"delete-style\" onClick={() => onDeleteBatch(each.BatchID)}><RxCross2 /></button>\r\n                            </td>\r\n                          )\r\n                        })}\r\n                      </tr>\r\n                    </div>\r\n                    <tr >\r\n                      {time.map((t) => {\r\n                        return (\r\n\r\n                          <div >\r\n                            <td className='F-style time-style'>{t.Time_From}-{t.Time_To}</td>\r\n                            {batchList.map((b) => {\r\n                              const key = t.LectureID + '_' + b.BatchID\r\n                              return (\r\n                                <td\r\n                                  draggable={!!teacherAssignment[key]?.Faculty}\r\n                                  onDragOver={allowDrop}\r\n                                  onDrop={(e) => handleDrop(e, t, b)}\r\n                                  onDragStart={(e) => handleTableCellDragStart(e, t, b)}\r\n                                  key={key}\r\n                                  id={key}\r\n                                  className={`each-block ${isTeacherDuplicateInLecture(t.LectureID, teacherAssignment[key]?.FacultyID ?? null) ? \"blink\" : \"\"}`}\r\n                                  style={{ backgroundColor: teacherAssignment[key]?.color }}\r\n                                >\r\n                                  <div className={`teacname-cross-style ${teacherAssignment[key]?.className} `}>\r\n                                    <div className=\"teacher-name\" >\r\n                                      {teacherAssignment[key]?.Faculty}\r\n                                    </div>\r\n                                    <div className=\"cross-btn-container\">\r\n                                      {teacherAssignment[key]?.Faculty ? (\r\n                                        <button\r\n                                          className=\"cross-style\"\r\n                                          onClick={() => removeTeacher(t.LectureID, b.BatchID, teacherAssignment[key].FacultyID)}\r\n                                        >\r\n                                          <RxCross2 />\r\n                                        </button>\r\n                                      ) : <></>}\r\n                                    </div>\r\n                                  </div>\r\n                                </td>\r\n                              )\r\n                            })}\r\n                          </div>\r\n                        )\r\n                      })}\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col>\r\n            <div className='teacher-container'>\r\n              {teacherList.map((teacher, index) => {\r\n                const { FacultyID, Faculty } = teacher;\r\n                return (\r\n                  <div\r\n                    style={{ backgroundColor: teacher.color }}\r\n                    key={FacultyID}\r\n                    className=\"teacher-item\"\r\n                    draggable={true}\r\n                    onDragStart={(e) => dragStart(e, teacher)}\r\n                    onDragEnd={(e) => onDragEnd(e)}\r\n                  >\r\n                    <span>{Faculty}</span>\r\n                    {teacherCounter[FacultyID] > 0 && (\r\n                      <Badge className=\"counter-item\">\r\n                        {teacherCounter[FacultyID]}\r\n                      </Badge>\r\n                    )}\r\n                    <span onClick={() => onDeleteTeacher(teacher.FacultyID)} className=\"remove-icon\" color='danger'>\r\n                      <RxCross2 />\r\n                    </span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default TimeTable;"],"sourceRoot":""}