{"version":3,"sources":["pages/TTPages/List/List.js","service/GlobalEmitterService.js","const/url.js","pages/TTPages/TeacherForm/TeacherForm.js","api/tt.api.js","pages/TTPages/AddBatch/AddBatch.js","api/upload.api.js","const/color.const.js","pages/TTPages/TimeTable/TimeTable.js"],"names":["teachers_list","FacultyID","Faculty","subject","batch","BatchID","Batch","CourseID","time","LectureID","Lecture","Time_From","Time_To","GlobalEmitterService","emit","status","event","CustomEvent","detail","window","dispatchEvent","BASE_URL","URL","UPLOAD_FILE","GET_UPLOAD_FILE_URL","GET_SAVE_TIMETABLE_URL","GET_ALL_TT","GET_EDIT_TT","REMOVE_TT","AddTeacher","_ref","showModal","setShowModal","teacherList","useEffect","async","response","fetch","result","json","setApiData","error","fetchApiData","faculties","setFaculties","useState","apiData","checkedItems","setCheckedItems","showAlert","setShowAlert","timeOfAlert","setTimeOfAlert","Object","responseObject","FacultyList","UserList","facultyNameMap","forEach","user","UserID","UserName","handleCheckboxChange","name","checked","target","updatedFacultyList","map","faculty","closeModal","_jsx","children","_jsxs","Modal","isOpen","toggle","centered","ModalHeader","ModalBody","className","style","maxHeight","overflowY","maxWidth","listStyle","bgColor","facultyUser","find","facultyName","type","onChange","ModalFooter","Button","color","onClick","addToFaculty","newTeachersList","facultyID","selectedItem","parseInt","some","teacher","push","UncontrolledAlert","fade","setTimeout","TtApi","constructor","getTtList","res","method","e","Error","message","options","getEditTt","myHeaders","Headers","append","headers","body","JSON","stringify","FromDate","fromDateEdit","replaceAll","addUpdateTt","ttRequestBody","removeTtById","timeTableID","AddBatch","batchList","batches","setBatches","addToBatch","newBatches","batchID","UploadApi","getWattsappApi","url","cell","fileName","URLSearchParams","number","media_url","filename","instance_id","access_token","getWattsappGroupApiTeachers","group_id","getWattsappGroupApiOthers","uplaodFile","formData","FormData","file","getUploadedFile","COLORS","TimeTable","appenColorTOTeacherList","draggedTeacher","setDraggedTeacher","lectureList","setLectureList","teacherAssignment","setTeacherAssignment","teacherCounter","setTeacherCounter","lectureTeacherCounter","setLectureTeacherCounter","duplicateTeacherDetectedInRow","setDuplicateTeacherDetectedInRow","draggedCellKey","setDraggedCellKey","setBatchList","setTeacherList","showAddBatchModal","setShowAddBatchModal","showAddTeacherModal","setShowAddTeacherModal","fromDate","setFromDate","toDate","setToDate","numberList","setNumberList","divRef","useRef","stateTeacherList","i","allowDrop","ev","t","classList","contains","parentNode","innerText","trim","preventDefault","handleDrop","lecture","selectedTeacher","keyInside","removeTeacher","stateTeacherAssignment","key","updateLectureListOnDrop","stateLectureList","lectureDto","Subject","IsActive","CreatedByUserID","CreatedOnDate","checkDuplicateTeacherInRowOnDrop","lectureId","teacherId","stateLectureTeacherCounter","updateTeacherCounterOnDrop","stateTeacherCounter","batchId","index","findIndex","row","_row$Batch","_row$Lecture","console","log","splice","lectureTeacherKey","keyLtId","isTeacherDuplicateInLecture","convertToImage","current","width","imgData","html2canvas","toDataURL","byteString","atob","split","mimeString","ia","Uint8Array","length","charCodeAt","blob","Blob","imageName","generateUID","firstPart","Math","random","secondPart","toString","slice","File","_data$Object","data","fileDetail","reverse","obj","_obj$Title","Title","indexOf","LongURL","onAddBatch","onAddTeacher","saveTable","sentBatchID","item","TimeTableID","Description","DateType","ToDate","ShiftID","SessionID","Session","Date","LectureList","_result$ExceptionMess","ExceptionMessage","clearAll","_Fragment","Row","Col","Alert","Form","Input","id","defaultValue","value","onChangeFromDate","min","toISOString","placeholder","onChangeToDate","disabled","ButtonGroup","UncontrolledDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","divider","ref","each","confirm","updatedBatches","filter","onDeleteBatch","RxCross2","b","_teacherAssignment$ke","_teacherAssignment$ke2","_teacherAssignment$ke3","_teacherAssignment$ke4","_teacherAssignment$ke5","_teacherAssignment$ke6","_teacherAssignment$ke7","onDoubleClick","handleCellDoubleClick","draggable","onDragOver","onDrop","onDragStart","concat","backgroundColor","onDragEnd","handleDoubleClick","Badge","updatedTeachers","onDeleteTeacher"],"mappings":"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","file":"static/js/5.7f3f4c09.chunk.js","sourcesContent":["import {v4 as uuidv4} from \"uuid\"\r\nexport const teachers_list = [\r\n        {\r\n            FacultyID: 22,\r\n            Faculty: \"MYK\",\r\n            subject: \"Physics\"\r\n        },\r\n        \r\n        {\r\n            FacultyID: 3038,\r\n            Faculty: \"KPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n\r\n        // {\r\n        //     FacultyID: 2029,\r\n        //     Faculty: \"MRS\",\r\n        //     subject:\"Chemistry\"\r\n        // },\r\n\r\n        {\r\n            FacultyID: 3051,\r\n            Faculty: \"MAS\",\r\n            subject:\"Physics\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 3050,\r\n            Faculty: \"RSS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 25,\r\n            Faculty: \"NMS\",\r\n            subject:\"Biology\"\r\n        },\r\n        {\r\n            FacultyID: 3037,\r\n            Faculty: \"HDS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3032,\r\n            Faculty: \"MNM\",\r\n            subject: \"Biology\"\r\n        },\r\n        \r\n        {\r\n            FacultyID: 1023,\r\n            Faculty: \"SJ\",\r\n            subject:\"Biology\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 1025,\r\n            Faculty: \"AJ\",\r\n            subject:\"Biology\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 1026,\r\n            Faculty: \"DMPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n\r\n        \r\n       \r\n        \r\n        {\r\n            FacultyID: 1027,\r\n            Faculty: \"PSJ\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 3033,\r\n            Faculty: \"YBS\",\r\n            subject:\"Biology\"\r\n        },\r\n        {\r\n            FacultyID: 3030,\r\n            Faculty: \"AKS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 2028,\r\n            Faculty: \"AMS\",\r\n            subject:\"Maths\"\r\n        },\r\n        {\r\n            FacultyID: 3031,\r\n            Faculty: \"NDS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 3052,\r\n            Faculty: \"HWS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 1029,\r\n            Faculty: \"JRS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3053,\r\n            Faculty: \"HTS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3054,\r\n            Faculty: \"NPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3059,\r\n            Faculty: \"SKS\",\r\n            subject:\"Biology\"\r\n        },\r\n        // newly added faculty on 12/08/23\r\n        {\r\n            FacultyID: 3056,\r\n            Faculty: \"AMK\",\r\n            subject: \"Biology\"\r\n        },\r\n        {\r\n            FacultyID: 3058,\r\n            Faculty: \"DPS\",\r\n            subject: \"Chemistry\"\r\n        }\r\n        \r\n\r\n    ]; \r\n    \r\n\r\nexport const batch= [\r\n    {\r\n        BatchID: 1,\r\n        Batch: \"A1\",\r\n        CourseID: 3\r\n    },\r\n    {\r\n        BatchID: 2,\r\n        Batch: \"B1\",\r\n        CourseID: 2\r\n    },\r\n    {\r\n        BatchID: 3,\r\n        Batch: \"C1\",\r\n        CourseID: 1\r\n    },\r\n    {\r\n        BatchID: 6,\r\n        Batch: \"A2\",\r\n        CourseID: 3\r\n    },\r\n    \r\n    {\r\n        BatchID: 7,\r\n        Batch: \"A4\",\r\n        CourseID: 3\r\n    },\r\n    {\r\n        BatchID: 10,\r\n        Batch: \"A3\",\r\n        CourseID: 3\r\n    },\r\n    \r\n    {\r\n        BatchID: 15,\r\n        Batch: \"C2\",\r\n        CourseID: 1\r\n    },\r\n    \r\n    \r\n    //MORE BATCHES ADDED WITH A FAKE BATCHID AND FAKE COURSEID NEED TO CHANGE LATER\r\n\r\n    {\r\n        BatchID: 20,\r\n        Batch: \"JO1\",\r\n        CourseID: 13\r\n    },\r\n    {\r\n        BatchID: 22,\r\n        Batch: \"JXII-1\",\r\n        CourseID: 12\r\n    },\r\n    {\r\n        BatchID: 3042,\r\n        Batch: \"JXI-1\",\r\n        CourseID: 11\r\n    },\r\n    {\r\n        BatchID: 3049,\r\n        Batch: \"B2\",\r\n        CourseID: 2\r\n    },\r\n    {\r\n        BatchID: 3061,\r\n        Batch: \"JXI-2\",\r\n        CourseID: 11\r\n    },\r\n    {\r\n        BatchID: 3078,\r\n        Batch: \"JEE adv\",\r\n        CourseID: 13\r\n    },\r\n    \r\n    {\r\n        BatchID: 3079,\r\n        Batch: \"JEE XL\",\r\n        CourseID: 1025\r\n    }\r\n    \r\n]\r\n\r\n\r\nexport const time= [\r\n    {\r\n        LectureID: 1,\r\n        Lecture: \"L1\",\r\n        Time_From: \"08:30 AM\",\r\n        Time_To: \"09:45 AM\"\r\n    },\r\n    {\r\n        LectureID: 2,\r\n        Lecture: \"L2\",\r\n        Time_From: \"09:50 AM\",\r\n        Time_To: \"11:05 AM\"\r\n    },\r\n    {\r\n        LectureID: 3,\r\n        Lecture: \"L3\",\r\n        Time_From: \"11:20 AM\",\r\n        Time_To: \"12:35 PM\"\r\n    },\r\n    {\r\n        LectureID: 4,\r\n        Lecture: \"L4\",\r\n        Time_From: \"12:40 PM\",\r\n        Time_To: \"01:55 PM\"\r\n    },\r\n    {\r\n        LectureID: 5,\r\n        Lecture: \"L5\",\r\n        Time_From: \"02:00 PM\",\r\n        Time_To: \"03:15 PM\"\r\n    },\r\n    {\r\n        LectureID: 6,\r\n        Lecture: \"L6\",\r\n        Time_From: \"03:20 PM\",\r\n        Time_To: \"04:35 PM\"\r\n    },\r\n    {\r\n        LectureID: 7,\r\n        Lecture: \"L7\",\r\n        Time_From: \"04:50 PM\",\r\n        Time_To: \"06:05 PM\"\r\n    },\r\n    {\r\n        LectureID: 8,\r\n        Lecture: \"L8\",\r\n        Time_From: \"06:15 PM\",\r\n        Time_To: \"07:30 PM\"\r\n    }\r\n]\r\n","export default class GlobalEmitterService {\r\n    static emit = (status) => {\r\n        const event = new CustomEvent('spinner-load', { detail: status });\r\n        window.dispatchEvent(event);\r\n    }\r\n\r\n    // static loggedInEmitter = (loggedIn) => {\r\n    //     const event = new CustomEvent('auth-changed', { detail: loggedIn });\r\n    //     window.dispatchEvent(event);\r\n    // }\r\n}","const ENV_URL = 'https://api.aayamcareerinstitute.co.in/api'; // producation fn\r\nconst DEV_URL = 'http://localhost:5001'; // producation fn\r\nconst BASE_URL= ENV_URL\r\n\r\n\r\n\r\nexport const URL = {\r\n    UPLOAD_FILE: BASE_URL + '/UploadFilesAttachment',\r\n    GET_UPLOAD_FILE_URL: BASE_URL + '/GetFiles', \r\n    GET_SAVE_TIMETABLE_URL: BASE_URL+ '/AddUpdateTimeTable',\r\n    GET_ALL_TT: BASE_URL + '/GetTimeTable', \r\n\r\n    GET_EDIT_TT: BASE_URL + '/GetTimeTableByDate',\r\n    REMOVE_TT: BASE_URL + '/DeleteTimeTable',\r\n\r\n\r\n\r\n\r\n};  \r\n","import React, { useState, useEffect } from 'react';\r\nimport { batch } from '../List/List';\r\nimport { teachers_list } from '../List/List';\r\n// import { teachers_list } from '../../../const/teacherList';\r\n// import { batch } from '../../../const/batchList';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledAlert } from 'reactstrap';\r\nimport \"./TeacherForm.css\";\r\n\r\nconst AddTeacher = ({ showModal, setShowModal, teacherList }) => {\r\n\r\n  /************************************Use Effect****************************************** */\r\n  useEffect(() => {\r\n    if (showModal) {\r\n      const fetchApiData = async () => {\r\n        try {\r\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\r\n          const result = await response.json();\r\n          setApiData(result);\r\n        } catch (error) {\r\n        }\r\n      };\r\n\r\n      fetchApiData();\r\n    }\r\n  }, [showModal]);\r\n\r\n  /***********************Use State***************************************************** */\r\n  const [faculties, setFaculties] = useState(teacherList);\r\n  // const [batches, setBatches] = useState(JSON.parse(localStorage.getItem('batches')) || batch);\r\n  const [apiData, setApiData] = useState({});\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n  const [showAlert, setShowAlert] = useState(\"\");\r\n  const [timeOfAlert, setTimeOfAlert] = useState(false);\r\n\r\n  /*************************other consts*************************************************** */\r\n  const { Object: responseObject = {} } = apiData;\r\n  const { Batch = [], FacultyList = [], UserList = [] } = responseObject;\r\n  const facultyNameMap = {};\r\n\r\n  UserList.forEach((user) => {\r\n    facultyNameMap[user.UserID] = user.UserName;\r\n  });\r\n  /****************************************methods******************************************* */\r\n  const handleCheckboxChange = (event) => {\r\n    const { name, checked } = event.target;\r\n    setCheckedItems({\r\n      ...checkedItems,\r\n      [name]: checked,\r\n    });\r\n  };\r\n\r\n  const updatedFacultyList = FacultyList.map((faculty) => ({\r\n    ...faculty,\r\n    Faculty: facultyNameMap[faculty.FacultyID] || faculty.Faculty,\r\n  }));\r\n\r\n  const addToFaculty = () => {\r\n    const newTeachersList = teacherList;\r\n\r\n    for (const facultyID in checkedItems) {\r\n      if (checkedItems[facultyID]) {\r\n        const selectedItem = updatedFacultyList.find(\r\n          (faculty) => faculty.FacultyID === parseInt(facultyID)\r\n        );\r\n\r\n        if (selectedItem) {\r\n          const facultyUser = UserList.find(\r\n            (user) => user.UserID === selectedItem.FacultyID\r\n          );\r\n          const facultyName = facultyUser ? facultyUser.UserName : selectedItem.Faculty;\r\n\r\n          const isTeacherAlreadyAdded = newTeachersList.some(\r\n            (teacher) => teacher.FacultyID === selectedItem.FacultyID\r\n          );\r\n\r\n          if (!isTeacherAlreadyAdded) {\r\n            newTeachersList.push({\r\n              FacultyID: selectedItem.FacultyID,\r\n              Faculty: facultyName,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setFaculties(newTeachersList);\r\n    if (!timeOfAlert) {\r\n      setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\r\n        Teachers added successfully\r\n      </UncontrolledAlert>);\r\n      setTimeout(() => {\r\n        setTimeOfAlert(false);\r\n        setShowAlert(\"\");\r\n      }, 3000);\r\n    };\r\n    closeModal();\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  /**********************************************Template to return******************************** */\r\n  return (\r\n    <div>\r\n      <Modal isOpen={showModal} toggle={closeModal} centered={true}>\r\n        <ModalHeader toggle={closeModal}>Select Teachers from the list</ModalHeader>\r\n        <ModalBody>\r\n          {showAlert}\r\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\r\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\r\n              {updatedFacultyList.map((faculty) => {\r\n                const { FacultyID, bgColor, className } = faculty;\r\n                const facultyUser = UserList.find((user) => user.UserID === FacultyID);\r\n                const facultyName = facultyUser ? facultyUser.UserName : faculty.Faculty;\r\n                return (\r\n                  <li key={faculty.FacultyID}>\r\n                    <div className=\"add-faculty-style\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        name={faculty.FacultyID}\r\n                        checked={checkedItems[faculty.FacultyID] || false}\r\n                        onChange={handleCheckboxChange}\r\n                        className=\"addfaculty-checkbox-style\"\r\n                      />\r\n                      {facultyName}\r\n                    </div>\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={addToFaculty}>Add</Button>{' '}\r\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default AddTeacher;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import GlobalEmitterService from '../service/GlobalEmitterService';\r\nimport { URL } from '../const/url';\r\n\r\nexport default class TtApi {\r\n    getTtList = async () => {\r\n        try {\r\n            GlobalEmitterService.emit(true);           // GlobalEmitterService.emit is made true for adding spinner untill api is completed\r\n            const res = await fetch(URL.GET_ALL_TT, {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getEditTt = async (fromDateEdit) => {\r\n        try {\r\n            // const formData = new FormData();\r\n            // formData.append('file', file, file.name);\r\n            GlobalEmitterService.emit(true);\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.GET_EDIT_TT, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: JSON.stringify({\r\n                    FromDate: fromDateEdit.replaceAll(\"-\", \"/\"),\r\n                })\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n\r\n    addUpdateTt = async (ttRequestBody) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.GET_SAVE_TIMETABLE_URL, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: JSON.stringify(ttRequestBody)\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    removeTtById = async (timeTableID) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            // const formData = new FormData();\r\n            // formData.append('file', file, file.name);\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.REMOVE_TT, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: timeTableID\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n}","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { batch } from '../List/List';\r\n// import { batch } from '../../../const/batchList';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledAlert } from 'reactstrap';\r\nimport \"./AddBatch.css\"\r\n\r\nconst AddBatch = ({ showModal, setShowModal, batchList }) => {\r\n  /******************************************Use Effect********************************************** */\r\n  useEffect(() => {\r\n    if (showModal) {\r\n      const fetchApiData = async () => {\r\n        try {\r\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\r\n          const result = await response.json();\r\n          setApiData(result);\r\n        } catch (error) {\r\n        }\r\n      };\r\n      fetchApiData();\r\n    }\r\n  }, [showModal]);\r\n  /********************************************Use State****************************************** */\r\n  const [batches, setBatches] = useState(batchList);\r\n  const [apiData, setApiData] = useState({});\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n  const [showAlert, setShowAlert] = useState(\"\");\r\n  const [timeOfAlert, setTimeOfAlert] = useState(false);\r\n\r\n\r\n  /*****************************Other consts******************************************************** */\r\n  const { Object: responseObject = {} } = apiData;\r\n  const { Batch = [] } = responseObject;\r\n\r\n  /***************************************Methods*************************************************** */\r\n  const handleCheckboxChange = (event) => {\r\n    const { name, checked } = event.target;\r\n    setCheckedItems({\r\n      ...checkedItems,\r\n      [name]: checked,\r\n    });\r\n  };\r\n\r\n  const addToBatch = () => {\r\n    const newBatches = batchList;\r\n    for (const batchID in checkedItems) {\r\n      if (checkedItems[batchID]) {\r\n        const selectedItem = Batch.find((batch) => batch.BatchID === parseInt(batchID));\r\n        if (selectedItem && !newBatches.find((batch) => batch.BatchID === selectedItem.BatchID)) {\r\n          newBatches.push({\r\n            BatchID: selectedItem.BatchID,\r\n            Batch: selectedItem.Batch,\r\n            CourseID: selectedItem.CourseID,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    setBatches(newBatches);\r\n    if (!timeOfAlert) {\r\n      setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\r\n        Batches added successfully\r\n      </UncontrolledAlert>);\r\n\r\n      setTimeout(() => {\r\n        setTimeOfAlert(false);\r\n        setShowAlert(\"\");\r\n      }, 3000);\r\n\r\n    };\r\n    closeModal();\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  /***************************Template to return******************************************************* */\r\n  return (\r\n    <div>\r\n      <Modal centered={true} isOpen={showModal} toggle={closeModal}>\r\n        <ModalHeader toggle={closeModal}>Select Batches from the list</ModalHeader>\r\n        <ModalBody>\r\n          {showAlert}\r\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\r\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\r\n              {Batch.map((batch) => (\r\n                <li key={batch.BatchID}>\r\n                  <div className=\"add-batch-style\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name={batch.BatchID}\r\n                      checked={checkedItems[batch.BatchID] || false}\r\n                      onChange={handleCheckboxChange}\r\n                      className=\"addbatch-checkbox-style\"\r\n                    />\r\n                    {batch.Batch}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={addToBatch}>Add</Button>{' '}\r\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default AddBatch;\r\n\r\n","import GlobalEmitterService from '../service/GlobalEmitterService';\r\nimport { URL } from '../const/url';\r\n\r\nexport default class UploadApi {\r\n    // getUserWalletBalance = async (userId) => {\r\n    //     try {\r\n    //         GlobalEmitterService.emit(true);\r\n    //         const token = `Bearer ${AuthService.getToken()}`;\r\n    //         const res = await fetch(URL.USER_WALLET_BALANCE + '?' + new URLSearchParams({\r\n    //             userId\r\n    //         }), {\r\n    //             method: 'GET',\r\n    //             headers: { 'Content-Type': 'application/json', 'Authorization': token },\r\n    //         });\r\n    //         const result = await res.json();\r\n    //         GlobalEmitterService.emit(false);\r\n    //         return result;\r\n    //     } catch (e) {\r\n    //         GlobalEmitterService.emit(false);\r\n    //         throw new Error(e.message, e.options);\r\n    //     }\r\n    // }\r\n\r\n\r\n    getWattsappApi = async (url, message, cell, fileName) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            //  https://ziper.io/api/send.php?number=917898118503&type=media&message=test%20message&media_url=https://api.aayamcareerinstitute.co.in//Uploads/Files/File_3431223213168.pdf&filename=file_test.jpg&instance_id=647B3C9AA8D0A&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/send.php\" + '?' + new URLSearchParams({\r\n                number: cell,\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"647B3C9AA8D0A\",\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n\r\n    getWattsappGroupApiTeachers = async (url, message, fileName) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\r\n                // group_id: \"919977116612-1595572006@g.us\",\r\n                group_id: \"919977116612-1595572006@g.us\",\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"647B3C9AA8D0A\",\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getWattsappGroupApiOthers = async (url, message, fileName) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\r\n                group_id: \"919826362001-1628170376@g.us\",\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"647B3C9AA8D0A\", \r\n\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    uplaodFile = async (file) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            const formData = new FormData();\r\n            formData.append('file', file, file.name);\r\n            const res = await fetch(URL.UPLOAD_FILE, {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getUploadedFile = async () => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            const res = await fetch(URL.GET_UPLOAD_FILE_URL, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({})\r\n\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n}","export const COLORS = [\"#D4E6F1\", \"#E8DAEF\",  \"#808000\", \"#C39BD3\", \"#76D7C4\", \"#3498DB\", \"#358b79\", \"#847f86\", \"rgb(251, 235, 9)\", \"#CA6F1E\", \"#CCCCFF\", \"#F4D03F\", \"rgb(199, 185, 84)\", \"#979A9A\", \"#F0B27A\", \"rgb(117, 98, 179)\", \"#CD5C5C\", \"#40E0D0\", \"#DAF7A6\",\"#CECCA9\", \"#F6DA80\", \"#FADBD8\",\"5F8993\", \"486E76\", \"green\", \"yellow\", \"white\", \"red\", \"pink\"]\r\n","import html2canvas from 'html2canvas';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport { Alert, Badge, Button, ButtonGroup, Col, DropdownItem, DropdownMenu, DropdownToggle, Form, FormGroup, Input, Row, UncontrolledAlert, UncontrolledDropdown } from 'reactstrap';\r\nimport TtApi from '../../../api/tt.api.js';\r\nimport UploadApi from '../../../api/upload.api.js';\r\nimport { COLORS } from '../../../const/color.const.js';\r\nimport AddBatch from '../AddBatch/AddBatch.js';\r\nimport { batch, teachers_list, time } from '../List/List.js';\r\nimport AddTeacher from '../TeacherForm/TeacherForm.js';\r\nimport \"./TimeTable.scss\";\r\n\r\nconst TimeTable = () => {\r\n  /***************************************** Use Params Section******************************/\r\n  /**************************************** const Section ************************************/\r\n\r\n  /**************************************** Use Effect Section ************************************/\r\n  useEffect(() => {\r\n    appenColorTOTeacherList();\r\n  }, []);\r\n\r\n  /**************************************** State Section *****************************************/\r\n  const [draggedTeacher, setDraggedTeacher] = useState({}); // Contains dragged teacher\r\n  const [lectureList, setLectureList] = useState([]);\r\n  const [teacherAssignment, setTeacherAssignment] = useState({});\r\n  const [teacherCounter, setTeacherCounter] = useState({}); // key: teacherId, value: counter\r\n  const [lectureTeacherCounter, setLectureTeacherCounter] = useState({}); // key: lectureId_teacherId, value: counter to check duplicate rows\r\n  const [duplicateTeacherDetectedInRow, setDuplicateTeacherDetectedInRow] = useState(false);\r\n  const [draggedCellKey, setDraggedCellKey] = useState(null);\r\n\r\n  // contains key of teacher asignment which is grag within the table\r\n  const [batchList, setBatchList] = useState(batch);\r\n  const [teacherList, setTeacherList] = useState(teachers_list);\r\n  const [showAddBatchModal, setShowAddBatchModal] = useState(false); //for add Batch popup\r\n  const [showAddTeacherModal, setShowAddTeacherModal] = useState(false);\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n  const [showAlert, setShowAlert] = useState(\"\");\r\n  const [timeOfAlert, setTimeOfAlert] = useState(false);\r\n  // const [numberList, setNumberList] = useState([918871688429, 917898118503, 918349215747]);\r\n  const [numberList, setNumberList] = useState([917898118503,919826362001,918349215747,917314058393,917869597239,919977116612,918085390900,918302184021,918358810742,919893640561,919713519598,919713030834,919827274005,919691938832,917043127836,917298519996,919713191848,918871841238,917007794323,919669889020,919770432150]);\r\n  \r\n  const divRef = useRef(null);\r\n\r\n\r\n  \r\n\r\n  /**************************************** Component Method Section *********************************/\r\n  /**\r\n   * \r\n   * @param {*} e drag event\r\n   * @param {*} teacherInfo teacherVo\r\n   * Calls when drag start & drag the reacher\r\n   */\r\n  const dragStart = (e, teacherDragged) => {\r\n    setDraggedTeacher(teacherDragged);\r\n  };\r\n\r\n  const appenColorTOTeacherList = () => {\r\n    //due to this method once the color assigned to the teacher will stick to that teacher only i.e on deleting the teacher from teacher list the color will aslo be deleted i.e will not assign to the next teacher.\r\n    const stateTeacherList = [];\r\n    teachers_list.forEach((teacher, i) => {\r\n      teacher.color = COLORS[i];\r\n      stateTeacherList.push(teacher);\r\n    });\r\n    setTeacherList([...stateTeacherList]);\r\n  };\r\n\r\n  const allowDrop = (ev) => {\r\n    let t = ev.target;\r\n    while (t && (!t.classList || !t.classList.contains(\"each-block\"))) {\r\n      t = t.parentNode;\r\n    }\r\n    if (t && t.innerText.trim() !== \"\") {\r\n      // Prevent drop event if cell is not empty\r\n      return false;\r\n    }\r\n    ev.preventDefault();\r\n  };\r\n\r\n  // Prepare lecture list\r\n  const updateLectureListOnDrop = (lecture, batch, teacher) => {\r\n    const stateLectureList = lectureList;\r\n    const lectureDto = {};\r\n    lectureDto.ID = \"0\";\r\n    lectureDto.TimeTableID = \"0\";\r\n    lectureDto.LectureName = \"\";\r\n    lectureDto.Batch = batch;\r\n    lectureDto.Lecture = lecture;\r\n    lectureDto.Subject = teacher.subject;\r\n    lectureDto.FacultyID = teacher.FacultyID;\r\n    lectureDto.IsActive = true;\r\n    lectureDto.CreatedByUserID = \"1\";\r\n    lectureDto.CreatedOnDate = \"02/05/2023\";\r\n    stateLectureList.push(lectureDto);\r\n    setLectureList([...stateLectureList]);\r\n  };\r\n\r\n  const updateTeacherCounterOnDrop = (teacher, lectureId) => {\r\n    const stateTeacherCounter = teacherCounter;\r\n    if (!stateTeacherCounter[teacher.FacultyID]) {\r\n      stateTeacherCounter[teacher.FacultyID] = 1;\r\n      setTeacherCounter({ ...stateTeacherCounter });\r\n      return;\r\n    }\r\n    // to update the counter of teacher when new teacher is droped into the cell of table\r\n    const key = lectureId + '_' + teacher.FacultyID;\r\n    if (lectureTeacherCounter && lectureTeacherCounter[key] && lectureTeacherCounter[key] > 1) {\r\n      return;\r\n    }\r\n    stateTeacherCounter[teacher.FacultyID] += 1;\r\n    setTeacherCounter({ ...stateTeacherCounter });\r\n  }\r\n\r\n  const checkDuplicateTeacherInRowOnDrop = (lectureId, teacherId) => {\r\n    const key = lectureId + '_' + teacherId;\r\n    const stateLectureTeacherCounter = lectureTeacherCounter;\r\n    if (!stateLectureTeacherCounter[key]) {\r\n      stateLectureTeacherCounter[key] = 1\r\n    } else {\r\n      stateLectureTeacherCounter[key] += 1\r\n    }\r\n    setLectureTeacherCounter({ ...stateLectureTeacherCounter });\r\n    if (stateLectureTeacherCounter[key] > 1) {\r\n      setDuplicateTeacherDetectedInRow(true);\r\n      setTimeout(() => {\r\n        setDuplicateTeacherDetectedInRow(false);\r\n      }, 3000); // Alert duration \r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On Drop\r\n   * Check if drops within the table if yes remove techer from current block by preserving the teacher and proceed for select teacher & if no proceed for select teacher\r\n   * set teacher assignment object\r\n   * set teature lecture list for api call (updateLectureListOnDrop)\r\n   * update teacher drop counter (updateTeacherCounterOnDrop)\r\n   * Check if teacher dropped in same row if yes show alert and set lecture vs teacher counter to use for blink (checkDuplicateTeacherInRowOnDrop)\r\n   * empty teacher state\r\n   * empty state used withing table drag\r\n   */\r\n  const handleDrop = (e, lecture, batch) => {\r\n    let selectedTeacher = draggedTeacher;\r\n    if (draggedCellKey) {\r\n      // if dragged within the table remove source & proceed for drop\r\n      const keyInside = draggedCellKey.lecture.LectureID + '_' + draggedCellKey.batch.BatchID;\r\n      selectedTeacher = teacherAssignment[keyInside];\r\n      removeTeacher(draggedCellKey.lecture.LectureID, draggedCellKey.batch.BatchID, teacherAssignment[keyInside].FacultyID);\r\n    }\r\n    const stateTeacherAssignment = teacherAssignment;\r\n    const key = lecture.LectureID + '_' + batch.BatchID;\r\n    teacherAssignment[key] = selectedTeacher;\r\n    setTeacherAssignment({ ...stateTeacherAssignment });\r\n    updateLectureListOnDrop(lecture, batch, selectedTeacher);\r\n    checkDuplicateTeacherInRowOnDrop(lecture.LectureID, selectedTeacher.FacultyID);\r\n    updateTeacherCounterOnDrop(selectedTeacher, lecture.LectureID);\r\n    setDraggedTeacher({});\r\n    setDraggedCellKey(null);\r\n  }\r\n\r\n  const removeTeacher = (lectureId, batchId, teacherId) => {\r\n    // Remove from teacher assignment\r\n    const key = lectureId + '_' + batchId;\r\n    const stateTeacherAssignment = teacherAssignment;\r\n    delete stateTeacherAssignment[key];\r\n    setTeacherAssignment({ ...stateTeacherAssignment });\r\n\r\n    // Remove from lecture list\r\n    const stateLectureList = lectureList;\r\n    const index = stateLectureList?.findIndex(row => row.Batch?.BatchID === batchId && row.Lecture?.LectureID === lectureId);\r\n    console.log(\"xxx\", index);\r\n    if (index >= 0) {\r\n      stateLectureList.splice(index, 1);\r\n      setLectureList([...stateLectureList]);\r\n    }\r\n    // To make not blink when teacher itself dragged from one place to other in same row\r\n    const stateLectureTeacherCounter = lectureTeacherCounter;\r\n    const lectureTeacherKey = lectureId + '_' + teacherId;\r\n    if (stateLectureTeacherCounter[lectureTeacherKey] > 1) {\r\n      stateLectureTeacherCounter[lectureTeacherKey] -= 1;\r\n    } else {\r\n      delete stateLectureTeacherCounter[lectureTeacherKey];\r\n    }\r\n    setLectureTeacherCounter(stateLectureTeacherCounter);\r\n\r\n    const keyLtId = lectureId + '_' + teacherId;\r\n    if (lectureTeacherCounter && lectureTeacherCounter[keyLtId] && lectureTeacherCounter[keyLtId] >= 1) {\r\n      return;\r\n    }\r\n\r\n    // Decrease one from teacher counter\r\n    const stateTeacherCounter = teacherCounter;\r\n    stateTeacherCounter[teacherId] -= 1;\r\n    if (stateTeacherCounter[teacherId] <= 0) {\r\n      delete stateTeacherCounter[teacherId];\r\n    }\r\n    setTeacherCounter(stateTeacherCounter);\r\n\r\n\r\n  }\r\n\r\n  // Called to provide class name if true set classname blink else empty\r\n  // return true if same teacher counter greater than one with respect to lectureId\r\n  const isTeacherDuplicateInLecture = (lectureId, teacherId) => {\r\n    if (!lectureId || !teacherId) {\r\n      return false;\r\n    }\r\n    const key = lectureId + '_' + teacherId;\r\n    console.log(key);\r\n    return lectureTeacherCounter[key] > 1;\r\n  };\r\n\r\n  const handleTableCellDragStart = (e, lecture, batch) => {\r\n    setDraggedCellKey({\r\n      lecture, batch\r\n    });\r\n  };\r\n\r\n  const onDragEnd = (e) => {\r\n    setDraggedTeacher({});\r\n  }\r\n\r\n  /*********************************************This below methods are added by jitendra from TimeTable.js***********************************/\r\n  const generateUID = () => {\r\n    // I generate the UID from two parts here \r\n    // to ensure the random number provide enough bits.\r\n    var firstPart = (Math.random() * 46656) | 0;\r\n    var secondPart = (Math.random() * 46656) | 0;\r\n    firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\r\n    secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\r\n    return firstPart + secondPart;\r\n  }\r\n\r\n  const convertToImage = async () => {\r\n    divRef.current.style.width = \"max-content\";\r\n    const canvas = await html2canvas(divRef.current);\r\n    const imgData = canvas.toDataURL();\r\n    /*converting page64 url got as imgData into file Object by using blob below*/\r\n    const byteString = atob(imgData.split(',')[1]);\r\n    const mimeString = imgData.split(',')[0].split(':')[1].split(';')[0];\r\n    const ia = new Uint8Array(byteString.length);\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n    }\r\n    const blob = new Blob([ia], { type: mimeString });\r\n    const imageName = generateUID();\r\n    const file = new File([blob], imageName + \".jpg\");\r\n    const fileName = imageName + \".jpg\";\r\n    const result = await new UploadApi().uplaodFile(file);\r\n    divRef.current.style.width = \"100%\";\r\n    if (result === \"Success\") {\r\n      const data = await new UploadApi().getUploadedFile();\r\n      if (data.Object?.length > 0) {\r\n        const fileDetail = data.Object.reverse().find(obj => { return obj.Title?.indexOf(imageName) >= 0 });\r\n        for (let i = 0; i < numberList.length; i++) {\r\n          try {\r\n            const cell = numberList[i];\r\n            /*CHECK THE DETAILS OF THIS GETWATTSAPPAPI IN UPLOAD.API.JS FILE IN API FOLDER*/\r\n            await new UploadApi().getWattsappApi(fileDetail.LongURL, \"time table\", cell, fileName);\r\n            // await new UploadApi().getWattsappGroupApiOthers(fileDetail.LongURL, \"time table\", fileName);\r\n\r\n            continue;\r\n          } catch (e) {\r\n            continue;\r\n            // console.log(\"error\")\r\n          }\r\n          // try {\r\n          //   await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\r\n          // } catch (e) {\r\n          //   console.log(\"error\")\r\n          // }\r\n        }\r\n      }\r\n    }\r\n    if (!timeOfAlert) {\r\n      setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\r\n        Time table image sent successfully\r\n      </UncontrolledAlert>);\r\n      setTimeout(() => {\r\n        setTimeOfAlert(false);\r\n        setShowAlert(\"\");\r\n      }, 3000);\r\n    };\r\n\r\n  }\r\n\r\n  const onChangeFromDate = (e) => {\r\n    setFromDate(e.target.value);\r\n  }\r\n\r\n  const onChangeToDate = (e) => {\r\n    setToDate(e.target.value);\r\n  }\r\n\r\n  const onAddBatch = () => {\r\n    // setAddBatch(<AddBatch batchList={batchList} />)\r\n    setShowAddBatchModal(true);\r\n  }\r\n\r\n  const onDeleteBatch = (batchID) => {\r\n    const confirmDelete = window.confirm('Are you sure you want to delete this batch?');\r\n    if (confirmDelete) {\r\n      const updatedBatches = batchList.filter((each) => each.BatchID !== batchID);\r\n      setBatchList(updatedBatches);\r\n    }\r\n  };\r\n\r\n  const onAddTeacher = () => {\r\n    setShowAddTeacherModal(true);\r\n  }\r\n\r\n  const onDeleteTeacher = (facultyID) => {\r\n    const confirmDelete = window.confirm('Are you sure you want to delete this Faculty?');\r\n    if (confirmDelete) {\r\n      const updatedTeachers = teacherList.filter((each) => each.FacultyID !== facultyID);\r\n      setTeacherList(updatedTeachers);\r\n    };\r\n  }\r\n\r\n  const saveTable = async () => {\r\n    const sentBatchID = batchList.map(item => item.BatchID)\r\n    const body = {\r\n      TimeTableID: 0,\r\n      Description: \"time table save\",\r\n      DateType: !!toDate ? \"multiple\" : \"single\",\r\n      FromDate: fromDate,\r\n      ToDate: toDate,\r\n      ShiftID: 1,\r\n      SessionID: 6,\r\n      Session: \"2023-24\",\r\n      BatchID: sentBatchID,\r\n      LectureID: [\r\n        1, 2, 3, 4, 5, 6, 7, 8\r\n      ],\r\n      IsActive: true,\r\n      CreatedByUserID: 1,\r\n      CreatedOnDate: new Date(),\r\n      LectureList: lectureList\r\n    };\r\n\r\n    const result = await new TtApi().addUpdateTt(body);\r\n    if (result === 'Success') {\r\n      if (!timeOfAlert) {\r\n        setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\r\n          time table saved successfully\r\n        </UncontrolledAlert>);\r\n        setTimeout(() => {\r\n          setTimeOfAlert(false);\r\n          setShowAlert(\"\");\r\n        }, 3000);\r\n      };\r\n\r\n    } else {\r\n      if (!timeOfAlert) {\r\n        setShowAlert(<UncontrolledAlert color=\"danger\" fade={false}>\r\n          {result?.ExceptionMessage ?? 'An error has occurred.'}\r\n        </UncontrolledAlert>);\r\n        setTimeout(() => {\r\n          setTimeOfAlert(false);\r\n          setShowAlert(\"\");\r\n        }, 3000);\r\n      };\r\n    }\r\n  };\r\n\r\n  const clearAll = (key) => {\r\n    // const key = lectureId + '_' + batchId\r\n    const stateTeacherAssignment = teacherAssignment;\r\n    delete stateTeacherAssignment[key];\r\n    setTeacherAssignment({ stateTeacherAssignment });\r\n  }\r\n\r\n\r\n  //newly added to add double click feature 03/05/24 start\r\n\r\n  const handleDoubleClick = (e, teacher) => {\r\n    e.preventDefault();\r\n    setDraggedTeacher(teacher);\r\n    console.log(\"double cliked\")\r\n  };\r\n\r\n  const handleCellDoubleClick = (e, lecture, batch) => {\r\n    e.preventDefault();\r\n    if (draggedTeacher) {\r\n      handleDrop(e, lecture, batch);\r\n    }\r\n  };\r\n\r\n  //newly added to add double click feature 03/05/24 start\r\n\r\n\r\n  /**************************************** Template Section *****************************************/\r\n  return (\r\n    <>\r\n      <div className=\"bg-container\">\r\n        <Row>\r\n          <Col>\r\n            {showAlert}\r\n            {\r\n              duplicateTeacherDetectedInRow ? <Alert color=\"warning\">\r\n                Two same teachers found in the same row\r\n              </Alert> : <></>\r\n            }\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* <Row>\r\n          <Col>\r\n            <h1 className='heading-style'>CLASS SCHEDULE</h1>\r\n          </Col>\r\n        </Row> */}\r\n\r\n        <Row>\r\n          <Col>\r\n            <Form>\r\n              <div>\r\n                <Row>\r\n                  <div className=\"col-sm-12 col-md-3 label-date-allignment\">\r\n                    <span className=\"date-label-style\">From<span style={{ color: \"red\" }}>*</span>:&nbsp;&nbsp;</span>\r\n                    <Input\r\n                      id=\"fromDate\"\r\n                      name=\"date\"\r\n                      type=\"date\"\r\n                      defaultValue={fromDate}\r\n                      onChange={(e) => { onChangeFromDate(e) }}\r\n                      className='input-size'\r\n                      min={new Date().toISOString().split('T')[0]}\r\n                      placeholder='From Date'\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-sm-12 col-md-3 label-date-allignment\">\r\n                    <span className=\"date-label-style\">To:&nbsp;&nbsp;</span>\r\n                    <Input\r\n                      id=\"toDate\"\r\n                      name=\"date\"\r\n                      type=\"date\"\r\n                      defaultValue={toDate}\r\n                      onChange={(e) => { onChangeToDate(e) }}\r\n                      className='input-size'\r\n                      min={new Date().toISOString().split('T')[0]}\r\n                    />\r\n                  </div>\r\n                  <div className=\"d-lg-none\">\r\n                    <br></br>\r\n                    <div className=\"button-group\">\r\n                      <Button className=\"btn\" color=\"info\" onClick={saveTable} disabled={fromDate === ''}>\r\n                        Save\r\n                      </Button>\r\n                      <Button className=\"btn\" color=\"info\" onClick={convertToImage}>\r\n                        Post\r\n                      </Button>\r\n                      <ButtonGroup >\r\n                        <UncontrolledDropdown>\r\n                          <DropdownToggle color=\"info\" caret>\r\n                            More Actions\r\n                          </DropdownToggle>\r\n                          <DropdownMenu>\r\n                            <DropdownItem onClick={onAddBatch}>\r\n                              Add Batches\r\n                            </DropdownItem>\r\n                            <DropdownItem divider />\r\n                            <DropdownItem onClick={onAddTeacher}>\r\n                              Add Teachers\r\n                            </DropdownItem>\r\n                            <DropdownItem divider />\r\n                            <DropdownItem onClick={clearAll}>\r\n                              Clear ALL\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </ButtonGroup>\r\n                    </div>\r\n                    <br></br>\r\n                  </div>\r\n                  <div className=\"d-none d-md-block col-md-6\">\r\n                    <div className=\"button-group\">\r\n                      <Button className=\"btn \" color=\"info\" onClick={onAddBatch}>\r\n                        Add Batches\r\n                      </Button>\r\n                      <Button className=\"btn\" color=\"info\" onClick={onAddTeacher}>\r\n                        Add Teachers\r\n                      </Button>\r\n                      <Button className=\"btn\" color=\"info\" onClick={saveTable} disabled={fromDate === ''}>\r\n                        Save\r\n                      </Button>\r\n                      <Button className=\"btn\" color=\"info\" onClick={convertToImage}>\r\n                        Post\r\n                      </Button>\r\n                      <Button className=\"btn\" color=\"info\" onClick={clearAll}>\r\n                        Clear ALL\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Row>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col>\r\n            <div>\r\n              {showAddBatchModal && <AddBatch showModal={showAddBatchModal} setShowModal={setShowAddBatchModal} batchList={batchList} />}\r\n              {showAddTeacherModal && <AddTeacher showModal={showAddTeacherModal} setShowModal={setShowAddTeacherModal} teacherList={teacherList} />}\r\n              <div ref={divRef} className='table-container'>\r\n                <table className='table-style'>\r\n                  <tbody>\r\n                    <div className=\"for-time\">\r\n                      <tr>\r\n                        <td className='F-style time-style'>Time</td>\r\n                        {batchList.map((each) => {\r\n                          return (\r\n                            <td className='F-style batch-style' key={each.BatchID}>{each.Batch}\r\n                              <button className=\"delete-style\" onClick={() => onDeleteBatch(each.BatchID)}><RxCross2 /></button>\r\n                            </td>\r\n                          )\r\n                        })}\r\n                      </tr>\r\n                    </div>\r\n                    <tr >\r\n                      {time.map((t) => {\r\n                        return (\r\n\r\n                          <div >\r\n                            <td className='F-style time-style'>{t.Time_From}-{t.Time_To}</td>\r\n                            {batchList.map((b) => {\r\n                              const key = t.LectureID + '_' + b.BatchID\r\n                              return (\r\n                                <td\r\n                                onDoubleClick={(e) => handleCellDoubleClick(e, t, b)} // this line is newly added 03/05/24 to add double click feature\r\n                                  draggable={!!teacherAssignment[key]?.Faculty}\r\n                                  onDragOver={allowDrop}\r\n                                  onDrop={(e) => handleDrop(e, t, b)}\r\n                                  onDragStart={(e) => handleTableCellDragStart(e, t, b)}\r\n                                  key={key}\r\n                                  id={key}\r\n                                  className={`each-block ${isTeacherDuplicateInLecture(t.LectureID, teacherAssignment[key]?.FacultyID ?? null) ? \"blink\" : \"\"}`}\r\n                                  style={{ backgroundColor: teacherAssignment[key]?.color }}\r\n                                >\r\n                                  <div className={`teacname-cross-style ${teacherAssignment[key]?.className} `}>\r\n                                    <div className=\"teacher-name\" >\r\n                                      {teacherAssignment[key]?.Faculty}\r\n                                    </div>\r\n                                    <div className=\"cross-btn-container\">\r\n                                      {teacherAssignment[key]?.Faculty ? (\r\n                                        <button\r\n                                          className=\"cross-style\"\r\n                                          onClick={() => removeTeacher(t.LectureID, b.BatchID, teacherAssignment[key].FacultyID)}\r\n                                        >\r\n                                          <RxCross2 />\r\n                                        </button>\r\n                                      ) : <></>}\r\n                                    </div>\r\n                                  </div>\r\n                                </td>\r\n                              )\r\n                            })}\r\n                          </div>\r\n                        )\r\n                      })}\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col>\r\n            <div className='teacher-container'>\r\n              {teacherList.map((teacher, index) => {\r\n                const { FacultyID, Faculty } = teacher;\r\n                return (\r\n                  <div\r\n                    style={{ backgroundColor: teacher.color }}\r\n                    key={FacultyID}\r\n                    className=\"teacher-item\"\r\n                    draggable={true}\r\n                    onDragStart={(e) => dragStart(e, teacher)}\r\n                    onDragEnd={(e) => onDragEnd(e)}\r\n                    onDoubleClick={(e) => handleDoubleClick(e, teacher)} // this line is newly added 03/05/24 to add double click feature\r\n                  >\r\n                    <span>{Faculty}</span>\r\n                    {teacherCounter[FacultyID] > 0 && (\r\n                      <Badge className=\"counter-item\">\r\n                        {teacherCounter[FacultyID]}\r\n                      </Badge>\r\n                    )}\r\n                    <span onClick={() => onDeleteTeacher(teacher.FacultyID)} className=\"remove-icon\" color='danger'>\r\n                      <RxCross2 />\r\n                    </span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default TimeTable;"],"sourceRoot":""}