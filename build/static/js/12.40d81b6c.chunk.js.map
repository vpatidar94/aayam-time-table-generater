{"version":3,"sources":["const/url.js","api/tt.api.js","pages/TTPages/PreviousTimeTable/PreviousTimeTable.js"],"names":["BASE_URL","URL","UPLOAD_FILE","GET_UPLOAD_FILE_URL","GET_SAVE_TIMETABLE_URL","GET_ALL_TT","GET_EDIT_TT","REMOVE_TT","TtApi","_createClass","_classCallCheck","getTtList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","result","wrap","_context","prev","next","fetch","method","sent","json","abrupt","t0","Error","message","options","stop","getEditTt","_ref2","_callee2","fromDateEdit","myHeaders","_context2","Headers","append","headers","body","JSON","stringify","FromDate","replaceAll","_x","apply","arguments","addUpdateTt","_ref3","_callee3","ttRequestBody","_context3","_x2","removeTtById","_ref4","_callee4","timeTableID","_context4","_x3","PreviousTimeTable","useEffect","getTimeTableList","_useState","useState","_useState2","_slicedToArray","timeTableList","setTimeTableList","_ref","_result$Object","IsSuccessful","Object","length","console","log","_jsx","_Fragment","children","className","Card","_jsxs","CardBody","CardTitle","tag","Table","responsive","borderless","reverse","map","tdata","index","TimeTableID","Session","ToDate","NavLink","to","Button","onClick","e","row","outline","color"],"mappings":"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","file":"static/js/12.40d81b6c.chunk.js","sourcesContent":["const ENV_URL = 'https://api.aayamcareerinstitute.co.in/api'; // producation fn\r\nconst DEV_URL = 'http://localhost:5001'; // producation fn\r\nconst BASE_URL= ENV_URL\r\n\r\n\r\n\r\nexport const URL = {\r\n    UPLOAD_FILE: BASE_URL + '/UploadFilesAttachment',\r\n    GET_UPLOAD_FILE_URL: BASE_URL + '/GetFiles', \r\n    GET_SAVE_TIMETABLE_URL: BASE_URL+ '/AddUpdateTimeTable',\r\n    GET_ALL_TT: BASE_URL + '/GetTimeTable', \r\n\r\n    GET_EDIT_TT: BASE_URL + '/GetTimeTableByDate',\r\n    REMOVE_TT: BASE_URL + '/DeleteTimeTable',\r\n\r\n\r\n\r\n\r\n};  \r\n","import { URL } from '../const/url';\r\n\r\nexport default class TtApi {\r\n    getTtList = async () => {\r\n        try {\r\n            const res = await fetch(URL.GET_ALL_TT, {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getEditTt = async (fromDateEdit) => {\r\n        try {\r\n            // const formData = new FormData();\r\n            // formData.append('file', file, file.name);\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.GET_EDIT_TT, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: JSON.stringify({\r\n                    FromDate: fromDateEdit.replaceAll(\"-\", \"/\"),\r\n                })\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    \r\n    addUpdateTt = async (ttRequestBody) => {\r\n        try {\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.GET_SAVE_TIMETABLE_URL, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: JSON.stringify(ttRequestBody)\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    removeTtById = async (timeTableID) => {\r\n        try {\r\n            // const formData = new FormData();\r\n            // formData.append('file', file, file.name);\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.REMOVE_TT, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: timeTableID\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport TtApi from '../../../api/tt.api.js';\r\nimport { Button, Card, CardBody, CardSubtitle, CardTitle, Table } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst PreviousTimeTable = () => {\r\n  /**************************************** const Section ************************************/\r\n  /**************************************** Use Effect Section ************************************/\r\n  useEffect(() => {\r\n    getTimeTableList();\r\n  }, []);\r\n\r\n  /**************************************** State Section *****************************************/\r\n  const [timeTableList, setTimeTableList] = useState([]);\r\n\r\n  /**************************************** Component Method Section *********************************/\r\n  const getTimeTableList = async () => {\r\n    const result = await new TtApi().getTtList();\r\n    if (result.IsSuccessful && result.Object?.length > 0) {\r\n      setTimeTableList(result.Object);\r\n      console.log(result.Object)\r\n    }\r\n  };\r\n\r\n  const editTt = (row) => {\r\n    console.log('xxx xx xx row is ', row);\r\n  }\r\n\r\n  /**************************************** Template Section *****************************************/\r\n  return (\r\n    <>\r\n      <div className='col-12'>\r\n        <Card>\r\n          <CardBody>\r\n            <CardTitle tag=\"h5\">Previous Time Table</CardTitle>\r\n            <Table className=\"no-wrap mt-3 align-middle\" responsive borderless>\r\n              <thead>\r\n                <tr>\r\n                  <th>Table Id</th>\r\n                  <th>Session</th>\r\n                  <th>FromDate</th>\r\n                  <th>To Date</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {timeTableList.reverse().map((tdata, index) => (\r\n                  <tr key={index} className=\"border-top\">\r\n                    <td>\r\n                      {tdata.TimeTableID}\r\n                    </td>\r\n                    <td>{tdata.Session}</td>\r\n                    <td>\r\n                      {tdata.FromDate}\r\n                    </td>\r\n                    <td>{tdata.ToDate}</td>\r\n                    <td>\r\n                      <NavLink to={'/clone/' + tdata.TimeTableID + '/' + tdata.FromDate.replaceAll(\"/\", '-')}><Button onClick={e => { editTt(tdata) }} className=\"btn\" outline color=\"primary\">\r\n                        Clone\r\n                      </Button></NavLink>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PreviousTimeTable\r\n"],"sourceRoot":""}