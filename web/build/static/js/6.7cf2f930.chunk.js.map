{"version":3,"sources":["pages/TTPages/List/List.js","const/url.js","pages/TTPages/TeacherForm/TeacherForm.js","api/tt.api.js","pages/TTPages/AddBatch/AddBatch.js","api/upload.api.js","const/color.const.js","pages/TTPages/TimeTable/TimeTable.js"],"names":["teachers_list","FacultyID","Faculty","subject","batch","BatchID","Batch","CourseID","time","LectureID","Lecture","Time_From","Time_To","BASE_URL","URL","UPLOAD_FILE","GET_UPLOAD_FILE_URL","GET_SAVE_TIMETABLE_URL","GET_ALL_TT","GET_EDIT_TT","REMOVE_TT","AddTeacher","_ref","showModal","setShowModal","teacherList","useEffect","fetchApiData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_context","prev","next","fetch","sent","json","setApiData","t0","stop","apply","arguments","_useState","useState","_useState2","_slicedToArray","setFaculties","_useState3","_useState4","apiData","_useState5","_useState6","checkedItems","setCheckedItems","_useState7","_useState8","showAlert","setShowAlert","_useState9","_useState10","timeOfAlert","setTimeOfAlert","_apiData$Object","Object","responseObject","_responseObject$Facul","FacultyList","_responseObject$UserL","UserList","facultyNameMap","forEach","user","UserID","UserName","handleCheckboxChange","event","_event$target","target","name","checked","_objectSpread","_defineProperty","updatedFacultyList","map","faculty","closeModal","_jsx","children","_jsxs","Modal","isOpen","toggle","style","maxWidth","ModalHeader","ModalBody","className","maxHeight","overflowY","listStyle","facultyUser","bgColor","find","facultyName","type","onChange","ModalFooter","Button","color","onClick","newTeachersList","_loop","facultyID","selectedItem","parseInt","some","teacher","push","UncontrolledAlert","fade","setTimeout","TtApi","_createClass","_classCallCheck","getTtList","res","method","abrupt","Error","message","options","getEditTt","_callee2","fromDateEdit","myHeaders","_context2","Headers","append","headers","body","JSON","stringify","FromDate","replaceAll","_x","addUpdateTt","_ref3","_callee3","ttRequestBody","_context3","_x2","removeTtById","_ref4","_callee4","timeTableID","_context4","_x3","AddBatch","batchList","setBatches","_responseObject$Batch","newBatches","batchID","UploadApi","getWattsappApi","url","cell","fileName","console","log","URLSearchParams","number","media_url","filename","instance_id","access_token","_x4","getWattsappGroupApiTeachers","group_id","_x5","_x6","_x7","getWattsappGroupApiOthers","_x8","_x9","_x10","uplaodFile","file","formData","FormData","_x11","getUploadedFile","_callee5","_context5","COLORS","TimeTable","draggedTeacher","setDraggedTeacher","lectureList","setLectureList","teacherAssignment","setTeacherAssignment","teacherCounter","setTeacherCounter","lectureTeacherCounter","setLectureTeacherCounter","_useState11","_useState12","duplicateTeacherDetectedInRow","setDuplicateTeacherDetectedInRow","_useState13","_useState14","draggedCellKey","setDraggedCellKey","_useState15","_useState16","setBatchList","_useState17","_useState18","setTeacherList","_useState19","_useState20","showAddBatchModal","setShowAddBatchModal","_useState21","_useState22","showAddTeacherModal","setShowAddTeacherModal","_useState23","_useState24","fromDate","setFromDate","_useState25","_useState26","toDate","setToDate","_useState27","_useState28","_useState29","_useState30","divRef","useRef","dragStart","e","teacherDragged","allowDrop","ev","t","classList","contains","parentNode","innerText","trim","preventDefault","handleDrop","lecture","selectedTeacher","keyInside","removeTeacher","stateTeacherAssignment","key","stateLectureList","lectureDto","Subject","IsActive","CreatedByUserID","CreatedOnDate","_toConsumableArray","updateLectureListOnDrop","lectureId","teacherId","stateLectureTeacherCounter","checkDuplicateTeacherInRowOnDrop","batchId","index","row","_row$batch","_row$lecture","splice","stateTeacherCounter","lectureTeacherKey","isTeacherDuplicateInLecture","generateUID","firstPart","Math","random","secondPart","toString","slice","convertToImage","canvas","imgData","byteString","mimeString","ia","i","blob","imageName","_data$Object","data","fileDetail","html2canvas","current","toDataURL","atob","split","Uint8Array","length","charCodeAt","Blob","File","reverse","obj","_obj$Title","Title","indexOf","LongURL","t1","saveTable","sentBatchID","_result$ExceptionMess","item","TimeTableID","Description","DateType","ToDate","ShiftID","SessionID","Session","Date","LectureList","ExceptionMessage","_Fragment","Alert","disabled","ref","Form","FormGroup","Input","id","defaultValue","value","onChangeFromDate","min","toISOString","onChangeToDate","each","window","confirm","updatedBatches","filter","onDeleteBatch","RxCross2","b","_teacherAssignment$ke","_teacherAssignment$ke2","_teacherAssignment$ke3","_teacherAssignment$ke4","_teacherAssignment$ke5","_teacherAssignment$ke6","draggable","onDragOver","onDrop","onDragStart","concat","backgroundColor","onDragEnd","onTouchStart","onTouchMove","x","touches","clientX","y","clientY","elem","document","elementFromPoint","alert","updatedTeachers","onDeleteTeacher"],"mappings":"iHAAA,gHACaA,EAAgB,CACrB,CACIC,UAAW,GACXC,QAAS,MACTC,QAAS,WAGb,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,aAGZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,aAGZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,WAGZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,WAEZ,CACIF,UAAW,GACXC,QAAS,MACTC,QAAQ,WAEZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,aAEZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAS,WAGb,CACIF,UAAW,KACXC,QAAS,KACTC,QAAQ,WAGZ,CACIF,UAAW,KACXC,QAAS,KACTC,QAAQ,WAGZ,CACIF,UAAW,KACXC,QAAS,OACTC,QAAQ,aAMZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,WAEZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,WAEZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,aAEZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,SAEZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,WAEZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,WAEZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,aAEZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,aAEZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,cAKPC,EAAO,CAChB,CACIC,QAAS,EACTC,MAAO,KACPC,SAAU,GAEd,CACIF,QAAS,EACTC,MAAO,KACPC,SAAU,GAEd,CACIF,QAAS,EACTC,MAAO,KACPC,SAAU,GAEd,CACIF,QAAS,EACTC,MAAO,KACPC,SAAU,GAGd,CACIF,QAAS,EACTC,MAAO,KACPC,SAAU,GAEd,CACIF,QAAS,GACTC,MAAO,KACPC,SAAU,GAGd,CACIF,QAAS,GACTC,MAAO,KACPC,SAAU,GAMd,CACIF,QAAS,GACTC,MAAO,MACPC,SAAU,IAEd,CACIF,QAAS,GACTC,MAAO,SACPC,SAAU,IAEd,CACIF,QAAS,KACTC,MAAO,QACPC,SAAU,IAEd,CACIF,QAAS,KACTC,MAAO,KACPC,SAAU,GAEd,CACIF,QAAS,KACTC,MAAO,QACPC,SAAU,IAEd,CACIF,QAAS,KACTC,MAAO,UACPC,SAAU,IAGd,CACIF,QAAS,KACTC,MAAO,SACPC,SAAU,OAMLC,EAAM,CACf,CACIC,UAAW,EACXC,QAAS,KACTC,UAAW,WACXC,QAAS,YAEb,CACIH,UAAW,EACXC,QAAS,KACTC,UAAW,WACXC,QAAS,YAEb,CACIH,UAAW,EACXC,QAAS,KACTC,UAAW,WACXC,QAAS,YAEb,CACIH,UAAW,EACXC,QAAS,KACTC,UAAW,WACXC,QAAS,YAEb,CACIH,UAAW,EACXC,QAAS,KACTC,UAAW,WACXC,QAAS,YAEb,CACIH,UAAW,EACXC,QAAS,KACTC,UAAW,WACXC,QAAS,YAEb,CACIH,UAAW,EACXC,QAAS,KACTC,UAAW,WACXC,QAAS,YAEb,CACIH,UAAW,EACXC,QAAS,KACTC,UAAW,WACXC,QAAS,Y,kCCrPjB,sCAEMC,EAFU,6CAMHC,EAAM,CACfC,YAAaF,EAAW,yBACxBG,oBAAqBH,EAAW,YAChCI,uBAAwBJ,EAAU,sBAClCK,WAAYL,EAAW,gBAEvBM,YAAaN,EAAW,sBACxBO,UAAWP,EAAW,mB,qIC8HXQ,IAnII,SAAHC,GAAkD,IAA5CC,EAASD,EAATC,UAAWC,EAAYF,EAAZE,aAAcC,EAAWH,EAAXG,YAG7CC,qBAAU,WACR,GAAIH,EAAW,CACb,IAAMI,EAAY,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMC,MAAM,4DAA4D,KAAD,EAA1E,OAARN,EAAQG,EAAAI,KAAAJ,EAAAE,KAAA,EACOL,EAASQ,OAAO,KAAD,EAA9BP,EAAME,EAAAI,KACZE,EAAWR,GAAQE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,kCAAAA,EAAAQ,OAAA,GAAAZ,EAAA,mBAGtB,kBAPiB,OAAAJ,EAAAiB,MAAA,KAAAC,UAAA,KASlBnB,GACF,CACF,GAAG,CAACJ,IAGJ,IAAAwB,EAAkCC,mBAASvB,GAAYwB,EAAAC,YAAAH,EAAA,GAArCI,GAAFF,EAAA,GAAcA,EAAA,IAE9BG,EAA8BJ,mBAAS,CAAC,GAAEK,EAAAH,YAAAE,EAAA,GAAnCE,EAAOD,EAAA,GAAEX,EAAUW,EAAA,GAC1BE,EAAwCP,mBAAS,CAAC,GAAEQ,EAAAN,YAAAK,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,EAAkCX,mBAAS,IAAGY,EAAAV,YAAAS,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAAsCf,oBAAS,GAAMgB,EAAAd,YAAAa,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAGlCG,EAAwCb,EAAhCc,OAAQC,OAAc,IAAAF,EAAG,CAAC,EAACA,EACjBG,GAAsCD,EAAhD/D,MAAgD+D,EAApCE,oBAAW,IAAAD,EAAG,GAAEA,EAAAE,EAAoBH,EAAlBI,gBAAQ,IAAAD,EAAG,GAAEA,EAC7CE,EAAiB,CAAC,EAExBD,EAASE,SAAQ,SAACC,GAChBF,EAAeE,EAAKC,QAAUD,EAAKE,QACrC,IAEA,IAAMC,EAAuB,SAACC,GAC5B,IAAAC,EAA0BD,EAAME,OAAxBC,EAAIF,EAAJE,KAAMC,EAAOH,EAAPG,QACd1B,EAAe2B,wBAAC,CAAC,EACZ5B,GAAY,GAAA6B,YAAA,GACdH,EAAOC,IAEZ,EAEMG,EAAqBhB,EAAYiB,KAAI,SAACC,GAAO,OAAAJ,wBAAA,GAC9CI,GAAO,IACVvF,QAASwE,EAAee,EAAQxF,YAAcwF,EAAQvF,SAAO,IA2CzDwF,EAAa,WACjBlE,GAAa,EACf,EAGA,OACEmE,cAAA,OAAAC,SACEC,eAACC,IAAK,CAACC,OAAQxE,EAAWyE,OAAQN,EAAYO,MAAO,CAAEC,SAAU,SAAUN,SAAA,CACzED,cAACQ,IAAW,CAACH,OAAQN,EAAWE,SAAC,kCACjCC,eAACO,IAAS,CAAAR,SAAA,CACP/B,EACD8B,cAAA,OAAKU,UAAU,uBAAuBJ,MAAO,CAAEK,UAAW,QAASC,UAAW,SAAUL,SAAU,SAAUN,SAC1GD,cAAA,MAAIU,UAAU,aAAaJ,MAAO,CAAEO,UAAW,QAASZ,SACrDL,EAAmBC,KAAI,SAACC,GACvB,IAAQxF,EAAkCwF,EAAlCxF,UACFwG,GADoChB,EAAvBiB,QAAuBjB,EAAdY,UACR5B,EAASkC,MAAK,SAAC/B,GAAI,OAAKA,EAAKC,SAAW5E,CAAS,KAC/D2G,EAAcH,EAAcA,EAAY3B,SAAWW,EAAQvF,QACjE,OACEyF,cAAA,MAAAC,SACEC,eAAA,OAAKQ,UAAU,oBAAmBT,SAAA,CAChCD,cAAA,SACEkB,KAAK,WACL1B,KAAMM,EAAQxF,UACdmF,QAAS3B,EAAagC,EAAQxF,aAAc,EAC5C6G,SAAU/B,EACVsB,UAAU,8BAEXO,MATInB,EAAQxF,UAarB,WAIN4F,eAACkB,IAAW,CAAAnB,SAAA,CACVD,cAACqB,IAAM,CAACC,MAAM,UAAUC,QA5EX,WACnB,IAAMC,EAAkB1F,EAAY2F,EAAA,SAAAC,GAGlC,GAAI5D,EAAa4D,GAAY,CAC3B,IAAMC,EAAe/B,EAAmBoB,MACtC,SAAClB,GAAO,OAAKA,EAAQxF,YAAcsH,SAASF,EAAU,IAGxD,GAAIC,EAAc,CAChB,IAAMb,EAAchC,EAASkC,MAC3B,SAAC/B,GAAI,OAAKA,EAAKC,SAAWyC,EAAarH,SAAS,IAE5C2G,EAAcH,EAAcA,EAAY3B,SAAWwC,EAAapH,QAExCiH,EAAgBK,MAC5C,SAACC,GAAO,OAAKA,EAAQxH,YAAcqH,EAAarH,SAAS,KAIzDkH,EAAgBO,KAAK,CACnBzH,UAAWqH,EAAarH,UACxBC,QAAS0G,GAGf,CACF,CACF,EAxBA,IAAK,IAAMS,KAAa5D,EAAY2D,EAAAC,GAyBpClE,EAAagE,GACRlD,IACHH,EAAa6B,cAACgC,IAAiB,CAACV,MAAM,UAAUW,MAAM,EAAMhC,SAAC,iCAG7DiC,YAAW,WACT3D,GAAe,GACfJ,EAAa,GACf,GAAG,KAEP,EAsCsD8B,SAAC,QAAa,IAC5DD,cAACqB,IAAM,CAACC,MAAM,YAAYC,QAASxB,EAAWE,SAAC,iBAKzD,C,mICxIqBkC,EAAKC,aAAA,SAAAD,IAAAE,YAAA,KAAAF,GAAA,KACtBG,UAASpG,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAkG,EAAAhG,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEcC,MAAMzB,IAAII,WAAY,CACpCiH,OAAQ,QACT,KAAD,EAFO,OAAHD,EAAG9F,EAAAI,KAAAJ,EAAAE,KAAA,EAGY4F,EAAIzF,OAAO,KAAD,EAAnB,OAANP,EAAME,EAAAI,KAAAJ,EAAAgG,OAAA,SACLlG,GAAM,cAAAE,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAEP,IAAIiG,MAAMjG,EAAAO,GAAE2F,QAASlG,EAAAO,GAAE4F,SAAS,KAAD,oBAAAnG,EAAAQ,OAAA,GAAAZ,EAAA,mBAE5C,KAEDwG,UAAS,eAAA5G,EAAAC,YAAAC,cAAAC,MAAG,SAAA0G,EAAOC,GAAY,IAAAC,EAAAT,EAAAhG,EAAA,OAAAJ,cAAAK,MAAA,SAAAyG,GAAA,cAAAA,EAAAvG,KAAAuG,EAAAtG,MAAA,OAK8B,OAL9BsG,EAAAvG,KAAA,GAIjBsG,EAAY,IAAIE,SACZC,OAAO,eAAgB,oBAAoBF,EAAAtG,KAAA,EACnCC,MAAMzB,IAAIK,YAAa,CACrCgH,OAAQ,OACRY,QAASJ,EACTK,KAAMC,KAAKC,UAAU,CACjBC,SAAUT,EAAaU,WAAW,IAAK,SAE5C,KAAD,EANO,OAAHlB,EAAGU,EAAApG,KAAAoG,EAAAtG,KAAA,EAOY4F,EAAIzF,OAAO,KAAD,EAAnB,OAANP,EAAM0G,EAAApG,KAAAoG,EAAAR,OAAA,SACLlG,GAAM,cAAA0G,EAAAvG,KAAA,GAAAuG,EAAAjG,GAAAiG,EAAA,SAEP,IAAIP,MAAMO,EAAAjG,GAAE2F,QAASM,EAAAjG,GAAE4F,SAAS,KAAD,oBAAAK,EAAAhG,OAAA,GAAA6F,EAAA,mBAE5C,gBAAAY,GAAA,OAAAzH,EAAAiB,MAAA,KAAAC,UAAA,EAlBQ,GAkBR,KAGDwG,YAAW,eAAAC,EAAA1H,YAAAC,cAAAC,MAAG,SAAAyH,EAAOC,GAAa,IAAAd,EAAAT,EAAAhG,EAAA,OAAAJ,cAAAK,MAAA,SAAAuH,GAAA,cAAAA,EAAArH,KAAAqH,EAAApH,MAAA,OAG2B,OAH3BoH,EAAArH,KAAA,GAEpBsG,EAAY,IAAIE,SACZC,OAAO,eAAgB,oBAAoBY,EAAApH,KAAA,EACnCC,MAAMzB,IAAIG,uBAAwB,CAChDkH,OAAQ,OACRY,QAASJ,EACTK,KAAMC,KAAKC,UAAUO,KACtB,KAAD,EAJO,OAAHvB,EAAGwB,EAAAlH,KAAAkH,EAAApH,KAAA,EAKY4F,EAAIzF,OAAO,KAAD,EAAnB,OAANP,EAAMwH,EAAAlH,KAAAkH,EAAAtB,OAAA,SACLlG,GAAM,cAAAwH,EAAArH,KAAA,GAAAqH,EAAA/G,GAAA+G,EAAA,SAEP,IAAIrB,MAAMqB,EAAA/G,GAAE2F,QAASoB,EAAA/G,GAAE4F,SAAS,KAAD,oBAAAmB,EAAA9G,OAAA,GAAA4G,EAAA,mBAE5C,gBAAAG,GAAA,OAAAJ,EAAA1G,MAAA,KAAAC,UAAA,EAdU,GAcV,KAED8G,aAAY,eAAAC,EAAAhI,YAAAC,cAAAC,MAAG,SAAA+H,EAAOC,GAAW,IAAApB,EAAAT,EAAAhG,EAAA,OAAAJ,cAAAK,MAAA,SAAA6H,GAAA,cAAAA,EAAA3H,KAAA2H,EAAA1H,MAAA,OAK4B,OAL5B0H,EAAA3H,KAAA,GAInBsG,EAAY,IAAIE,SACZC,OAAO,eAAgB,oBAAoBkB,EAAA1H,KAAA,EACnCC,MAAMzB,IAAIM,UAAW,CACnC+G,OAAQ,OACRY,QAASJ,EACTK,KAAMe,IACP,KAAD,EAJO,OAAH7B,EAAG8B,EAAAxH,KAAAwH,EAAA1H,KAAA,EAKY4F,EAAIzF,OAAO,KAAD,EAAnB,OAANP,EAAM8H,EAAAxH,KAAAwH,EAAA5B,OAAA,SACLlG,GAAM,cAAA8H,EAAA3H,KAAA,GAAA2H,EAAArH,GAAAqH,EAAA,SAEP,IAAI3B,MAAM2B,EAAArH,GAAE2F,QAAS0B,EAAArH,GAAE4F,SAAS,KAAD,oBAAAyB,EAAApH,OAAA,GAAAkH,EAAA,mBAE5C,gBAAAG,GAAA,OAAAJ,EAAAhH,MAAA,KAAAC,UAAA,EAhBW,EAgBX,G,uHCyCUoH,UAtGE,SAAH5I,GAAgD,IAA1CC,EAASD,EAATC,UAAWC,EAAYF,EAAZE,aAAc2I,EAAS7I,EAAT6I,UAE3CzI,qBAAU,WACR,GAAIH,EAAW,CACb,IAAMI,EAAY,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMC,MAAM,4DAA4D,KAAD,EAA1E,OAARN,EAAQG,EAAAI,KAAAJ,EAAAE,KAAA,EACOL,EAASQ,OAAO,KAAD,EAA9BP,EAAME,EAAAI,KACZE,EAAWR,GAAQE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,kCAAAA,EAAAQ,OAAA,GAAAZ,EAAA,mBAGtB,kBAPiB,OAAAJ,EAAAiB,MAAA,KAAAC,UAAA,KAQlBnB,GACF,CACF,GAAG,CAACJ,IAEJ,IAAAwB,EAA8BC,mBAASmH,GAAUlH,EAAAC,YAAAH,EAAA,GAAjCqH,GAAFnH,EAAA,GAAYA,EAAA,IAC1BG,EAA8BJ,mBAAS,CAAC,GAAEK,EAAAH,YAAAE,EAAA,GAAnCE,EAAOD,EAAA,GAAEX,EAAUW,EAAA,GAC1BE,EAAwCP,mBAAS,CAAC,GAAEQ,EAAAN,YAAAK,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,EAAkCX,mBAAS,IAAGY,EAAAV,YAAAS,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAAsCf,oBAAS,GAAMgB,EAAAd,YAAAa,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAIlCG,EAAwCb,EAAhCc,OACRiG,QAD8B,IAAAlG,EAAG,CAAC,EAACA,GAC3B7D,aAAK,IAAA+J,EAAG,GAAEA,EAGZtF,EAAuB,SAACC,GAC5B,IAAAC,EAA0BD,EAAME,OAAxBC,EAAIF,EAAJE,KAAMC,EAAOH,EAAPG,QACd1B,EAAe2B,wBAAC,CAAC,EACZ5B,GAAY,GAAA6B,YAAA,GACdH,EAAOC,IAEZ,EA8BMM,EAAa,WACjBlE,GAAa,EACf,EAGA,OACEmE,cAAA,OAAAC,SACEC,eAACC,IAAK,CAACC,OAAQxE,EAAWyE,OAAQN,EAAYO,MAAO,CAAEC,SAAU,SAAUN,SAAA,CACzED,cAACQ,IAAW,CAACH,OAAQN,EAAWE,SAAC,iCACjCC,eAACO,IAAS,CAAAR,SAAA,CACP/B,EACD8B,cAAA,OAAKU,UAAU,uBAAuBJ,MAAO,CAAEK,UAAW,QAASC,UAAW,SAAUL,SAAU,SAAUN,SAC1GD,cAAA,MAAIU,UAAU,aAAaJ,MAAO,CAAEO,UAAW,QAASZ,SACrDtF,EAAMkF,KAAI,SAACpF,GAAK,OACfuF,cAAA,MAAAC,SACEC,eAAA,OAAKQ,UAAU,kBAAiBT,SAAA,CAC9BD,cAAA,SACEkB,KAAK,WACL1B,KAAM/E,EAAMC,QACZ+E,QAAS3B,EAAarD,EAAMC,WAAY,EACxCyG,SAAU/B,EACVsB,UAAU,4BAEXjG,EAAME,UATFF,EAAMC,QAWV,WAKbwF,eAACkB,IAAW,CAAAnB,SAAA,CACVD,cAACqB,IAAM,CAACC,MAAM,UAAUC,QA3Db,WACjB,IAAMoD,EAAaH,EAAU/C,EAAA,SAAAmD,GAE3B,GAAI9G,EAAa8G,GAAU,CACzB,IAAMjD,EAAehH,EAAMqG,MAAK,SAACvG,GAAK,OAAKA,EAAMC,UAAYkH,SAASgD,EAAQ,IAC1EjD,IAAiBgD,EAAW3D,MAAK,SAACvG,GAAK,OAAKA,EAAMC,UAAYiH,EAAajH,OAAO,KACpFiK,EAAW5C,KAAK,CACdrH,QAASiH,EAAajH,QACtBC,MAAOgH,EAAahH,MACpBC,SAAU+G,EAAa/G,UAG7B,CACF,EAXA,IAAK,IAAMgK,KAAW9G,EAAY2D,EAAAmD,GAYlCH,EAAWE,GACNrG,IACHH,EAAa6B,cAACgC,IAAiB,CAACV,MAAM,UAAUW,MAAM,EAAMhC,SAAC,gCAI7DiC,YAAW,WACT3D,GAAe,GACfJ,EAAa,GACf,GAAG,KAGP,EAiCoD8B,SAAC,QAAa,IAC1DD,cAACqB,IAAM,CAACC,MAAM,YAAYC,QAASxB,EAAWE,SAAC,iBAKzD,C,8GC1GqB4E,EAASzC,aAAA,SAAAyC,IAAAxC,YAAA,KAAAwC,GAkB1B,KAGAC,eAAc,eAAAnJ,EAAAO,YAAAC,cAAAC,MAAG,SAAAC,EAAO0I,EAAKpC,EAASqC,EAAMC,GAAQ,IAAA1C,EAAAhG,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAM5C,OAN4CF,EAAAC,KAAA,EAE5CwI,QAAQC,IAAI,MAAOJ,GACnBG,QAAQC,IAAI,SAAUxC,GACtBuC,QAAQC,IAAI,MAAOH,GACnBE,QAAQC,IAAI,OAAQF,GACpBxI,EAAAE,KAAA,EACkBC,MAAM,iCAAwC,IAAIwI,gBAAgB,CAChFC,OAAQL,EACR9D,KAAM,QACNyB,QAASA,EACT2C,UAAW,0CAA4CP,EACvDQ,SAAUN,EACVO,YAAa,gBACbC,aAAc,qCACd,CACAjD,OAAQ,QACT,KAAD,EAVO,OAAHD,EAAG9F,EAAAI,KAAAJ,EAAAE,KAAA,GAWY4F,EAAIzF,OAAO,KAAD,GAAnB,OAANP,EAAME,EAAAI,KAAAJ,EAAAgG,OAAA,SACLlG,GAAM,cAAAE,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAEP,IAAIiG,MAAMjG,EAAAO,GAAE2F,QAASlG,EAAAO,GAAE4F,SAAS,KAAD,oBAAAnG,EAAAQ,OAAA,GAAAZ,EAAA,mBAE5C,gBAAAqH,EAAAM,EAAAM,EAAAoB,GAAA,OAAA/J,EAAAuB,MAAA,KAAAC,UAAA,EAvBa,GAuBb,KAGDwI,4BAA2B,eAAA1J,EAAAC,YAAAC,cAAAC,MAAG,SAAA0G,EAAOiC,EAAKpC,EAASsC,GAAQ,IAAA1C,EAAAhG,EAAA,OAAAJ,cAAAK,MAAA,SAAAyG,GAAA,cAAAA,EAAAvG,KAAAuG,EAAAtG,MAAA,OAKnD,OALmDsG,EAAAvG,KAAA,EAEnDwI,QAAQC,IAAI,MAAOJ,GACnBG,QAAQC,IAAI,SAAUxC,GACtBuC,QAAQC,IAAI,OAAQF,GACpBhC,EAAAtG,KAAA,EACkBC,MAAM,yCAAgD,IAAIwI,gBAAgB,CACxFQ,SAAU,+BACV1E,KAAM,QACNyB,QAASA,EACT2C,UAAW,0CAA4CP,EACvDQ,SAAUN,EACVO,YAAa,gBACbC,aAAc,qCACd,CACAjD,OAAQ,QACT,KAAD,EAVO,OAAHD,EAAGU,EAAApG,KAAAoG,EAAAtG,KAAA,EAWY4F,EAAIzF,OAAO,KAAD,EAAnB,OAANP,EAAM0G,EAAApG,KAAAoG,EAAAR,OAAA,SACLlG,GAAM,cAAA0G,EAAAvG,KAAA,GAAAuG,EAAAjG,GAAAiG,EAAA,SAEP,IAAIP,MAAMO,EAAAjG,GAAE2F,QAASM,EAAAjG,GAAE4F,SAAS,KAAD,oBAAAK,EAAAhG,OAAA,GAAA6F,EAAA,mBAE5C,gBAAA+C,EAAAC,EAAAC,GAAA,OAAA9J,EAAAiB,MAAA,KAAAC,UAAA,EAtB0B,GAsB1B,KAED6I,0BAAyB,eAAApC,EAAA1H,YAAAC,cAAAC,MAAG,SAAAyH,EAAOkB,EAAKpC,EAASsC,GAAQ,IAAA1C,EAAAhG,EAAA,OAAAJ,cAAAK,MAAA,SAAAuH,GAAA,cAAAA,EAAArH,KAAAqH,EAAApH,MAAA,OAKjD,OALiDoH,EAAArH,KAAA,EAEjDwI,QAAQC,IAAI,MAAOJ,GACnBG,QAAQC,IAAI,SAAUxC,GACtBuC,QAAQC,IAAI,OAAQF,GACpBlB,EAAApH,KAAA,EACkBC,MAAM,yCAAgD,IAAIwI,gBAAgB,CACxFQ,SAAU,+BACV1E,KAAM,QACNyB,QAASA,EACT2C,UAAW,0CAA4CP,EACvDQ,SAAUN,EACVO,YAAa,gBACbC,aAAc,qCAEd,CACAjD,OAAQ,QACT,KAAD,EAXO,OAAHD,EAAGwB,EAAAlH,KAAAkH,EAAApH,KAAA,EAYY4F,EAAIzF,OAAO,KAAD,EAAnB,OAANP,EAAMwH,EAAAlH,KAAAkH,EAAAtB,OAAA,SACLlG,GAAM,cAAAwH,EAAArH,KAAA,GAAAqH,EAAA/G,GAAA+G,EAAA,SAEP,IAAIrB,MAAMqB,EAAA/G,GAAE2F,QAASoB,EAAA/G,GAAE4F,SAAS,KAAD,oBAAAmB,EAAA9G,OAAA,GAAA4G,EAAA,mBAE5C,gBAAAoC,EAAAC,EAAAC,GAAA,OAAAvC,EAAA1G,MAAA,KAAAC,UAAA,EAvBwB,GAuBxB,KAEDiJ,WAAU,eAAAlC,EAAAhI,YAAAC,cAAAC,MAAG,SAAA+H,EAAOkC,GAAI,IAAAC,EAAA/D,EAAAhG,EAAA,OAAAJ,cAAAK,MAAA,SAAA6H,GAAA,cAAAA,EAAA3H,KAAA2H,EAAA1H,MAAA,OAGyB,OAHzB0H,EAAA3H,KAAA,GAEV4J,EAAW,IAAIC,UACZpD,OAAO,OAAQkD,EAAMA,EAAK7G,MAAM6E,EAAA1H,KAAA,EACvBC,MAAMzB,IAAIC,YAAa,CACrCoH,OAAQ,OACRa,KAAMiD,IACP,KAAD,EAHO,OAAH/D,EAAG8B,EAAAxH,KAAAwH,EAAA1H,KAAA,EAIY4F,EAAIzF,OAAO,KAAD,EAAnB,OAANP,EAAM8H,EAAAxH,KAAAwH,EAAA5B,OAAA,SACLlG,GAAM,cAAA8H,EAAA3H,KAAA,GAAA2H,EAAArH,GAAAqH,EAAA,SAEP,IAAI3B,MAAM2B,EAAArH,GAAE2F,QAAS0B,EAAArH,GAAE4F,SAAS,KAAD,oBAAAyB,EAAApH,OAAA,GAAAkH,EAAA,mBAE5C,gBAAAqC,GAAA,OAAAtC,EAAAhH,MAAA,KAAAC,UAAA,EAbS,GAaT,KAEDsJ,gBAAevK,YAAAC,cAAAC,MAAG,SAAAsK,IAAA,IAAAnE,EAAAhG,EAAA,OAAAJ,cAAAK,MAAA,SAAAmK,GAAA,cAAAA,EAAAjK,KAAAiK,EAAAhK,MAAA,cAAAgK,EAAAjK,KAAA,EAAAiK,EAAAhK,KAAA,EAEQC,MAAMzB,IAAIE,oBAAqB,CAC7CmH,OAAQ,OACRY,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAC,KAEvB,KAAD,EALO,OAAHhB,EAAGoE,EAAA9J,KAAA8J,EAAAhK,KAAA,EAMY4F,EAAIzF,OAAO,KAAD,EAAnB,OAANP,EAAMoK,EAAA9J,KAAA8J,EAAAlE,OAAA,SACLlG,GAAM,cAAAoK,EAAAjK,KAAA,GAAAiK,EAAA3J,GAAA2J,EAAA,SAEP,IAAIjE,MAAMiE,EAAA3J,GAAE2F,QAASgE,EAAA3J,GAAE4F,SAAS,KAAD,oBAAA+D,EAAA1J,OAAA,GAAAyJ,EAAA,kBAE5C,G,kCC9HL,kCAAO,IAAME,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,mBAAoB,UAAW,UAAW,UAAW,oBAAqB,UAAW,UAAW,oBAAqB,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,QAAS,SAAU,QAAS,MAAO,O,8MCgfrUC,UApeG,WAKhB9K,qBAAU,WACV,GAAG,IAGH,IAAAqB,EAA4CC,mBAAS,CAAC,GAAEC,EAAAC,YAAAH,EAAA,GAAjD0J,EAAcxJ,EAAA,GAAEyJ,EAAiBzJ,EAAA,GACxCG,EAAsCJ,mBAAS,IAAGK,EAAAH,YAAAE,EAAA,GAA3CuJ,EAAWtJ,EAAA,GAAEuJ,EAAcvJ,EAAA,GAClCE,EAAkDP,mBAAS,CAAC,GAAEQ,EAAAN,YAAAK,EAAA,GAAvDsJ,EAAiBrJ,EAAA,GAAEsJ,EAAoBtJ,EAAA,GAC9CG,EAA4CX,mBAAS,CAAC,GAAEY,EAAAV,YAAAS,EAAA,GAAjDoJ,EAAcnJ,EAAA,GAAEoJ,EAAiBpJ,EAAA,GACxCG,EAA0Df,mBAAS,CAAC,GAAEgB,EAAAd,YAAAa,EAAA,GAA/DkJ,EAAqBjJ,EAAA,GAAEkJ,EAAwBlJ,EAAA,GACtDmJ,EAA0EnK,oBAAS,GAAMoK,EAAAlK,YAAAiK,EAAA,GAAlFE,EAA6BD,EAAA,GAAEE,EAAgCF,EAAA,GACtEG,EAA4CvK,mBAAS,MAAKwK,EAAAtK,YAAAqK,EAAA,GAAnDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAGxCG,EAAkC3K,mBAAS5C,KAAMwN,EAAA1K,YAAAyK,EAAA,GAA1CxD,EAASyD,EAAA,GAAEC,EAAYD,EAAA,GAC9BE,EAAsC9K,mBAAShD,KAAc+N,EAAA7K,YAAA4K,EAAA,GAAtDrM,EAAWsM,EAAA,GAAEC,EAAcD,EAAA,GAClCE,EAAkDjL,oBAAS,GAAMkL,EAAAhL,YAAA+K,EAAA,GAA1DE,GAAiBD,EAAA,GAAEE,GAAoBF,EAAA,GAC9CG,GAAsDrL,oBAAS,GAAMsL,GAAApL,YAAAmL,GAAA,GAA9DE,GAAmBD,GAAA,GAAEE,GAAsBF,GAAA,GAClDG,GAAgCzL,mBAAS,IAAG0L,GAAAxL,YAAAuL,GAAA,GAArCE,GAAQD,GAAA,GAAEE,GAAWF,GAAA,GAC5BG,GAA4B7L,mBAAS,IAAG8L,GAAA5L,YAAA2L,GAAA,GAAjCE,GAAMD,GAAA,GAAEE,GAASF,GAAA,GACxBG,GAAkCjM,mBAAS,IAAGkM,GAAAhM,YAAA+L,GAAA,GAAvCpL,GAASqL,GAAA,GAAEpL,GAAYoL,GAAA,GAC9BC,GAAsCnM,oBAAS,GAAMoM,GAAAlM,YAAAiM,GAAA,GAA9ClL,GAAWmL,GAAA,GAAElL,GAAckL,GAAA,GAC5BC,GAASC,iBAAO,MAShBC,GAAY,SAACC,EAAGC,GACpB/C,EAAkB+C,EACpB,EAEMC,GAAY,SAACC,GAEjB,IADA,IAAIC,EAAID,EAAGzK,OACJ0K,KAAOA,EAAEC,YAAcD,EAAEC,UAAUC,SAAS,gBACjDF,EAAIA,EAAEG,WAER,GAAIH,GAA4B,KAAvBA,EAAEI,UAAUC,OAEnB,OAAO,EAETN,EAAGO,gBACL,EA0DMC,GAAa,SAACX,EAAGY,EAAShQ,GAC9B,IAAIiQ,EAAkB5D,EACtB,GAAIgB,EAAgB,CAElB,IAAM6C,EAAY7C,EAAe2C,QAAQ3P,UAAY,IAAMgN,EAAerN,MAAMC,QAChFgQ,EAAkBxD,EAAkByD,GACpCC,GAAc9C,EAAe2C,QAAQ3P,UAAWgN,EAAerN,MAAMC,QAASwM,EAAkByD,GAAWrQ,UAC7G,CACA,IA9CkCwH,EA8C5B+I,EAAyB3D,EACzB4D,EAAML,EAAQ3P,UAAY,IAAML,EAAMC,QAC5CwM,EAAkB4D,GAAOJ,EACzBvD,EAAoBzH,YAAC,CAAC,EAAImL,IAlEI,SAACJ,EAAShQ,EAAOqH,GAC/C,IAAMiJ,EAAmB/D,EACnBgE,EAAa,CACnBA,GAAgB,IAChBA,YAAyB,IACzBA,YAAyB,IACzBA,EAAWrQ,MAAQF,EACnBuQ,EAAWjQ,QAAU0P,EACrBO,EAAWC,QAAUnJ,EAAQtH,QAC7BwQ,EAAW1Q,UAAYwH,EAAQxH,UAC/B0Q,EAAWE,UAAW,EACtBF,EAAWG,gBAAkB,IAC7BH,EAAWI,cAAgB,aAC3BL,EAAiBhJ,KAAKiJ,GACtB/D,EAAcoE,YAAKN,GACrB,CAoDEO,CAAwBb,EAAShQ,EAAOiQ,GAjDZtD,GADMtF,EAmDP4I,GAjDMpQ,WAG/B8M,EAAetF,EAAQxH,YAAc,EAFrC8M,EAAetF,EAAQxH,WAAa,EAMC,SAACiR,EAAWC,GACnD,IAAMV,EAAMS,EAAY,IAAMC,EACxBC,EAA6BnE,EAC9BmE,EAA2BX,GAG9BW,EAA2BX,IAAQ,EAFnCW,EAA2BX,GAAO,EAIpCvD,EAAwB7H,YAAC,CAAC,EAAI+L,IAC1BA,EAA2BX,GAAO,IACpCnD,GAAiC,GACjCzF,YAAW,WACTyF,GAAiC,EACnC,GAAG,KAIP,CA0BE+D,CAAiCjB,EAAQ3P,UAAW4P,EAAgBpQ,WACpEyM,EAAkB,CAAC,GACnBgB,EAAkB,KACpB,EAEM6C,GAAgB,SAACW,EAAWI,EAASH,GAEzC,IACMX,EAAyB3D,SACxB2D,EAFKU,EAAY,IAAMI,GAG9BxE,EAAoBzH,YAAC,CAAC,EAAImL,IAG1B,IAAME,EAAmB/D,EACnB4E,EAAwB,OAAhBb,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB/J,MAAK,SAAA6K,GAAG,IAAAC,EAAAC,EAAA,OAAa,QAATD,EAAAD,EAAIpR,aAAK,IAAAqR,OAAA,EAATA,EAAWpR,WAAYiR,IAAsB,QAAXI,EAAAF,EAAIpB,eAAO,IAAAsB,OAAA,EAAXA,EAAajR,aAAcyQ,CAAS,IAC9GK,GAAS,IACXb,EAAiBiB,OAAOJ,EAAO,GAC/B3E,EAAcoE,YAAKN,KAGrB,IAAMkB,EAAsB7E,EAC5B6E,EAAoBT,IAAc,EAC9BS,EAAoBT,IAAc,UAC7BS,EAAoBT,GAE7BnE,EAAkB4E,GAGlB,IAAMR,EAA6BnE,EAC7B4E,EAAoBX,EAAY,IAAMC,EACxCC,EAA2BS,GAAqB,EAClDT,EAA2BS,IAAsB,SAE1CT,EAA2BS,GAEpC3E,EAAyBkE,EAC3B,EAIMU,GAA8B,SAACZ,EAAWC,GAC9C,IAAKD,IAAcC,EACjB,OAAO,EAET,IAAMV,EAAMS,EAAY,IAAMC,EAE9B,OADAtG,QAAQC,IAAI2F,GACLxD,EAAsBwD,GAAO,CACtC,EAoBMsB,GAAc,WAGlB,IAAIC,EAA6B,MAAhBC,KAAKC,SAAoB,EACtCC,EAA8B,MAAhBF,KAAKC,SAAoB,EAG3C,OAFAF,GAAa,MAAQA,EAAUI,SAAS,KAAKC,OAAO,KACpDF,GAAc,MAAQA,EAAWC,SAAS,KAAKC,OAAO,GAExD,EAEMC,GAAc,eAAAhR,EAAAO,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAuQ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9G,EAAApB,EAAAmI,EAAAC,EAAAC,EAAA,OAAAnR,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACA4Q,IAAY7D,GAAO8D,SAAS,KAAD,EAMhD,IANMZ,EAAMnQ,EAAAI,KACNgQ,EAAUD,EAAOa,YAEjBX,EAAaY,KAAKb,EAAQc,MAAM,KAAK,IACrCZ,EAAaF,EAAQc,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAAK,GAC5DX,EAAK,IAAIY,WAAWd,EAAWe,QAC5BZ,EAAI,EAAGA,EAAIH,EAAWe,OAAQZ,IACrCD,EAAGC,GAAKH,EAAWgB,WAAWb,GAKG,OAH7BC,EAAO,IAAIa,KAAK,CAACf,GAAK,CAAE9L,KAAM6L,IAC9BI,EAAYf,KACZ/F,EAAO,IAAI2H,KAAK,CAACd,GAAOC,EAAY,QACpClI,EAAWkI,EAAY,OAAM1Q,EAAAE,KAAA,IACd,IAAIkI,KAAYuB,WAAWC,GAAM,KAAD,GAAzC,GACG,YADH5J,EAAAI,KACY,CAAAJ,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,IACH,IAAIkI,KAAY4B,kBAAkB,KAAD,GAA1C,GAAJ4G,EAAI5Q,EAAAI,QACK,QAAXuQ,EAAAC,EAAK5O,cAAM,IAAA2O,OAAA,EAAXA,EAAaS,QAAS,GAAC,CAAApR,EAAAE,KAAA,SAEzB,OADM2Q,EAAaD,EAAK5O,OAAOwP,UAAUjN,MAAK,SAAAkN,GAAQ,IAADC,EAAE,OAAgB,QAATA,EAAAD,EAAIE,aAAK,IAAAD,OAAA,EAATA,EAAWE,QAAQlB,KAAc,CAAE,IACjG1Q,EAAAC,KAAA,GAAAD,EAAAE,KAAA,IAKQ,IAAIkI,KAAYmB,0BAA0BsH,EAAWgB,QAAS,aAAcrJ,GAAU,KAAD,GAAAxI,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,UAI3FyI,QAAQC,IAAI,SAAQ,eAAA1I,EAAAC,KAAA,GAAAD,EAAAE,KAAA,IAGd,IAAIkI,KAAYc,4BAA4B2H,EAAWgB,QAAS,aAAcrJ,GAAU,KAAD,GAAAxI,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA8R,GAAA9R,EAAA,UAE7FyI,QAAQC,IAAI,SAAQ,QAIrB7G,KACHH,GAAa6B,cAACgC,IAAiB,CAACV,MAAM,UAAUW,MAAM,EAAMhC,SAAC,wCAG7DiC,YAAW,WACT3D,IAAe,GACfJ,GAAa,GACf,GAAG,MACH,yBAAA1B,EAAAQ,OAAA,GAAAZ,EAAA,4BAEH,kBA/CmB,OAAAV,EAAAuB,MAAA,KAAAC,UAAA,KAkFdqR,GAAS,eAAAvS,EAAAC,YAAAC,cAAAC,MAAG,SAAA0G,IAAA,IAAA2L,EAAApL,EAAA9G,EAAAmS,EAAA,OAAAvS,cAAAK,MAAA,SAAAyG,GAAA,cAAAA,EAAAvG,KAAAuG,EAAAtG,MAAA,OAmBf,OAlBK8R,EAAcjK,EAAU3E,KAAI,SAAA8O,GAAI,OAAIA,EAAKjU,OAAO,IAChD2I,EAAO,CACXuL,YAAa,EACbC,YAAa,kBACbC,SAAY1F,GAAS,WAAa,SAClC5F,SAAUwF,GACV+F,OAAQ3F,GACR4F,QAAS,EACTC,UAAW,EACXC,QAAS,UACTxU,QAAS+T,EACT3T,UAAW,CACT,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEvBoQ,UAAU,EACVC,gBAAiB,EACjBC,cAAe,IAAI+D,KACnBC,YAAapI,GACd/D,EAAAtG,KAAA,GAEoB,IAAIwF,KAAQwB,YAAYN,GAAM,KAAD,EACnC,aADT9G,EAAM0G,EAAApG,MAELyB,KACHH,GAAa6B,cAACgC,IAAiB,CAACV,MAAM,UAAUW,MAAM,EAAMhC,SAAC,mCAG7DiC,YAAW,WACT3D,IAAe,GACfJ,GAAa,GACf,GAAG,MAIAG,KACHH,GAAa6B,cAACgC,IAAiB,CAACV,MAAM,SAASW,MAAM,EAAMhC,SAChC,QADgCyO,EAClD,OAANnS,QAAM,IAANA,OAAM,EAANA,EAAQ8S,wBAAgB,IAAAX,IAAI,4BAE/BxM,YAAW,WACT3D,IAAe,GACfJ,GAAa,GACf,GAAG,MAEN,wBAAA8E,EAAAhG,OAAA,GAAA6F,EAAA,KACF,kBA5Cc,OAAA7G,EAAAiB,MAAA,KAAAC,UAAA,KAsDf,OACE6C,cAAAsP,WAAA,CAAArP,SACEC,eAAA,OAAKQ,UAAU,eAAcT,SAAA,CAC1B/B,GAECwJ,EAAgC1H,cAACuP,IAAK,CAACjO,MAAM,UAASrB,SAAC,4CAE5CD,cAAAsP,WAAA,IAEbtP,cAAA,MAAIU,UAAU,gBAAeT,SAAC,mBAC9BC,eAAA,OAAKQ,UAAU,2BAA0BT,SAAA,CACvCD,cAACqB,IAAM,CAACX,UAAU,OAAOY,MAAM,OAAOC,QA1F3B,WAEjBkH,IAAqB,EACvB,EAuFkExI,SAAC,gBAG1DuI,IAAqBxI,cAACuE,UAAQ,CAAC3I,UAAW4M,GAAmB3M,aAAc4M,GAAsBjE,UAAWA,IAC7GxE,cAACqB,IAAM,CAACX,UAAU,MAAMY,MAAM,OAAOC,QAjFxB,WACnBsH,IAAuB,EACzB,EA+EmE5I,SAAC,iBAG3D2I,IAAuB5I,cAACtE,IAAU,CAACE,UAAWgN,GAAqB/M,aAAcgN,GAAwB/M,YAAaA,IACvHkE,cAACqB,IAAM,CAACX,UAAU,MAAMY,MAAM,OAAOC,QAASiN,GAAWgB,SAAuB,KAAbxG,GAAgB/I,SAAC,SAIpFD,cAACqB,IAAM,CAACX,UAAU,MAAMY,MAAM,OAAOC,QAASoL,GAAe1M,SAAC,SAG9DD,cAACqB,IAAM,CAACX,UAAU,MAAMY,MAAM,OAAOC,QAlC5B,SAACuJ,GAEhB,IAAMD,EAAyB3D,SACxB2D,EAAuBC,GAC9B3D,EAAqB,CAAE0D,0BACzB,EA6B+D5K,SAAC,iBAI1DD,cAAA,OAAAC,SACEC,eAAA,OAAKuP,IAAK/F,GAAOzJ,SAAA,CACfD,cAAA,SACAA,cAAC0P,IAAI,CAAAzP,SACHC,eAAA,OAAKQ,UAAU,wBAAuBT,SAAA,CACpCC,eAACyP,IAAS,CAACjP,UAAU,wBAAuBT,SAAA,CAC1CC,eAAA,KAAGQ,UAAU,mBAAkBT,SAAA,CAAC,OAAID,cAAA,QAAMM,MAAO,CAAEgB,MAAO,OAAQrB,SAAC,MAAQ,OAC3ED,cAAC4P,IAAK,CACJC,GAAG,WACHrQ,KAAK,OACL0B,KAAK,OACL4O,aAAc9G,GACd7H,SAAU,SAAC0I,IAjIJ,SAACA,GACxBZ,GAAYY,EAAEtK,OAAOwQ,MACvB,CA+HqCC,CAAiBnG,EAAG,EACvCnJ,UAAU,aACVuP,KAAK,IAAId,MAAOe,cAAcvC,MAAM,KAAK,QAG7CzN,eAACyP,IAAS,CAACjP,UAAU,wBAAuBT,SAAA,CAC1CD,cAAA,KAAGU,UAAU,mBAAkBT,SAAC,QAChCD,cAAC4P,IAAK,CACJC,GAAG,SACHrQ,KAAK,OACL0B,KAAK,OACL4O,aAAc1G,GACdjI,SAAU,SAAC0I,IAzIN,SAACA,GACtBR,GAAUQ,EAAEtK,OAAOwQ,MACrB,CAuIqCI,CAAetG,EAAG,EACrCnJ,UAAU,aACVuP,KAAK,IAAId,MAAOe,cAAcvC,MAAM,KAAK,aAKjD3N,cAAA,SAAOU,UAAU,cAAaT,SAC5BC,eAAA,SAAAD,SAAA,CACED,cAAA,OAAKU,UAAU,WAAUT,SACvBC,eAAA,MAAAD,SAAA,CACED,cAAA,MAAIU,UAAU,qBAAoBT,SAAC,SAClCuE,EAAU3E,KAAI,SAACuQ,GACd,OACElQ,eAAA,MAAIQ,UAAU,sBAAqBT,SAAA,CAAqBmQ,EAAKzV,MAC3DqF,cAAA,UAAQU,UAAU,eAAea,QAAS,kBA/I5C,SAACqD,GAErB,GADsByL,OAAOC,QAAQ,+CAClB,CACjB,IAAMC,EAAiB/L,EAAUgM,QAAO,SAACJ,GAAI,OAAKA,EAAK1V,UAAYkK,CAAO,IAC1EsD,EAAaqI,EACf,CACF,CAyIwEE,CAAcL,EAAK1V,QAAQ,EAACuF,SAACD,cAAC0Q,IAAQ,QAD/CN,EAAK1V,QAIlD,SAGJsF,cAAA,MAAAC,SACGpF,IAAKgF,KAAI,SAACoK,GACT,OAEE/J,eAAA,OAAAD,SAAA,CACEC,eAAA,MAAIQ,UAAU,qBAAoBT,SAAA,CAAEgK,EAAEjP,UAAU,IAAEiP,EAAEhP,WACnDuJ,EAAU3E,KAAI,SAAC8Q,GAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACdnG,EAAMb,EAAEnP,UAAY,IAAM6V,EAAEjW,QAClC,OACEsF,cAAA,MACEkR,WAAW,EACXC,WAAYpH,GACZqH,OAAQ,SAACvH,GAAC,OAAKW,GAAWX,EAAGI,EAAG0G,EAAE,EAClCU,YAAa,SAACxH,GA3PxC9B,EAAkB,CAChB0C,QA0PwER,EA1P/DxP,MA0PkEkW,GAAE,EAErDd,GAAI/E,EACJpK,UAAS,cAAA4Q,OAAgBnF,GAA4BlC,EAAEnP,UAA4C,QAAnC8V,EAAwB,QAAxBC,EAAE3J,EAAkB4D,UAAI,IAAA+F,OAAA,EAAtBA,EAAwBvW,iBAAS,IAAAsW,IAAI,MAAQ,QAAU,IACzHtQ,MAAO,CAAEiR,gBAAuC,QAAxBT,EAAE5J,EAAkB4D,UAAI,IAAAgG,OAAA,EAAtBA,EAAwBxP,OAAQrB,SAE1DC,eAAA,OAAKQ,UAAS,wBAAA4Q,OAAgD,QAAhDP,EAA0B7J,EAAkB4D,UAAI,IAAAiG,OAAA,EAAtBA,EAAwBrQ,UAAS,KAAIT,SAAA,CAC3ED,cAAA,OAAKU,UAAU,eAAcT,SACJ,QADI+Q,EAC1B9J,EAAkB4D,UAAI,IAAAkG,OAAA,EAAtBA,EAAwBzW,UAE3ByF,cAAA,OAAKU,UAAU,sBAAqBT,SACX,QAAtBgR,EAAA/J,EAAkB4D,UAAI,IAAAmG,GAAtBA,EAAwB1W,QACvByF,cAAA,UACEU,UAAU,cACVa,QAAS,kBAAMqJ,GAAcX,EAAEnP,UAAW6V,EAAEjW,QAASwM,EAAkB4D,GAAKxQ,UAAU,EAAC2F,SAEvFD,cAAC0Q,IAAQ,MAET1Q,cAAAsP,WAAA,UAjBHxE,EAsBX,MAGN,gBAMV9K,cAAA,OAAKU,UAAU,oBAAmBT,SAC/BnE,EAAY+D,KAAI,SAACiC,EAAS8J,GACzB,IAAQtR,EAAuBwH,EAAvBxH,UAAWC,EAAYuH,EAAZvH,QAEnB,OADAuH,EAAQR,MAAQsF,IAAOgF,GAErB1L,eAAA,OACEI,MAAO,CAAEiR,gBAAiBzP,EAAQR,OAElCZ,UAAU,eACVwQ,WAAW,EACXG,YAAa,SAACxH,GAAC,OAAKD,GAAUC,EAAG/H,EAAQ,EACzC0P,UAAW,SAAC3H,GAhSxB9C,EAAkB,CAAC,EAgSuB,EAC9B0K,aAAc,SAAC5H,GAAC,OAAKD,GAAUC,EAAG/H,EAAQ,EAC1C4P,YAAa,SAAC7H,GAAC,OA/RT,SAACA,GACnB3E,QAAQC,IAAI0E,GACZ,IAAM8H,EAAI9H,EAAE+H,QAAQ,GAAGC,QACjBC,EAAIjI,EAAE+H,QAAQ,GAAGG,QACnBC,EAAOC,SAASC,iBAAiBP,EAAGG,GACxCK,MAAM,cAAeH,EAAKnC,GAC5B,CAyRkC6B,CAAY7H,EAAE,EAAC5J,SAAA,CAEnCD,cAAA,MAAAC,SAAK1F,IACJ6M,EAAe9M,GAAa,GAC3B0F,cAAA,QAAMU,UAAS,gBAAmBwQ,WAAW,EAAMjR,SAChDmH,EAAe9M,KAGpB0F,cAAA,UAAQU,UAAU,eAAea,QAAS,kBA3MhC,SAACG,GAEvB,GADsB2O,OAAOC,QAAQ,iDAClB,CACjB,IAAM8B,EAAkBtW,EAAY0U,QAAO,SAACJ,GAAI,OAAKA,EAAK9V,YAAcoH,CAAS,IACjF2G,EAAe+J,EACjB,CACF,CAqM8DC,CAAgBvQ,EAAQxH,UAAU,EAAC2F,SAACD,cAAC0Q,IAAQ,QAdxFpW,EAiBX,UAKV,C","file":"static/js/6.7cf2f930.chunk.js","sourcesContent":["import {v4 as uuidv4} from \"uuid\"\nexport const teachers_list = [\n        {\n            FacultyID: 22,\n            Faculty: \"MYK\",\n            subject: \"Physics\"\n        },\n        \n        {\n            FacultyID: 3038,\n            Faculty: \"KPS\",\n            subject:\"Chemistry\"\n        },\n\n        {\n            FacultyID: 2029,\n            Faculty: \"MRS\",\n            subject:\"Chemistry\"\n        },\n\n        {\n            FacultyID: 3051,\n            Faculty: \"MAS\",\n            subject:\"Physics\"\n        },\n\n        {\n            FacultyID: 3050,\n            Faculty: \"RSS\",\n            subject:\"Physics\"\n        },\n        {\n            FacultyID: 25,\n            Faculty: \"NMS\",\n            subject:\"Biology\"\n        },\n        {\n            FacultyID: 3037,\n            Faculty: \"HDS\",\n            subject:\"Chemistry\"\n        },\n        {\n            FacultyID: 3032,\n            Faculty: \"MNM\",\n            subject: \"Biology\"\n        },\n        \n        {\n            FacultyID: 1023,\n            Faculty: \"SJ\",\n            subject:\"Biology\"\n        },\n\n        {\n            FacultyID: 1025,\n            Faculty: \"AJ\",\n            subject:\"Biology\"\n        },\n\n        {\n            FacultyID: 1026,\n            Faculty: \"DMPS\",\n            subject:\"Chemistry\"\n        },\n\n        \n       \n        \n        {\n            FacultyID: 1027,\n            Faculty: \"PSJ\",\n            subject:\"Physics\"\n        },\n        {\n            FacultyID: 3033,\n            Faculty: \"YBS\",\n            subject:\"Biology\"\n        },\n        {\n            FacultyID: 3030,\n            Faculty: \"AKS\",\n            subject:\"Chemistry\"\n        },\n        {\n            FacultyID: 2028,\n            Faculty: \"AMS\",\n            subject:\"Maths\"\n        },\n        {\n            FacultyID: 3031,\n            Faculty: \"NDS\",\n            subject:\"Physics\"\n        },\n        {\n            FacultyID: 3052,\n            Faculty: \"HWS\",\n            subject:\"Physics\"\n        },\n        {\n            FacultyID: 1029,\n            Faculty: \"JRS\",\n            subject:\"Chemistry\"\n        },\n        {\n            FacultyID: 3053,\n            Faculty: \"HTS\",\n            subject:\"Chemistry\"\n        },\n        {\n            FacultyID: 3054,\n            Faculty: \"NPS\",\n            subject:\"Chemistry\"\n        },\n    ]; \n    \n\nexport const batch= [\n    {\n        BatchID: 1,\n        Batch: \"A1\",\n        CourseID: 3\n    },\n    {\n        BatchID: 2,\n        Batch: \"B1\",\n        CourseID: 2\n    },\n    {\n        BatchID: 3,\n        Batch: \"C1\",\n        CourseID: 1\n    },\n    {\n        BatchID: 6,\n        Batch: \"A2\",\n        CourseID: 3\n    },\n    \n    {\n        BatchID: 7,\n        Batch: \"A4\",\n        CourseID: 3\n    },\n    {\n        BatchID: 10,\n        Batch: \"A3\",\n        CourseID: 3\n    },\n    \n    {\n        BatchID: 15,\n        Batch: \"C2\",\n        CourseID: 1\n    },\n    \n    \n    //MORE BATCHES ADDED WITH A FAKE BATCHID AND FAKE COURSEID NEED TO CHANGE LATER\n\n    {\n        BatchID: 20,\n        Batch: \"JO1\",\n        CourseID: 13\n    },\n    {\n        BatchID: 22,\n        Batch: \"JXII-1\",\n        CourseID: 12\n    },\n    {\n        BatchID: 3042,\n        Batch: \"JXI-1\",\n        CourseID: 11\n    },\n    {\n        BatchID: 3049,\n        Batch: \"B2\",\n        CourseID: 2\n    },\n    {\n        BatchID: 3061,\n        Batch: \"JXI-2\",\n        CourseID: 11\n    },\n    {\n        BatchID: 3078,\n        Batch: \"JEE adv\",\n        CourseID: 13\n    },\n    \n    {\n        BatchID: 3079,\n        Batch: \"JEE XL\",\n        CourseID: 1025\n    }\n    \n]\n\n\nexport const time= [\n    {\n        LectureID: 1,\n        Lecture: \"L1\",\n        Time_From: \"08:30 AM\",\n        Time_To: \"09:45 AM\"\n    },\n    {\n        LectureID: 2,\n        Lecture: \"L2\",\n        Time_From: \"09:50 AM\",\n        Time_To: \"11:05 AM\"\n    },\n    {\n        LectureID: 3,\n        Lecture: \"L3\",\n        Time_From: \"11:20 AM\",\n        Time_To: \"12:35 PM\"\n    },\n    {\n        LectureID: 4,\n        Lecture: \"L4\",\n        Time_From: \"12:40 PM\",\n        Time_To: \"01:55 PM\"\n    },\n    {\n        LectureID: 5,\n        Lecture: \"L5\",\n        Time_From: \"02:00 PM\",\n        Time_To: \"03:15 PM\"\n    },\n    {\n        LectureID: 6,\n        Lecture: \"L6\",\n        Time_From: \"03:20 PM\",\n        Time_To: \"04:35 PM\"\n    },\n    {\n        LectureID: 7,\n        Lecture: \"L7\",\n        Time_From: \"04:50 PM\",\n        Time_To: \"06:05 PM\"\n    },\n    {\n        LectureID: 8,\n        Lecture: \"L8\",\n        Time_From: \"06:15 PM\",\n        Time_To: \"07:30 PM\"\n    }\n]\n","const ENV_URL = 'https://api.aayamcareerinstitute.co.in/api'; // producation fn\nconst DEV_URL = 'http://localhost:5001'; // producation fn\nconst BASE_URL= ENV_URL\n\n\n\nexport const URL = {\n    UPLOAD_FILE: BASE_URL + '/UploadFilesAttachment',\n    GET_UPLOAD_FILE_URL: BASE_URL + '/GetFiles', \n    GET_SAVE_TIMETABLE_URL: BASE_URL+ '/AddUpdateTimeTable',\n    GET_ALL_TT: BASE_URL + '/GetTimeTable', \n\n    GET_EDIT_TT: BASE_URL + '/GetTimeTableByDate',\n    REMOVE_TT: BASE_URL + '/DeleteTimeTable',\n\n\n\n\n};  \n","import React, { useState, useEffect } from 'react';\nimport { batch } from '../List/List';\nimport { teachers_list } from '../List/List';\n// import { teachers_list } from '../../../const/teacherList';\n// import { batch } from '../../../const/batchList';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledAlert } from 'reactstrap';\nimport \"./TeacherForm.css\";\n\nconst AddTeacher = ({ showModal, setShowModal, teacherList }) => {\n\n  /************************************Use Effect****************************************** */\n  useEffect(() => {\n    if (showModal) {\n      const fetchApiData = async () => {\n        try {\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\n          const result = await response.json();\n          setApiData(result);\n        } catch (error) {\n        }\n      };\n\n      fetchApiData();\n    }\n  }, [showModal]);\n\n  /***********************Use State***************************************************** */\n  const [faculties, setFaculties] = useState(teacherList);\n  // const [batches, setBatches] = useState(JSON.parse(localStorage.getItem('batches')) || batch);\n  const [apiData, setApiData] = useState({});\n  const [checkedItems, setCheckedItems] = useState({});\n  const [showAlert, setShowAlert] = useState(\"\");\n  const [timeOfAlert, setTimeOfAlert] = useState(false);\n\n  /*************************other consts*************************************************** */\n  const { Object: responseObject = {} } = apiData;\n  const { Batch = [], FacultyList = [], UserList = [] } = responseObject;\n  const facultyNameMap = {};\n\n  UserList.forEach((user) => {\n    facultyNameMap[user.UserID] = user.UserName;\n  });\n  /****************************************methods******************************************* */\n  const handleCheckboxChange = (event) => {\n    const { name, checked } = event.target;\n    setCheckedItems({\n      ...checkedItems,\n      [name]: checked,\n    });\n  };\n\n  const updatedFacultyList = FacultyList.map((faculty) => ({\n    ...faculty,\n    Faculty: facultyNameMap[faculty.FacultyID] || faculty.Faculty,\n  }));\n\n  const addToFaculty = () => {\n    const newTeachersList = teacherList;\n\n    for (const facultyID in checkedItems) {\n      if (checkedItems[facultyID]) {\n        const selectedItem = updatedFacultyList.find(\n          (faculty) => faculty.FacultyID === parseInt(facultyID)\n        );\n\n        if (selectedItem) {\n          const facultyUser = UserList.find(\n            (user) => user.UserID === selectedItem.FacultyID\n          );\n          const facultyName = facultyUser ? facultyUser.UserName : selectedItem.Faculty;\n\n          const isTeacherAlreadyAdded = newTeachersList.some(\n            (teacher) => teacher.FacultyID === selectedItem.FacultyID\n          );\n\n          if (!isTeacherAlreadyAdded) {\n            newTeachersList.push({\n              FacultyID: selectedItem.FacultyID,\n              Faculty: facultyName,\n            });\n          }\n        }\n      }\n    }\n    setFaculties(newTeachersList);\n    if (!timeOfAlert) {\n      setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\n        Teachers added successfully\n      </UncontrolledAlert>);\n      setTimeout(() => {\n        setTimeOfAlert(false);\n        setShowAlert(\"\");\n      }, 3000);\n    };\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  /**********************************************Template to return******************************** */\n  return (\n    <div>\n      <Modal isOpen={showModal} toggle={closeModal} style={{ maxWidth: '320px' }}>\n        <ModalHeader toggle={closeModal}>Select Teachers from the list</ModalHeader>\n        <ModalBody>\n          {showAlert}\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\n              {updatedFacultyList.map((faculty) => {\n                const { FacultyID, bgColor, className } = faculty;\n                const facultyUser = UserList.find((user) => user.UserID === FacultyID);\n                const facultyName = facultyUser ? facultyUser.UserName : faculty.Faculty;\n                return (\n                  <li key={faculty.FacultyID}>\n                    <div className=\"add-faculty-style\">\n                      <input\n                        type=\"checkbox\"\n                        name={faculty.FacultyID}\n                        checked={checkedItems[faculty.FacultyID] || false}\n                        onChange={handleCheckboxChange}\n                        className=\"addfaculty-checkbox-style\"\n                      />\n                      {facultyName}\n                    </div>\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={addToFaculty}>Add</Button>{' '}\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\nexport default AddTeacher;\n\n\n\n\n\n\n","import { URL } from '../const/url';\n\nexport default class TtApi {\n    getTtList = async () => {\n        try {\n            const res = await fetch(URL.GET_ALL_TT, {\n                method: 'GET',\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n    getEditTt = async (fromDateEdit) => {\n        try {\n            // const formData = new FormData();\n            // formData.append('file', file, file.name);\n            const myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            const res = await fetch(URL.GET_EDIT_TT, {\n                method: 'POST',\n                headers: myHeaders,\n                body: JSON.stringify({\n                    FromDate: fromDateEdit.replaceAll(\"-\", \"/\"),\n                })\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n    \n    addUpdateTt = async (ttRequestBody) => {\n        try {\n            const myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            const res = await fetch(URL.GET_SAVE_TIMETABLE_URL, {\n                method: 'POST',\n                headers: myHeaders,\n                body: JSON.stringify(ttRequestBody)\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n    removeTtById = async (timeTableID) => {\n        try {\n            // const formData = new FormData();\n            // formData.append('file', file, file.name);\n            const myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            const res = await fetch(URL.REMOVE_TT, {\n                method: 'POST',\n                headers: myHeaders,\n                body: timeTableID\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n}","\nimport React, { useState, useEffect } from 'react';\nimport { batch } from '../List/List';\n// import { batch } from '../../../const/batchList';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledAlert } from 'reactstrap';\nimport \"./AddBatch.css\"\n\nconst AddBatch = ({ showModal, setShowModal, batchList }) => {\n  /******************************************Use Effect********************************************** */\n  useEffect(() => {\n    if (showModal) {\n      const fetchApiData = async () => {\n        try {\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\n          const result = await response.json();\n          setApiData(result);\n        } catch (error) {\n        }\n      };\n      fetchApiData();\n    }\n  }, [showModal]);\n  /********************************************Use State****************************************** */\n  const [batches, setBatches] = useState(batchList);\n  const [apiData, setApiData] = useState({});\n  const [checkedItems, setCheckedItems] = useState({});\n  const [showAlert, setShowAlert] = useState(\"\");\n  const [timeOfAlert, setTimeOfAlert] = useState(false);\n\n\n  /*****************************Other consts******************************************************** */\n  const { Object: responseObject = {} } = apiData;\n  const { Batch = [] } = responseObject;\n\n  /***************************************Methods*************************************************** */\n  const handleCheckboxChange = (event) => {\n    const { name, checked } = event.target;\n    setCheckedItems({\n      ...checkedItems,\n      [name]: checked,\n    });\n  };\n\n  const addToBatch = () => {\n    const newBatches = batchList;\n    for (const batchID in checkedItems) {\n      if (checkedItems[batchID]) {\n        const selectedItem = Batch.find((batch) => batch.BatchID === parseInt(batchID));\n        if (selectedItem && !newBatches.find((batch) => batch.BatchID === selectedItem.BatchID)) {\n          newBatches.push({\n            BatchID: selectedItem.BatchID,\n            Batch: selectedItem.Batch,\n            CourseID: selectedItem.CourseID,\n          });\n        }\n      }\n    }\n    setBatches(newBatches);\n    if (!timeOfAlert) {\n      setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\n        Batches added successfully\n      </UncontrolledAlert>);\n\n      setTimeout(() => {\n        setTimeOfAlert(false);\n        setShowAlert(\"\");\n      }, 3000);\n\n    };\n  }\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  /***************************Template to return******************************************************* */\n  return (\n    <div>\n      <Modal isOpen={showModal} toggle={closeModal} style={{ maxWidth: '320px' }}>\n        <ModalHeader toggle={closeModal}>Select Batches from the list</ModalHeader>\n        <ModalBody>\n          {showAlert}\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\n              {Batch.map((batch) => (\n                <li key={batch.BatchID}>\n                  <div className=\"add-batch-style\">\n                    <input\n                      type=\"checkbox\"\n                      name={batch.BatchID}\n                      checked={checkedItems[batch.BatchID] || false}\n                      onChange={handleCheckboxChange}\n                      className=\"addbatch-checkbox-style\"\n                    />\n                    {batch.Batch}\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={addToBatch}>Add</Button>{' '}\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\nexport default AddBatch;\n\n","import { URL } from '../const/url';\n\nexport default class UploadApi {\n    // getUserWalletBalance = async (userId) => {\n    //     try {\n    //         GlobalEmitterService.emit(true);\n    //         const token = `Bearer ${AuthService.getToken()}`;\n    //         const res = await fetch(URL.USER_WALLET_BALANCE + '?' + new URLSearchParams({\n    //             userId\n    //         }), {\n    //             method: 'GET',\n    //             headers: { 'Content-Type': 'application/json', 'Authorization': token },\n    //         });\n    //         const result = await res.json();\n    //         GlobalEmitterService.emit(false);\n    //         return result;\n    //     } catch (e) {\n    //         GlobalEmitterService.emit(false);\n    //         throw new Error(e.message, e.options);\n    //     }\n    // }\n\n\n    getWattsappApi = async (url, message, cell, fileName) => {\n        try {\n            console.log(\"url\", url);\n            console.log(\"mesage\", message);\n            console.log(\"cel\", cell);\n            console.log(\"file\", fileName);\n            // https://ziper.io/api/send.php?number=917898118503&type=media&message=test%20message&media_url=https://api.aayamcareerinstitute.co.in//Uploads/Files/File_3431223213168.pdf&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\n            const res = await fetch(\"https://ziper.io/api/send.php\" + '?' + new URLSearchParams({\n                number: cell,\n                type: \"media\",\n                message: message,\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\n                filename: fileName,\n                instance_id: \"6453479F141A2\",\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\n            }), {\n                method: 'GET',\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n\n    getWattsappGroupApiTeachers = async (url, message, fileName) => {\n        try {\n            console.log(\"url\", url);\n            console.log(\"mesage\", message);\n            console.log(\"file\", fileName);\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\n                group_id: \"919977116612-1595572006@g.us\",\n                type: \"media\",\n                message: message,\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\n                filename: fileName,\n                instance_id: \"6453479F141A2\",\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\n            }), {\n                method: 'GET',\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n    getWattsappGroupApiOthers = async (url, message, fileName) => {\n        try {\n            console.log(\"url\", url);\n            console.log(\"mesage\", message);\n            console.log(\"file\", fileName);\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\n                group_id: \"919826362001-1628170376@g.us\",\n                type: \"media\",\n                message: message,\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\n                filename: fileName,\n                instance_id: \"6453479F141A2\",\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\n\n            }), {\n                method: 'GET',\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n    uplaodFile = async (file) => {\n        try {\n            const formData = new FormData();\n            formData.append('file', file, file.name);\n            const res = await fetch(URL.UPLOAD_FILE, {\n                method: 'POST',\n                body: formData,\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n    getUploadedFile = async () => {\n        try {\n            const res = await fetch(URL.GET_UPLOAD_FILE_URL, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({})\n\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n}","export const COLORS = [\"#D4E6F1\", \"#E8DAEF\", \"#008080\", \"#808000\", \"#C39BD3\", \"#76D7C4\", \"#3498DB\", \"#358b79\", \"#847f86\", \"rgb(251, 235, 9)\", \"#CA6F1E\", \"#CCCCFF\", \"#F4D03F\", \"rgb(199, 185, 84)\", \"#979A9A\", \"#F0B27A\", \"rgb(117, 98, 179)\", \"#CD5C5C\", \"#40E0D0\", \"#DAF7A6\", \"#008080\", \"#808000\", \"#FADBD8\", \"green\", \"yellow\", \"white\", \"red\", \"pink\"]\n","import html2canvas from 'html2canvas';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { RxCross2 } from \"react-icons/rx\";\nimport { Alert, Button, Form, FormGroup, Input, UncontrolledAlert } from 'reactstrap';\nimport TtApi from '../../../api/tt.api.js';\nimport UploadApi from '../../../api/upload.api.js';\nimport { COLORS } from '../../../const/color.const.js';\nimport AddBatch from '../AddBatch/AddBatch.js';\nimport { batch, teachers_list, time } from '../List/List.js';\nimport AddTeacher from '../TeacherForm/TeacherForm.js';\nimport \"./TimeTable.scss\";\n\nconst TimeTable = () => {\n  /***************************************** Use Params Section******************************/\n  /**************************************** const Section ************************************/\n\n  /**************************************** Use Effect Section ************************************/\n  useEffect(() => {\n  }, []);\n\n  /**************************************** State Section *****************************************/\n  const [draggedTeacher, setDraggedTeacher] = useState({}); // Contains dragged teacher\n  const [lectureList, setLectureList] = useState([]);\n  const [teacherAssignment, setTeacherAssignment] = useState({});\n  const [teacherCounter, setTeacherCounter] = useState({}); // key: teacherId, value: counter\n  const [lectureTeacherCounter, setLectureTeacherCounter] = useState({}); // key: lectureId_teacherId, value: counter to check duplicate rows\n  const [duplicateTeacherDetectedInRow, setDuplicateTeacherDetectedInRow] = useState(false);\n  const [draggedCellKey, setDraggedCellKey] = useState(null);\n\n  // contains key of teacher asignment which is grag within the table\n  const [batchList, setBatchList] = useState(batch);\n  const [teacherList, setTeacherList] = useState(teachers_list);\n  const [showAddBatchModal, setShowAddBatchModal] = useState(false); //for add Batch popup\n  const [showAddTeacherModal, setShowAddTeacherModal] = useState(false);\n  const [fromDate, setFromDate] = useState(\"\");\n  const [toDate, setToDate] = useState(\"\");\n  const [showAlert, setShowAlert] = useState(\"\");\n  const [timeOfAlert, setTimeOfAlert] = useState(false);\n  const divRef = useRef(null);\n\n  /**************************************** Component Method Section *********************************/\n  /**\n   * \n   * @param {*} e drag event\n   * @param {*} teacherInfo teacherVo\n   * Calls when drag start & drag the reacher\n   */\n  const dragStart = (e, teacherDragged) => {\n    setDraggedTeacher(teacherDragged);\n  };\n\n  const allowDrop = (ev) => {\n    let t = ev.target;\n    while (t && (!t.classList || !t.classList.contains(\"each-block\"))) {\n      t = t.parentNode;\n    }\n    if (t && t.innerText.trim() !== \"\") {\n      // Prevent drop event if cell is not empty\n      return false;\n    }\n    ev.preventDefault();\n  };\n\n  // Prepare lecture list\n  const updateLectureListOnDrop = (lecture, batch, teacher) => {\n    const stateLectureList = lectureList;\n    const lectureDto = {};\n    lectureDto.ID = \"0\";\n    lectureDto.TimeTableID = \"0\";\n    lectureDto.LectureName = \"\";\n    lectureDto.Batch = batch;\n    lectureDto.Lecture = lecture;\n    lectureDto.Subject = teacher.subject;\n    lectureDto.FacultyID = teacher.FacultyID;\n    lectureDto.IsActive = true;\n    lectureDto.CreatedByUserID = \"1\";\n    lectureDto.CreatedOnDate = \"02/05/2023\";\n    stateLectureList.push(lectureDto);\n    setLectureList([...stateLectureList]);\n  };\n\n  const updateTeacherCounterOnDrop = (teacher) => {\n    const stateTeacherCounter = teacherCounter;\n    if (!stateTeacherCounter[teacher.FacultyID]) {\n      teacherCounter[teacher.FacultyID] = 1;\n    } else {\n      teacherCounter[teacher.FacultyID] += 1;\n    }\n  }\n\n  const checkDuplicateTeacherInRowOnDrop = (lectureId, teacherId) => {\n    const key = lectureId + '_' + teacherId;\n    const stateLectureTeacherCounter = lectureTeacherCounter;\n    if (!stateLectureTeacherCounter[key]) {\n      stateLectureTeacherCounter[key] = 1\n    } else {\n      stateLectureTeacherCounter[key] += 1\n    }\n    setLectureTeacherCounter({ ...stateLectureTeacherCounter });\n    if (stateLectureTeacherCounter[key] > 1) {\n      setDuplicateTeacherDetectedInRow(true);\n      setTimeout(() => {\n        setDuplicateTeacherDetectedInRow(false);\n      }, 3000); // Alert duration \n      \n    }\n    \n  }\n\n  /**\n   * On Drop\n   * Check if drops within the table if yes remove techer from current block by preserving the teacher and proceed for select teacher & if no proceed for select teacher\n   * set teacher assignment object\n   * set teature lecture list for api call (updateLectureListOnDrop)\n   * update teacher drop counter (updateTeacherCounterOnDrop)\n   * Check if teacher dropped in same row if yes show alert and set lecture vs teacher counter to use for blink (checkDuplicateTeacherInRowOnDrop)\n   * empty teacher state\n   * empty state used withing table drag\n   */\n  const handleDrop = (e, lecture, batch) => {\n    let selectedTeacher = draggedTeacher;\n    if (draggedCellKey) {\n      // if dragged within the table remove source & proceed for drop\n      const keyInside = draggedCellKey.lecture.LectureID + '_' + draggedCellKey.batch.BatchID;\n      selectedTeacher = teacherAssignment[keyInside];\n      removeTeacher(draggedCellKey.lecture.LectureID, draggedCellKey.batch.BatchID, teacherAssignment[keyInside].FacultyID);\n    }\n    const stateTeacherAssignment = teacherAssignment;\n    const key = lecture.LectureID + '_' + batch.BatchID;\n    teacherAssignment[key] = selectedTeacher;\n    setTeacherAssignment({ ...stateTeacherAssignment });\n    updateLectureListOnDrop(lecture, batch, selectedTeacher);\n    updateTeacherCounterOnDrop(selectedTeacher);\n    checkDuplicateTeacherInRowOnDrop(lecture.LectureID, selectedTeacher.FacultyID);\n    setDraggedTeacher({});\n    setDraggedCellKey(null);\n  }\n\n  const removeTeacher = (lectureId, batchId, teacherId) => {\n    // Remove from teacher assignment\n    const key = lectureId + '_' + batchId;\n    const stateTeacherAssignment = teacherAssignment;\n    delete stateTeacherAssignment[key];\n    setTeacherAssignment({ ...stateTeacherAssignment });\n\n    // Remove from lecture list\n    const stateLectureList = lectureList;\n    const index = stateLectureList?.find(row => row.batch?.BatchID === batchId && row.lecture?.LectureID === lectureId);\n    if (index >= 0) {\n      stateLectureList.splice(index, 1);\n      setLectureList([...stateLectureList]);\n    }\n    // Decrease one from teacher counter\n    const stateTeacherCounter = teacherCounter;\n    stateTeacherCounter[teacherId] -= 1;\n    if (stateTeacherCounter[teacherId] <= 0) {\n      delete stateTeacherCounter[teacherId];\n    }\n    setTeacherCounter(stateTeacherCounter);\n    \n    // To make not blink when teacher itself dragged from one place to other in same row\n    const stateLectureTeacherCounter = lectureTeacherCounter;\n    const lectureTeacherKey = lectureId + '_' + teacherId;\n    if (stateLectureTeacherCounter[lectureTeacherKey] > 1) {\n      stateLectureTeacherCounter[lectureTeacherKey] -= 1;\n    } else {\n      delete stateLectureTeacherCounter[lectureTeacherKey];\n    }\n    setLectureTeacherCounter(stateLectureTeacherCounter);\n  }\n\n  // Called to provide class name if true set classname blink else empty\n  // return true if same teacher counter greater than one with respect to lectureId\n  const isTeacherDuplicateInLecture = (lectureId, teacherId) => {\n    if (!lectureId || !teacherId) {\n      return false;\n    }\n    const key = lectureId + '_' + teacherId;\n    console.log(key);\n    return lectureTeacherCounter[key] > 1;\n  };\n\n  const handleTableCellDragStart = (e, lecture, batch) => {\n    setDraggedCellKey({\n      lecture, batch\n    });\n  };\n\n  const onDragEnd = (e) => {\n    setDraggedTeacher({});\n  }\n\n  const onTouchMove = (e) => {\n    console.log(e);\n    const x = e.touches[0].clientX;\n    const y = e.touches[0].clientY;\n    var elem = document.elementFromPoint(x, y);\n    alert('xx xx elem ', elem.id);\n  }\n  /*********************************************This below methods are added by jitendra from TimeTable.js***********************************/\n  const generateUID = () => {\n    // I generate the UID from two parts here \n    // to ensure the random number provide enough bits.\n    var firstPart = (Math.random() * 46656) | 0;\n    var secondPart = (Math.random() * 46656) | 0;\n    firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\n    secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\n    return firstPart + secondPart;\n  }\n\n  const convertToImage = async () => {\n    const canvas = await html2canvas(divRef.current);\n    const imgData = canvas.toDataURL();\n    /*converting page64 url got as imgData into file Object by using blob below*/\n    const byteString = atob(imgData.split(',')[1]);\n    const mimeString = imgData.split(',')[0].split(':')[1].split(';')[0];\n    const ia = new Uint8Array(byteString.length);\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    const blob = new Blob([ia], { type: mimeString });\n    const imageName = generateUID();\n    const file = new File([blob], imageName + \".jpg\");\n    const fileName = imageName + \".jpg\";\n    const result = await new UploadApi().uplaodFile(file);\n    if (result === \"Success\") {\n      const data = await new UploadApi().getUploadedFile();\n      if (data.Object?.length > 0) {\n        const fileDetail = data.Object.reverse().find(obj => { return obj.Title?.indexOf(imageName) >= 0 });\n        // for (let i = 0; i < numberList.length; i++) {       THIS IS USED WHEN GETWATTSAPPAPI WILL USED SO DONT DELETE THIS LINES\n        try {\n          // const cell = numberList[i];\n          /*CHECK THE DETAILS OF THIS GETWATTSAPPAPI IN UPLOAD.API.JS FILE IN API FOLDER*/\n          // await new UploadApi().getWattsappApi(fileDetail.LongURL, \"time table\", cell, fileName);\n          await new UploadApi().getWattsappGroupApiOthers(fileDetail.LongURL, \"time table\", fileName);\n          // await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\n        } catch (e) {\n          // continue;\n          console.log(\"error\")\n        }\n        try {\n          await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\n        } catch (e) {\n          console.log(\"error\")\n        }\n      }\n    }\n    if (!timeOfAlert) {\n      setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\n        Time table image sent successfully\n      </UncontrolledAlert>);\n      setTimeout(() => {\n        setTimeOfAlert(false);\n        setShowAlert(\"\");\n      }, 3000);\n    };\n\n  }\n\n  const onChangeFromDate = (e) => {\n    setFromDate(e.target.value);\n  }\n\n  const onChangeToDate = (e) => {\n    setToDate(e.target.value);\n  }\n\n  const onAddBatch = () => {\n    // setAddBatch(<AddBatch batchList={batchList} />)\n    setShowAddBatchModal(true);\n  }\n\n  const onDeleteBatch = (batchID) => {\n    const confirmDelete = window.confirm('Are you sure you want to delete this batch?');\n    if (confirmDelete) {\n      const updatedBatches = batchList.filter((each) => each.BatchID !== batchID);\n      setBatchList(updatedBatches);\n    }\n  };\n\n  const onAddTeacher = () => {\n    setShowAddTeacherModal(true);\n  }\n\n  const onDeleteTeacher = (facultyID) => {\n    const confirmDelete = window.confirm('Are you sure you want to delete this Faculty?');\n    if (confirmDelete) {\n      const updatedTeachers = teacherList.filter((each) => each.FacultyID !== facultyID);\n      setTeacherList(updatedTeachers);\n    };\n  }\n\n  const saveTable = async () => {\n    const sentBatchID = batchList.map(item => item.BatchID)\n    const body = {\n      TimeTableID: 0,\n      Description: \"time table save\",\n      DateType: !!toDate ? \"multiple\" : \"single\",\n      FromDate: fromDate,\n      ToDate: toDate,\n      ShiftID: 1,\n      SessionID: 6,\n      Session: \"2023-24\",\n      BatchID: sentBatchID,\n      LectureID: [\n        1, 2, 3, 4, 5, 6, 7, 8\n      ],\n      IsActive: true,\n      CreatedByUserID: 1,\n      CreatedOnDate: new Date(),\n      LectureList: lectureList\n    };\n\n    const result = await new TtApi().addUpdateTt(body);\n    if (result === 'Success') {\n      if (!timeOfAlert) {\n        setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\n          time table saved successfully\n        </UncontrolledAlert>);\n        setTimeout(() => {\n          setTimeOfAlert(false);\n          setShowAlert(\"\");\n        }, 3000);\n      };\n\n    } else {\n      if (!timeOfAlert) {\n        setShowAlert(<UncontrolledAlert color=\"danger\" fade={false}>\n          {result?.ExceptionMessage ?? 'An error has occurred.'}\n        </UncontrolledAlert>);\n        setTimeout(() => {\n          setTimeOfAlert(false);\n          setShowAlert(\"\");\n        }, 3000);\n      };\n    }\n  };\n\n  const clearAll = (key) => {\n    // const key = lectureId + '_' + batchId\n    const stateTeacherAssignment = teacherAssignment;\n    delete stateTeacherAssignment[key];\n    setTeacherAssignment({ stateTeacherAssignment });\n  }\n\n  /**************************************** Template Section *****************************************/\n  return (\n    <>\n      <div className=\"bg-container\">\n        {showAlert}\n        {\n          duplicateTeacherDetectedInRow ? <Alert color=\"warning\">\n            Two same teachers found in the same row\n          </Alert> : <></>\n        }\n        <h1 className='heading-style'>CLASS SCHEDULE</h1>\n        <div className=\"button-group added-style\">\n          <Button className=\"btn \" color=\"info\" onClick={onAddBatch}>\n            Add Batches\n          </Button>\n          {showAddBatchModal && <AddBatch showModal={showAddBatchModal} setShowModal={setShowAddBatchModal} batchList={batchList} />}\n          <Button className=\"btn\" color=\"info\" onClick={onAddTeacher}>\n            Add Teachers\n          </Button>\n          {showAddTeacherModal && <AddTeacher showModal={showAddTeacherModal} setShowModal={setShowAddTeacherModal} teacherList={teacherList} />}\n          <Button className=\"btn\" color=\"info\" onClick={saveTable} disabled={fromDate === ''}>\n            Save\n          </Button>\n          {/* disabled={fromDate===\"\"} means the save button will be enabled only when there is some entry in formDate input */}\n          <Button className=\"btn\" color=\"info\" onClick={convertToImage}>\n            Post\n          </Button>\n          <Button className=\"btn\" color=\"info\" onClick={clearAll}>\n            Clear ALL\n          </Button>\n        </div>\n        <div>\n          <div ref={divRef}>\n            <br />\n            <Form >\n              <div className='time-table-date-style'>\n                <FormGroup className=\"label-date-allignment\">\n                  <p className=\"date-label-style\">From<span style={{ color: \"red\" }}>*</span>:</p>\n                  <Input\n                    id=\"fromDate\"\n                    name=\"date\"\n                    type=\"date\"\n                    defaultValue={fromDate}\n                    onChange={(e) => { onChangeFromDate(e) }}\n                    className='input-size'\n                    min={new Date().toISOString().split('T')[0]}\n                  />\n                </FormGroup>\n                <FormGroup className=\"label-date-allignment\">\n                  <p className=\"date-label-style\">To:</p>\n                  <Input\n                    id=\"toDate\"\n                    name=\"date\"\n                    type=\"date\"\n                    defaultValue={toDate}\n                    onChange={(e) => { onChangeToDate(e) }}\n                    className='input-size'\n                    min={new Date().toISOString().split('T')[0]}\n                  />\n                </FormGroup>\n              </div>\n            </Form>\n            <table className='table-style'>\n              <tbody>\n                <div className=\"for-time\">\n                  <tr>\n                    <td className='F-style time-style'>Time</td>\n                    {batchList.map((each) => {\n                      return (\n                        <td className='F-style batch-style' key={each.BatchID}>{each.Batch}\n                          <button className=\"delete-style\" onClick={() => onDeleteBatch(each.BatchID)}><RxCross2 /></button>\n                        </td>\n                      )\n                    })}\n                  </tr>\n                </div>\n                <tr >\n                  {time.map((t) => {\n                    return (\n\n                      <div >\n                        <td className='F-style time-style'>{t.Time_From}-{t.Time_To}</td>\n                        {batchList.map((b) => {\n                          const key = t.LectureID + '_' + b.BatchID\n                          return (\n                            <td\n                              draggable={true}\n                              onDragOver={allowDrop}\n                              onDrop={(e) => handleDrop(e, t, b)}\n                              onDragStart={(e) => handleTableCellDragStart(e, t, b)}\n                              key={key}\n                              id={key}\n                              className={`each-block ${isTeacherDuplicateInLecture(t.LectureID, teacherAssignment[key]?.FacultyID ?? null) ? \"blink\" : \"\"}`}\n                              style={{ backgroundColor: teacherAssignment[key]?.color }}\n                            >\n                              <div className={`teacname-cross-style ${teacherAssignment[key]?.className} `}>\n                                <div className=\"teacher-name\" >\n                                  {teacherAssignment[key]?.Faculty}\n                                </div>\n                                <div className=\"cross-btn-container\">\n                                  {teacherAssignment[key]?.Faculty ? (\n                                    <button\n                                      className=\"cross-style\"\n                                      onClick={() => removeTeacher(t.LectureID, b.BatchID, teacherAssignment[key].FacultyID)}\n                                    >\n                                      <RxCross2 />\n                                    </button>\n                                  ) : <></>}\n                                </div>\n                              </div>\n                            </td>\n                          )\n                        })}\n                      </div>\n                    )\n                  })}\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className='teacher-container'>\n          {teacherList.map((teacher, index) => {\n            const { FacultyID, Faculty } = teacher;\n            teacher.color = COLORS[index]\n            return (\n              <div\n                style={{ backgroundColor: teacher.color }}\n                key={FacultyID}\n                className=\"teacher-item\"\n                draggable={true}\n                onDragStart={(e) => dragStart(e, teacher)}\n                onDragEnd={(e) => onDragEnd(e)}\n                onTouchStart={(e) => dragStart(e, teacher)}\n                onTouchMove={(e) => onTouchMove(e)}\n              >\n                <h3>{Faculty}</h3>\n                {teacherCounter[FacultyID] > 0 && (\n                  <span className={`counter-item `} draggable={false}>\n                    {teacherCounter[FacultyID]}\n                  </span>\n                )}\n                <button className=\"delete-style\" onClick={() => onDeleteTeacher(teacher.FacultyID)}><RxCross2 /></button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  )\n}\nexport default TimeTable;"],"sourceRoot":""}