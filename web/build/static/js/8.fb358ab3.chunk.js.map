{"version":3,"sources":["pages/TTPages/List/List.js","pages/TTPages/AddBatch/AddBatch.js","const/url.js","api/upload.api.js","pages/TTPages/TimeTable/TimeTable.js"],"names":["teachers_list","batch","time","AddBatch","console","log","_useState","useState","_useState2","_slicedToArray","batches","setBatches","_useState3","_useState4","apiData","setApiData","_useState5","_useState6","checkedItems","setCheckedItems","handleCheckboxChange","event","_event$target","target","name","checked","_objectSpread","_defineProperty","_apiData$Object","Object","_responseObject$Batch","Batch","_jsxs","children","_jsx","onClick","fetch","method","redirect","then","response","json","result","catch","error","style","listStyle","map","type","BatchID","onChange","newBatches","_loop","batchID","selectedItem","find","parseInt","push","CourseID","BASE_URL","URL","UPLOAD_FILE","GET_UPLOAD_FILE_URL","UploadApi","_createClass","_classCallCheck","getWattsappApi","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","message","cell","fileName","res","wrap","_context","prev","next","URLSearchParams","number","media_url","filename","instance_id","access_token","sent","abrupt","t0","Error","options","stop","_x","_x2","_x3","_x4","apply","arguments","getWattsappGroupApi","_ref2","_callee2","_context2","group_id","_x5","_x6","_x7","uplaodFile","_ref3","_callee3","file","formData","_context3","FormData","append","body","_x8","getUploadedFile","_callee4","_context4","headers","JSON","stringify","TimeTable","tableWidth","setTableWidth","draggedCellKey","setDraggedCellKey","duplicateElements","setDuplicateElements","_useState7","_useState8","duplicateDetected","setDuplicateDetected","_useState9","_useState10","teacher","setTeacher","_useState11","_useState12","teacherCounter","setTeacherCounter","_useState13","_useState14","teacherAssignment","setTeacherAssignment","_useState15","_useState16","lectureList","setLectureList","_useState17","_useState18","addBatch","_useState19","_useState20","numberList","_useState21","_useState22","batchList","_useState23","_useState24","setImage","useEffect","tableElement","document","querySelector","offsetWidth","alert","setTimeout","divRef","useRef","color","generateUID","firstPart","Math","random","secondPart","toString","slice","convertToImage","canvas","imgData","byteString","mimeString","ia","i","blob","imageName","_data$Object","data","fileDetail","_i","html2canvas","current","toDataURL","atob","split","Uint8Array","length","charCodeAt","Blob","File","reverse","obj","_obj$Title","Title","indexOf","LongURL","dragItem","handleDrop","e","key","_objectSpread2","sourceAssignment","targetAssignment","teacher_assignment","teacherCount","rowId","teacherInCurrentRow","cellKey","startsWith","duplicates","reduce","acc","item","newDuplicateKeys","values","filter","keys","flat","includes","checkForDuplicateInRow","batchId","lectureId","batchVo","it","lectureVo","LectureID","lecture","Lecture","Subject","subject","FacultyID","IsActive","CreatedByUserID","CreatedOnDate","lecture_list","_toConsumableArray","allowDrop","ev","t","classList","contains","parentNode","innerText","trim","preventDefault","_Fragment","className","Button","myHeaders","Headers","raw","text","ref","each","Time_From","Time_To","b","_teacherAssignment$ke","_teacherAssignment$ke2","_teacherAssignment$ke3","_teacherAssignment$ke4","draggable","onDragOver","onDrop","onDragStart","handleTableCellDragStart","id","concat","backgroundColor","removeTeacher","RxCross2","maxWidth","index","Faculty","teacherInfo"],"mappings":"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","file":"static/js/8.fb358ab3.chunk.js","sourcesContent":["import {v4 as uuidv4} from \"uuid\"\n\n\n\n// export const teachers_list = [\n// {name:'MYK',\n// className:\"style-faculty\",\n// bgColor:\"bg-myk\",\n// bg:\"blue\"\n// },\n\n// {name:'KPS',\n// className:\"style-faculty\",\n// bgColor:\"bg-kps\"\n// },\n\n// {name:'MRS',\n// className:\"style-faculty\",\n// bgColor:\"bg-mrs\"\n// },\n\n// {name:'MAS',\n// className:\"style-faculty\",\n// bgColor:\"bg-mas\"\n// },\n\n// {name:'RSS',\n// className:\"style-faculty\",\n// bgColor:\"bg-rss\"\n// },\n\n// {name:'NMS',\n// className:\"style-faculty\",\n// bgColor:\"bg-nms\"\n// },\n\n// {name:'HDS',\n// className:\"style-faculty\",\n// bgColor:\"bg-hds\"\n// },\n\n// {name:'MNM',\n// className:\"style-faculty\",\n// bgColor:\"bg-mnm\"\n// },\n\n// {name:'SJ',\n// className:\"style-faculty\",\n// bgColor:\"bg-sj\"},\n\n// {name:'AJ',\n// className:\"style-faculty\",\n// bgColor:\"bg-aj\"\n// },\n\n// {name:'DMPS',\n// className:\"style-faculty\",\n// bgColor:\"bg-dmps\"\n// },\n\n// {name:'PSJ',\n// className:\"style-faculty\",\n// bgColor:\"bg-psj\"\n// },\n\n// {name:'YBS',\n// className:\"style-faculty\",\n// bgColor:\"bg-ybs\"\n// },\n\n// {name:'AKS',\n// className:\"style-faculty\",\n// bgColor:\"bg-aks\"},\n\n// {name:'AMS',\n// className:\"style-faculty\",\n// bgColor:\"bg-ams\"},\n\n\n\n// ]; \n\n\n\nexport const teachers_list = [\n        {\n            \"FacultyID\": 1,\n            \"Faculty\": \"MYK\",\n            \"subject\": \"Physics\"\n        },\n        \n        {\n            \"FacultyID\": 2,\n            \"Faculty\": \"KPS\",\n            \"subject\":\"Chemistry\"\n        },\n\n        {\n            \"FacultyID\": 3,\n            \"Faculty\": \"MRS\",\n            \"subject\":\"Chemistry\"\n        },\n\n        {\n            \"FacultyID\": 4,\n            \"Faculty\": \"MAS\",\n            \"subject\":\"Physics\"\n        },\n\n        {\n            \"FacultyID\": 5,\n            \"Faculty\": \"RSS\",\n            \"subject\":\"Physics\"\n        },\n        {\n            \"FacultyID\": 6,\n            \"Faculty\": \"NMS\",\n            \"subject\":\"Biology\"\n        },\n        {\n            \"FacultyID\": 7,\n            \"Faculty\": \"HDS\",\n            \"subject\":\"Chemistry\"\n        },\n        {\n            \"FacultyID\": 8,\n            \"Faculty\": \"MNM\",\n            \"subject\": \"Biology\"\n        },\n        \n        {\n            \"FacultyID\": 9,\n            \"Faculty\": \"SJ\",\n            \"subject\":\"Biology\"\n        },\n\n        {\n            \"FacultyID\": 10,\n            \"Faculty\": \"AJ\",\n            \"subject\":\"Biology\"\n        },\n\n        {\n            \"FacultyID\": 11,\n            \"Faculty\": \"DMPS\",\n            \"subject\":\"Chemistry\"\n        },\n\n        \n       \n        \n        {\n            \"FacultyID\": 12,\n            \"Faculty\": \"PSJ\",\n            \"subject\":\"Physics\"\n        },\n        {\n            \"FacultyID\": 13,\n            \"Faculty\": \"YBS\",\n            \"subject\":\"Biology\"\n        },\n        {\n            \"FacultyID\": 14,\n            \"Faculty\": \"AKS\",\n            \"subject\":\"Chemistry\"\n        },\n        {\n            \"FacultyID\": 15,\n            \"Faculty\": \"AMS\",\n            \"subject\":\"Maths\"\n        },\n        {\n            \"FacultyID\": 16,\n            \"Faculty\": \"NDS\",\n            \"subject\":\"Physics\"\n        },\n        {\n            \"FacultyID\": 17,\n            \"Faculty\": \"HWS\",\n            \"subject\":\"Physics\"\n        },\n        {\n            \"FacultyID\": 18,\n            \"Faculty\": \"JRS\",\n            \"subject\":\"Chemistry\"\n        },\n        {\n            \"FacultyID\": 19,\n            \"Faculty\": \"HTS\",\n            \"subject\":\"Chemistry\"\n        },\n    ]; \n    \n\n\n// PREVIOUS BATACH LIST\n// export const batch = [\n//     {id:uuidv4(),\n//     batchname:'A1'},\n//     {id:uuidv4(),\n//     batchname:'A2'},\n//     {id:uuidv4(), \n//     batchname:'CRASH E'},\n//     {id:uuidv4() ,\n//     batchname:'CRASH H'},\n//     {id:uuidv4(),\n//     batchname:'ONLINE'},\n//     {id:uuidv4(),\n//     batchname:'A14'},\n//     {id:uuidv4(),\n//     batchname:'JEE EX'},\n//     {id:uuidv4(),\n//     batchname:'JEE12'},\n    \n// ];\n\n\nexport const batch= [\n    {\n        \"BatchID\": 1,\n        \"Batch\": \"A1\",\n        \"CourseID\": 1\n    },\n    {\n        \"BatchID\": 2,\n        \"Batch\": \"A2\",\n        \"CourseID\": 2\n    },\n    {\n        \"BatchID\": 3,\n        \"Batch\": \"A3\",\n        \"CourseID\": 3\n    },\n    {\n        \"BatchID\": 4,\n        \"Batch\": \"A4\",\n        \"CourseID\": 4\n    },\n    {\n        \"BatchID\": 5,\n        \"Batch\": \"C1\",\n        \"CourseID\": 5\n    },\n    {\n        \"BatchID\": 6,\n        \"Batch\": \"C2\",\n        \"CourseID\": 6\n    },\n    {\n        \"BatchID\": 7,\n        \"Batch\": \"B1\",\n        \"CourseID\": 7\n    },\n    {\n        \"BatchID\": 8,\n        \"Batch\": \"B2\",\n        \"CourseID\": 8\n    },\n    //MORE BATCHES ADDED WITH A FAKE BATCHID AND FAKE COURSEID NEED TO CHANGE LATER\n\n    {\n        \"BatchID\": 9,\n        \"Batch\": \"JO1\",\n        \"CourseID\": 9\n    },\n    {\n        \"BatchID\": 10,\n        \"Batch\": \"JXI-1\",\n        \"CourseID\": 10\n    },\n    {\n        \"BatchID\": 11,\n        \"Batch\": \"JXI-2\",\n        \"CourseID\": 11\n    },\n    {\n        \"BatchID\": 12,\n        \"Batch\": \"JXII-1\",\n        \"CourseID\": 12\n    },\n    {\n        \"BatchID\": 13,\n        \"Batch\": \"JEXL\",\n        \"CourseID\": 13\n    },\n    {\n        \"BatchID\": 14,\n        \"Batch\": \"JEE Adv\",\n        \"CourseID\": 14\n    }\n]\n\n\n\nexport const time= [\n    {\n        \"LectureID\": 1,\n        \"Lecture\": \"L1\",\n        \"Time_From\": \"08:30 AM\",\n        \"Time_To\": \"09:45 AM\"\n    },\n    {\n        \"LectureID\": 2,\n        \"Lecture\": \"L2\",\n        \"Time_From\": \"09:50 AM\",\n        \"Time_To\": \"11:05 AM\"\n    },\n    {\n        \"LectureID\": 3,\n        \"Lecture\": \"L3\",\n        \"Time_From\": \"11:20 AM\",\n        \"Time_To\": \"12:35 PM\"\n    },\n    {\n        \"LectureID\": 4,\n        \"Lecture\": \"L4\",\n        \"Time_From\": \"12:40 PM\",\n        \"Time_To\": \"01:55 PM\"\n    },\n    {\n        \"LectureID\": 5,\n        \"Lecture\": \"L5\",\n        \"Time_From\": \"02:00 PM\",\n        \"Time_To\": \"03:15 PM\"\n    },\n    {\n        \"LectureID\": 6,\n        \"Lecture\": \"L6\",\n        \"Time_From\": \"03:20 PM\",\n        \"Time_To\": \"04:35 PM\"\n    },\n    {\n        \"LectureID\": 7,\n        \"Lecture\": \"L7\",\n        \"Time_From\": \"04:50 PM\",\n        \"Time_To\": \"06:05 PM\"\n    },\n    {\n        \"LectureID\": 8,\n        \"Lecture\": \"L8\",\n        \"Time_From\": \"06:15 PM\",\n        \"Time_To\": \"07:30 PM\"\n    }\n]\n\n\n\n//PREVIOUS TIME LIST\n\n// export const time = [\n//     {id:uuidv4(),\n//     classtime:'08:30-09:45 AM'},\n//     {id:uuidv4(),\n//     classtime:'09:50-11:05 AM'},\n//     {id:uuidv4(),\n//     classtime: '11:20-12:35 PM'},\n//     {id:uuidv4(),\n//     classtime:'12:40-01:55 PM'},\n//     {id:uuidv4(),\n//     classtime:'02:00-03:15 PM'},\n//     {id:uuidv4(),\n//     classtime:'03:20-04:35 PM'},\n//     {id:uuidv4(),\n//     classtime:'04:50-06:05 PM'},\n//     {id:uuidv4(),\n//     classtime:'06:15-07:30 PM'}];\n\n    ","// // import React, { useState } from 'react'\n// // import {\n// //     Card,\n// //     Row,\n// //     Col,\n// //     CardTitle,\n// //     CardBody,\n// //     Button,\n// //     Form,\n// //     FormGroup,\n// //     Label,\n// //     Input,\n// //     FormText,\n// //   } from \"reactstrap\";\n  \n// //   const AddBatch = () => {\n// //     const[addBatch,setAddBatch]=useState(null)\n\n// // const onChangeBatch=(e,key)=>{\n// //     key=e.target.name;\n// //     setAddBatch(e.target.value);\n// //     console.log(\"teacher is added\")\n// // }\n// // const onAddBatch=()=>{\n// // alert(\"the batch will be added as per api call\")\n// // }\n\n\n// //     return (\n// //       <Row>\n// //         <Col>\n// //           {/* --------------------------------------------------------------------------------*/}\n// //           {/* Card-1*/}\n// //           {/* --------------------------------------------------------------------------------*/}\n// //           <Card>\n// //             <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\n// //               {/* <i className=\"bi bi-bell me-2\"> </i> */}\n// //               Add Batch\n// //             </CardTitle>\n// //             <CardBody>\n// //               <Form>\n// //                 <FormGroup>\n// //                   <Label for=\"batchname\">Batch Name</Label>\n// //                   <Input\n// //                     id=\"batchname\"\n// //                     name=\"batchname\"\n// //                     placeholder=\"Write Batch Name\"\n// //                     type=\"text\"\n                    \n// //                     onChange={onChangeBatch}\n                    \n// //                   />\n// //                 </FormGroup>\n// //                 {/* <FormGroup>\n// //                   <Label for=\"bgcolor\">Background Color</Label>\n// //                   <Input\n// //                     id=\"bgcolor\"\n// //                     name=\"color\"\n// //                     placeholder=\"add color\"\n// //                     type=\"color\"\n// //                   />\n// //                 </FormGroup> */}\n// //                 {/* <FormGroup>\n// //                   <Label for=\"exampleSelect\">Select</Label>\n// //                   <Input id=\"exampleSelect\" name=\"select\" type=\"select\">\n// //                     <option>1</option>\n// //                     <option>2</option>\n// //                     <option>3</option>\n// //                     <option>4</option>\n// //                     <option>5</option>\n// //                   </Input>\n// //                 </FormGroup>\n// //                 <FormGroup>\n// //                   <Label for=\"exampleSelectMulti\">Select Multiple</Label>\n// //                   <Input\n// //                     id=\"exampleSelectMulti\"\n// //                     multiple\n// //                     name=\"selectMulti\"\n// //                     type=\"select\"\n// //                   >\n// //                     <option>1</option>\n// //                     <option>2</option>\n// //                     <option>3</option>\n// //                     <option>4</option>\n// //                     <option>5</option>\n// //                   </Input>\n// //                 </FormGroup>\n// //                 <FormGroup>\n// //                   <Label for=\"exampleText\">Text Area</Label>\n// //                   <Input id=\"exampleText\" name=\"text\" type=\"textarea\" />\n// //                 </FormGroup>\n// //                 <FormGroup>\n// //                   <Label for=\"exampleFile\">File</Label>\n// //                   <Input id=\"exampleFile\" name=\"file\" type=\"file\" />\n// //                   <FormText>\n// //                     This is some placeholder block-level help text for the above\n// //                     input. It's a bit lighter and easily wraps to a new line.\n// //                   </FormText>\n// //                 </FormGroup>\n// //                 <FormGroup tag=\"fieldset\">\n// //                   <legend>Radio Buttons</legend>\n// //                   <FormGroup check>\n// //                     <Input name=\"radio1\" type=\"radio\" />{\" \"}\n// //                     <Label check>\n// //                       Option one is this and that—be sure to include why it's\n// //                       great\n// //                     </Label>\n// //                   </FormGroup>\n// //                   <FormGroup check>\n// //                     <Input name=\"radio1\" type=\"radio\" />{\" \"}\n// //                     <Label check>\n// //                       Option two can be something else and selecting it will\n// //                       deselect option one\n// //                     </Label>\n// //                   </FormGroup>\n// //                   <FormGroup check disabled>\n// //                     <Input disabled name=\"radio1\" type=\"radio\" />{\" \"}\n// //                     <Label check>Option three is disabled</Label>\n// //                   </FormGroup>\n// //                 </FormGroup>\n// //                 <FormGroup check>\n// //                   <Input type=\"checkbox\" /> <Label check>Check me out</Label>\n// //                 </FormGroup> */}\n// //                 <Button onClick={onAddBatch}>Submit</Button>\n// //               </Form>\n// //             </CardBody>\n// //           </Card>\n// //         </Col>\n// //       </Row>\n// //     );\n// //   };\n  \n// //   export default AddBatch;\n  \n// import React, { useState } from 'react';\n// // import { batch } from '../List/List';\n// import { batch as initialBatch } from '../List/List';\n\n// // export const batch = [\n// //   // ... (the initial array content)\n// // ];\n\n// const AddBatch = () => {\n//   const [batches, setBatches] = useState();\n//   const [apiData, setApiData] = useState({});\n//   const [newBatch, setNewBatch] = useState({\n//     BatchID: '',\n//     Batch: '',\n//     CourseID: '',\n//   });\n\n\n//   const [checkedItems, setCheckedItems] = useState({});\n\n//   const handleCheckboxChange = (event) => {\n//     const { name, checked } = event.target;\n//     setCheckedItems({\n//       ...checkedItems,\n//       [name]: checked,\n//     });\n//   };\n\n//   const handleChange = (event) => {\n//     const { name, value } = event.target;\n//     setNewBatch({\n//       ...newBatch,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleClick = () => {\n//     setBatches([...batches, newBatch]);\n//     setNewBatch({\n//       BatchID: '',\n//       Batch: '',\n//       CourseID: '',\n//     });\n//   };\n\n\n//   const addToBatch = () => {\n//     const newBatches = [...initialBatch];\n//     for (const batchID in checkedItems) {\n//       if (checkedItems[batchID]) {\n//         const selectedItem = Batch.find((batch) => batch.BatchID === parseInt(batchID));\n//         if (selectedItem && !newBatches.find((batch) => batch.BatchID === selectedItem.BatchID)) {\n//           newBatches.push(selectedItem);\n//         }\n//       }\n//     }\n//     setBatches(newBatches);\n//   };\n\n// const callIT=()=>{\n//   var requestOptions = {\n//     method: 'GET',\n//     redirect: 'follow'\n//   };\n  \n//   fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\", requestOptions)\n//   .then(response => response.json())\n//   .then(result => setApiData(result))\n//   .catch(error => console.log('error', error));\n    \n//   }\n\n\n//   const { Object: responseObject = {} } = apiData;\n//   const { Batch = [],FacultyList=[] } = responseObject;\n\n\n\n//   return (\n//     <div>\n//       <h1>Add New Batch</h1>\n//       <form>\n//         <button onClick={callIT}>call it</button>\n//         {/* <select>        {Batch.map((batch) => {\n//         return(\n          \n//           <option className='F-style batch-style' key={batch.BatchID}>{batch.Batch}</option>\n        \n//         )})}\n//         </select> */}\n//         <h2>Batch List with Checkboxes</h2>\n//       <ul style={{listStyle:'none'}}>\n//         {Batch.map((batch) => (\n//           <li key={batch.BatchID}>\n//             <label>\n//               <input\n//                 type=\"checkbox\"\n//                 name={batch.BatchID}\n//                 checked={checkedItems[batch.BatchID] || false}\n//                 onChange={handleCheckboxChange}\n//               />\n//               {batch.Batch}\n//             </label>\n//           </li>\n//         ))}\n//       </ul>\n//       <button onClick={addToBatch}>Add selected items to batch</button>\n//       {/* <select>\n//         <option>A1</option>\n//         <option>A2</option>\n//         <option>A3</option>\n//       </select> */}\n//         {/* <label>\n//           BatchID:\n//           <input\n//             type=\"number\"\n//             name=\"BatchID\"\n//             value={newBatch.BatchID}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <label>\n//           Batch:\n//           <input\n//             type=\"text\"\n//             name=\"Batch\"\n//             value={newBatch.Batch}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <label>\n//           CourseID:\n//           <input\n//             type=\"number\"\n//             name=\"CourseID\"\n//             value={newBatch.CourseID}\n//             onChange={handleChange}\n//           />\n//         </label> */}\n//       </form>\n//       {/* <button onClick={handleClick}>Add Batch</button>\n//       <h2>Batch List</h2> */}\n//       {/* <ul>\n//         {batches.map((batch) => (\n//           <li key={batch.BatchID}>\n//             {batch.BatchID} - {batch.Batch} - {batch.CourseID}\n//           </li>\n//         ))}\n//       </ul> */}\n//     </div>\n//   );\n// };\n\n// export default AddBatch;\n\n\nimport React, { useState } from 'react';\n// import { batch as initialBatch } from '../List/List';\nimport { batch } from '../List/List';\n\n\nconst AddBatch = () => {\n  console.log(\",,bb\" ,batch);\n  const [batches, setBatches] = useState(batch);\n  // const [batches, setBatches] = useState(JSON.parse(localStorage.getItem('batches')) || batch);\n  const [apiData, setApiData] = useState({});\n  const [checkedItems, setCheckedItems] = useState({});\n\n  const handleCheckboxChange = (event) => {\n    const { name, checked } = event.target;\n    setCheckedItems({\n      ...checkedItems,\n      [name]: checked,\n    });\n  };\n\n  const callIT = () => {\n    var requestOptions = {\n      method: 'GET',\n      redirect: 'follow',\n    };\n\n    fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\", requestOptions)\n      .then(response => response.json())\n      .then(result => setApiData(result))\n      .catch(error => console.log('error', error));\n  }\n\n  const { Object: responseObject = {} } = apiData;\n  const { Batch = [] } = responseObject;\n\n  const addToBatch = () => {\n    const newBatches = batch;\n    for (const batchID in checkedItems) {\n      if (checkedItems[batchID]) {\n        const selectedItem = Batch.find((batch) => batch.BatchID === parseInt(batchID));\n        if (selectedItem && !newBatches.find((batch) => batch.BatchID === selectedItem.BatchID)) {\n          newBatches.push({\n            BatchID: selectedItem.BatchID,\n            Batch: selectedItem.Batch,\n            CourseID: selectedItem.CourseID,\n          });\n        }\n      }\n    }\n    console.log(newBatches)\n    setBatches(newBatches);\n//     setBatches(newBatches);\n// localStorage.setItem('batches', JSON.stringify(newBatches));\n    // batch.push(...newBatches);\n  };\n\n\n  \n\n  return (\n    \n    <div>\n    \n    \n      <h1>Add New Batch</h1>\n      <button onClick={callIT}>call it</button>\n      <h2>Batch List with Checkboxes</h2>\n      <ul style={{ listStyle: 'none' }}>\n        {Batch.map((batch) => (\n          <li key={batch.BatchID}>\n            <label>\n              <input\n                type=\"checkbox\"\n                name={batch.BatchID}\n                checked={checkedItems[batch.BatchID] || false}\n                onChange={handleCheckboxChange}\n              />\n              {batch.Batch}\n            </label>\n          </li>\n        ))}\n      </ul>\n      <button onClick={addToBatch}>Add selected items to batch</button>\n      <h2>Updated Batch List</h2>\n      <ul>\n        {batches.map((batch) => (\n          <li key={batch.BatchID}>\n            {batch.BatchID} - {batch.Batch} - {batch.CourseID}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default AddBatch;\n\n","const ENV_URL = 'https://api.aayamcareerinstitute.co.in/api'; // producation fn\nconst DEV_URL = 'http://localhost:5001'; // producation fn\nconst BASE_URL= ENV_URL\n\n\n\nexport const URL = {\n    UPLOAD_FILE: BASE_URL + '/UploadFilesAttachment',\n    GET_UPLOAD_FILE_URL: BASE_URL + '/GetFiles', \n    \n\n};  \n","import { URL } from '../const/url';\n\nexport default class UploadApi {\n    // getUserWalletBalance = async (userId) => {\n    //     try {\n    //         GlobalEmitterService.emit(true);\n    //         const token = `Bearer ${AuthService.getToken()}`;\n    //         const res = await fetch(URL.USER_WALLET_BALANCE + '?' + new URLSearchParams({\n    //             userId\n    //         }), {\n    //             method: 'GET',\n    //             headers: { 'Content-Type': 'application/json', 'Authorization': token },\n    //         });\n    //         const result = await res.json();\n    //         GlobalEmitterService.emit(false);\n    //         return result;\n    //     } catch (e) {\n    //         GlobalEmitterService.emit(false);\n    //         throw new Error(e.message, e.options);\n    //     }\n    // }\n\n\n    getWattsappApi = async (url,message,cell,fileName) => {\n            try {\n                console.log(\"url\",url);\n                console.log(\"mesage\",message);\n                console.log(\"cel\",cell);\n                console.log(\"file\",fileName);\n                \n\n                // https://ziper.io/api/send.php?number=917898118503&type=media&message=test%20message&media_url=https://api.aayamcareerinstitute.co.in//Uploads/Files/File_3431223213168.pdf&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\n                const res = await fetch(\"https://ziper.io/api/send.php\" + '?' + new URLSearchParams({\n                    number: cell,\n                    type:\"media\",\n                    message: message,\n                    media_url:\"https://api.aayamcareerinstitute.co.in/\"+url,\n                    filename: fileName,\n                    instance_id:\"6453479F141A2\",\n                    access_token:\"0a3e27126c2c239bdf7f9128943ef9c0\"\n\n                }), {\n                    method: 'GET',\n                });\n                const result = await res.json();\n                return result;\n            } catch (e) {\n                throw new Error(e.message, e.options);\n            }\n        }\n\n\n        getWattsappGroupApi = async (url,message,fileName) => {\n            try {\n                console.log(\"url\",url);\n                console.log(\"mesage\",message);\n                \n                console.log(\"file\",fileName);\n                \n\n                //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\n                const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\n                    group_id:\"\",\n                    type:\"media\",\n                    message: message,\n                    media_url:\"https://api.aayamcareerinstitute.co.in/\"+url,\n                    filename: fileName,\n                    instance_id:\"6453479F141A2\",\n                    access_token:\"0a3e27126c2c239bdf7f9128943ef9c0\"\n\n                }), {\n                    method: 'GET',\n                });\n                const result = await res.json();\n                return result;\n            } catch (e) {\n                throw new Error(e.message, e.options);\n            }\n        }\n\n\n    uplaodFile = async (file) => {\n        try {\n            const formData = new FormData();\n            formData.append('file', file, file.name);\n            const res = await fetch(URL.UPLOAD_FILE, {\n                method: 'POST',\n                body: formData,\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n\n\n    getUploadedFile = async () => {\n        try {\n            const res = await fetch(URL.GET_UPLOAD_FILE_URL, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({})\n                \n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n}","\nimport React, { useEffect, useRef, useState } from 'react';\nimport { RxCross2 } from \"react-icons/rx\";\nimport { batch, teachers_list, time } from '../List/List';\nimport \"./TimeTable.scss\";\n// import { RiDeleteBin2Line } from \"react-icons/ri\";\n// import htmlToCanvas from 'html-to-canvas';\nimport html2canvas from 'html2canvas';\nimport {\n  Button\n} from \"reactstrap\";\nimport AddBatch from '../AddBatch/AddBatch';\nimport UploadApi from '../../../api/upload.api';\n\n\n\nconst TimeTable = () => {\n  /**************************************** Use Effect Section ************************************/\n\n\n  /**************************************** State Section *****************************************/\n  const [tableWidth, setTableWidth] = useState(0);\n  const [draggedCellKey, setDraggedCellKey] = useState(null);\n  const [duplicateElements, setDuplicateElements] = useState({});\n  const [duplicateDetected, setDuplicateDetected] = useState(false);\n  const [teacher, setTeacher] = useState({});\n  const [teacherCounter, setTeacherCounter] = useState({}); // key: teacherId, value: counter\n  const [teacherAssignment, setTeacherAssignment] = useState({});\n  const [lectureList, setLectureList] = useState([]);\n  const [addBatch, setAddBatch] = useState(null);\n  // const [numberList, setNumberList] = useState([918989529107, 917898118503, 918871688429, 918349215747,919826362001,918349215747,917314058393,917869597239,919977116612,918085390900,918302184021,918358810742,919893640561,919713519598,919713030834,919827274005,919691938832,917043127836,919977711607,917298519996,919713191848,918871841238,917007794323,919669889020,918770153381]);\n  const [numberList, setNumberList] = useState([917898118503]);\n  const [batchList, setBatchList] = useState(batch);\n  const [image, setImage] = useState(null);   //  for div to image conversion\n\n\n  /**************************************** Use Effect Section ************************************/\n  useEffect(() => {\n    const tableElement = document.querySelector('.table-style');\n    if (tableElement) {\n      const tableWidth = tableElement.offsetWidth;\n      setTableWidth(tableWidth);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (duplicateDetected) {\n      alert('Two same teachers found in the same row');\n      setDuplicateDetected(false);\n      setTimeout(() => {\n        setDuplicateElements({});\n      }, 3000); // Blink duration\n    }\n  }, [duplicateDetected]);\n\n\n  useEffect(() => {\n    if (duplicateDetected) {\n      // alert('Two same teachers found in the same row');   \n      setDuplicateDetected(false);\n    }\n  }, [duplicateDetected]);\n\n\n  /**************************************** Component Method Section *********************************/\n\n  const divRef = useRef(null);\n\n  const color = [\"#D4E6F1\", \"#E8DAEF\", \"#008080\", \"#808000\", \"#C39BD3\", \"#76D7C4\", \"#3498DB\", \"#358b79\", \"#847f86\", \"rgb(251, 235, 9)\", \"#CA6F1E\", \"#CCCCFF\", \"#F4D03F\", \"rgb(199, 185, 84)\", \"#979A9A\", \"#F0B27A\", \"rgb(117, 98, 179)\", \"#CD5C5C\", \"#40E0D0\", \"#DAF7A6\", \"#008080\", \"#808000\", \"#FADBD8\", \"green\", \"yellow\", \"white\", \"red\", \"pink\"]\n\n\n  const generateUID = () => {\n    // I generate the UID from two parts here \n    // to ensure the random number provide enough bits.\n    var firstPart = (Math.random() * 46656) | 0;\n    var secondPart = (Math.random() * 46656) | 0;\n    firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\n    secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\n    return firstPart + secondPart;\n  }\n  const convertToImage = async () => {\n    // alert(\"Time table image sent successfully\")\n    const canvas = await html2canvas(divRef.current);\n    const imgData = canvas.toDataURL();\n    setImage(imgData);\n/*converting page64 url got as imgData into file Object by using blob below*/\n    const byteString = atob(imgData.split(',')[1]);\n    const mimeString = imgData.split(',')[0].split(':')[1].split(';')[0];\n\n    const ia = new Uint8Array(byteString.length);\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n\n    const blob = new Blob([ia], { type: mimeString });\n    const imageName = generateUID();\n    const file = new File([blob], imageName + \".jpg\");\n    const fileName = imageName + \".jpg\";\n    const result = await new UploadApi().uplaodFile(file);\n    if (result === \"Success\") {\n      const data = await new UploadApi().getUploadedFile();\n      if (data.Object?.length > 0) {\n        const fileDetail = data.Object.reverse().find(obj => { return obj.Title?.indexOf(imageName) >= 0 });\n        for (let i = 0; i < numberList.length; i++) {\n          try {\n            const cell = numberList[i];\n            /*CHECK THE DETAILS OF THIS GETWATTSAPPAPI IN UPLOAD.API.JS FILE IN API FOLDER*/\n            await new UploadApi().getWattsappApi(fileDetail.LongURL, \"time table\", cell, fileName);\n            // await new UploadApi().getWattsappGroupApi(fileDetail.LongURL, \"time table\", fileName);\n          } catch (e) {\n            continue;\n          }\n        }\n      }\n\n    }\n    alert(\"Time table image sent successfully\")\n  }\n\n  const dragItem = teacher;\n\n  const dragStart = (e, teacherInfo) => {\n    dragItem.current = teacherInfo;\n    console.log(teacherInfo)\n  };\n\n  const handleTableCellDragStart = (e, key) => {\n    setDraggedCellKey(key);\n  };\n\n  const checkForDuplicateInRow = (key) => {\n    const rowId = key.split('_')[0];\n    const teacherInCurrentRow = [];\n    for (const cellKey in teacherAssignment) {\n      if (cellKey.startsWith(rowId)) {\n        teacherInCurrentRow.push({\n          key: cellKey,\n          teacher: teacherAssignment[cellKey].teacher,\n        });\n      }\n    }\n\n    const duplicates = teacherInCurrentRow.reduce((acc, item) => {\n      if (acc[item.teacher]) {\n        acc[item.teacher].push(item.key);\n      } else {\n        acc[item.teacher] = [item.key];\n      }\n      return acc;\n    }, {});\n\n    const newDuplicateKeys = Object.values(duplicates)\n      .filter((keys) => keys.length > 1)\n      .flat();\n\n    const oldDuplicateKeys = Object.keys(duplicateElements);\n    const isNewDuplicate = !oldDuplicateKeys.includes(key) && newDuplicateKeys.includes(key);\n\n    if (isNewDuplicate) {\n      setDuplicateDetected(true);\n      setDuplicateElements(\n        newDuplicateKeys.reduce((acc, key) => {\n          acc[key] = true;\n          return acc;\n        }, {})\n      );\n    }\n  };\n\n  const handleDrop = (e, key) => {\n    console.log(key)\n    console.log(\"drag cell key\", draggedCellKey);\n    if (draggedCellKey) {\n      // Move table item\n      const sourceAssignment = teacherAssignment[draggedCellKey];\n      const targetAssignment = teacherAssignment[key];\n\n      setTeacherAssignment({\n        ...teacherAssignment,\n        [draggedCellKey]: targetAssignment,\n        [key]: sourceAssignment,\n      });\n\n      setDraggedCellKey(null);\n    } else {\n      // Assign teacher to the cell\n      const teacher_assignment = teacherAssignment;\n      teacherAssignment[key] = dragItem.current;\n      setTeacherAssignment({ ...teacher_assignment });\n      setTeacher({});\n      const teacherCount = teacherCounter;\n      if (!teacherCount[dragItem.current.teacher]) {\n        teacherCount[dragItem.current.teacher] = 1;\n      } else {\n        teacherCount[dragItem.current.teacher] += 1;\n      }\n      setTeacherCounter({ ...teacherCount });\n      checkForDuplicateInRow(key);\n\n      const teacher = teacherAssignment[key];\n      const batchId = key.split(\"_\")[1];\n      const lectureId = key.split(\"_\")[0];\n      const batchVo = batch.find(it => it.BatchID == batchId);\n      console.log('xxxx xx xx teacher ', teacher);\n      console.log('xxxx xx xx batchId ', batchId);\n      console.log('xxxx xx xx lectureId', lectureId);\n      console.log('xxxx xx xx teacherAssignment', teacherAssignment);\n\n      // making lectureVO \n      const lectureVo = time.find(it => it.LectureID == lectureId);\n\n      const lecture = {};\n      lecture.ID = \"0\";\n      lecture.TimeTableID = \"0\";\n      lecture.LectureName = \"\";\n      lecture.Batch = batchVo;\n      lecture.Lecture = lectureVo;\n      lecture.Subject = teacher.subject;\n      lecture.FacultyID = teacher.FacultyID;\n      lecture.IsActive = true;\n      lecture.CreatedByUserID = \"1\";\n      lecture.CreatedOnDate = \"02/05/2023\";\n      console.log(\"fff\", lecture);\n\n      const lecture_list = lectureList;\n      lecture_list.push(lecture);\n      setLectureList([...lecture_list])\n      /* THIS LECTURE LIST WILL BE USED BELOW IN THE CONST SAVETABLE() METHOD FROM WHERE WE SEND IT TO DATABASE THROUGH API WRITTEN IN SAVETABLE() METHOD*/\n    }\n  }\n  const allowDrop = (ev) => {\n    let t = ev.target;\n    while (t && (!t.classList || !t.classList.contains(\"each-block\"))) {\n      t = t.parentNode;\n    }\n    if (t && t.innerText.trim() !== \"\") {\n      // Prevent drop event if cell is not empty\n      return false;\n    }\n    ev.preventDefault();\n  };\n  const removeTeacher = (key) => {\n    const teacher_assignment = teacherAssignment;\n    setTeacherAssignment({ ...teacher_assignment });\n    setTeacher({});\n    const teacherCount = teacherCounter;\n    if ([teacherAssignment[key].teacher]) {\n      teacherCount[teacherAssignment[key].teacher] -= 1;\n    }\n    delete teacherAssignment[key].teacher;\n    delete teacherAssignment[key].color;\n    // else {\n    //   teacherCounts[teacherAssignment[key]] += 1;\n    // }\n    // setTeacherCounter({...teacherCounter});\n    setTeacherCounter(teacherCount);\n  }\n  const onAddBatch = () => {\n    setAddBatch(<AddBatch batchList={batchList} />)\n  }\n  const onAddTeacher = () => {\n    alert(\"add\")\n  }\n  const saveTable = () => {\n    // localStorage.setItem(\"teacherA\", JSON.stringify(teacherAssignment));\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      \"TimeTableID\": 0,\n      \"Description\": \"time table save\",\n      \"DateType\": \"single\",\n      \"FromDate\": \"12/05/2023\",\n      \"ToDate\": \"15/05/2023\",\n      \"ShiftID\": 1,\n      \"SessionID\": 5,\n      \"Session\": \"string\",\n      \"BatchID\": [\n        1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14\n      ],\n      \"LectureID\": [\n        1, 2, 3, 4, 5, 6, 7, 8\n      ],\n      \"IsActive\": true,\n      \"CreatedByUserID\": 1,\n      \"CreatedOnDate\": \"09/05/2023\",\n      \"LectureList\": lectureList\n    });\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n\n    fetch(\"https://api.aayamcareerinstitute.co.in/api/AddUpdateTimeTable\", requestOptions)\n      .then(response => response.text())\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n  };\n  const callWattsappApi = (url) => {\n    var requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n\n    // fetch(\"https://ziper.io/api/send.php?number=917898118503&type=text&message=JITULOLO&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\", requestOptions)\n    fetch(\"https://ziper.io/api/send.php?number=917898118503&type=media&message=test%20message&media_url=https://api.aayamcareerinstitute.co.in//Uploads/Files/File_3431223213168.pdf&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\", requestOptions)\n\n      .then(response => console.log(response))\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n  }\n  /**************************************** Template Section *****************************************/\n  return (\n    <>\n      <div className=\"bg-container\">\n        <h1 className='heading-style'>CLASS SCHEDULE</h1>\n        <div className=\"button-group added-style\">\n          {/* <Button className=\"btn \" color=\"info\" onClick={onAddBatch}> TO BE ADDED WHEN ADD BATCH FUNCTIONALITY IS TO MAKE ACTIVE*/}\n          <Button className=\"btn \" color=\"info\">\n            Add Batches\n          </Button>\n          {addBatch}\n          <Button className=\"btn\" color=\"info\">\n            Add Teachers\n          </Button>\n          <Button className=\"btn\" color=\"info\" onClick={saveTable}>\n            Save\n          </Button>\n          <Button className=\"btn\" color=\"info\" onClick={convertToImage}>\n            Post\n          </Button>\n          {/* <Button className=\"btn\" color=\"info\" onClick={callWattsappApi}>\n            Post\n          </Button> */}\n        </div>\n        <div>\n          <div ref={divRef}>\n            <table className='table-style'>\n              <tbody>\n                <div className=\"for-time\">\n                  <tr>\n                    <td className='F-style time-style'>Time</td>\n                    {batch.map((each) => {\n                      return (\n                        <td className='F-style batch-style' key={batch.BatchID}>{each.Batch}</td>\n                      )\n                    })}\n                  </tr>\n                </div>\n                <tr >\n                  {time.map((t) => {\n                    return (\n                      <div >\n                        <td className='F-style time-style'>{t.Time_From}-{t.Time_To}</td>\n                        {batchList.map((b) => {\n                          const key = t.LectureID + '_' + b.BatchID\n                          return (\n                            <td\n                              draggable={true}\n                              onDragOver={allowDrop}\n                              onDrop={(e) => handleDrop(e, key)}\n                              onDragStart={(e) => teacherAssignment[key] && handleTableCellDragStart(e, key)}\n                              key={key}\n                              id={key}\n                              className={`each-block ${duplicateElements[key] ? \"blink\" : \"\"}`}\n                              style={{ backgroundColor: teacherAssignment[key]?.color }}\n                            // className={`each-block ${duplicateElements[key]}`}\n                            >\n                              {teacherAssignment[key] && (\n                                <div className={`teacname-cross-style ${teacherAssignment[key]?.className} `}>\n                                  <div className=\"teacher-name\" >\n                                    {teacherAssignment[key]?.teacher}\n                                  </div>\n                                  <div className=\"cross-btn-container\">\n                                    {teacherAssignment[key]?.teacher ? (\n                                      <button\n                                        className=\"cross-style\"\n                                        onClick={() => removeTeacher(key)}\n                                      >\n                                        {/* <RiDeleteBin2Line /> */}\n                                        <RxCross2 />\n                                      </button>\n                                    ) : (\n                                      ''\n                                    )}\n                                  </div>\n                                </div>\n                              )}\n                            </td>\n                          )\n                        })}\n                      </div>\n                    )\n                  })}\n                </tr>\n              </tbody>\n            </table>\n            {/* <button onClick={onAddBatch}>+</button>\n            {addBatch} */}\n          </div>\n\n          {/* {image && <img src={image} alt=\"table\" style={{ maxWidth: tableWidth }} />} */}\n          {/* <button onClick={saveTable}>Save</button> */}\n        </div>\n        <div className='teacher-container' style={{ maxWidth: tableWidth }}>\n          {teachers_list.map((teacher, index) => {\n            const { FacultyID, Faculty } = teacher;\n            return (\n              <div\n                style={{ maxWidth: tableWidth, backgroundColor: color[index % color.length] }}\n                key={Faculty}\n                className=\"teacher-item\"\n                draggable={true}\n                onDragStart={(e) => dragStart(e, { teacher: Faculty, color: color[index % color.length] })}\n              >\n                <h3>{Faculty}</h3>\n                {teacherCounter[Faculty] > 0 && (\n                  <span className={`counter-item `} draggable={false}>\n                    {teacherCounter[Faculty]}\n                  </span>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  )\n}\nexport default TimeTable;"],"sourceRoot":""}