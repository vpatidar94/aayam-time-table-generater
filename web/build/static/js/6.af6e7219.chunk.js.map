{"version":3,"sources":["pages/TTPages/List/List.js","const/url.js","pages/TTPages/TeacherForm/TeacherForm.js","api/tt.api.js","pages/TTPages/AddBatch/AddBatch.js","api/upload.api.js","const/color.const.js","pages/TTPages/TimeTable/TimeTable.js"],"names":["teachers_list","FacultyID","Faculty","subject","batch","BatchID","Batch","CourseID","time","LectureID","Lecture","Time_From","Time_To","BASE_URL","URL","UPLOAD_FILE","GET_UPLOAD_FILE_URL","GET_SAVE_TIMETABLE_URL","GET_ALL_TT","GET_EDIT_TT","REMOVE_TT","AddTeacher","_ref","showModal","setShowModal","teacherList","useEffect","fetchApiData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_context","prev","next","fetch","sent","json","setApiData","t0","stop","apply","arguments","_useState","useState","_useState2","_slicedToArray","setFaculties","_useState3","_useState4","apiData","_useState5","_useState6","checkedItems","setCheckedItems","_useState7","_useState8","showAlert","setShowAlert","_useState9","_useState10","timeOfAlert","setTimeOfAlert","_apiData$Object","Object","responseObject","_responseObject$Facul","FacultyList","_responseObject$UserL","UserList","facultyNameMap","forEach","user","UserID","UserName","handleCheckboxChange","event","_event$target","target","name","checked","_objectSpread","_defineProperty","updatedFacultyList","map","faculty","closeModal","_jsx","children","_jsxs","Modal","isOpen","toggle","centered","ModalHeader","ModalBody","className","style","maxHeight","overflowY","maxWidth","listStyle","facultyUser","bgColor","find","facultyName","type","onChange","ModalFooter","Button","color","onClick","newTeachersList","_loop","facultyID","selectedItem","parseInt","some","teacher","push","UncontrolledAlert","fade","setTimeout","TtApi","_createClass","_classCallCheck","getTtList","res","method","abrupt","Error","message","options","getEditTt","_callee2","fromDateEdit","myHeaders","_context2","Headers","append","headers","body","JSON","stringify","FromDate","replaceAll","_x","addUpdateTt","_ref3","_callee3","ttRequestBody","_context3","_x2","removeTtById","_ref4","_callee4","timeTableID","_context4","_x3","AddBatch","batchList","setBatches","_responseObject$Batch","newBatches","batchID","UploadApi","getWattsappApi","url","cell","fileName","console","log","URLSearchParams","number","media_url","filename","instance_id","access_token","_x4","getWattsappGroupApiTeachers","group_id","_x5","_x6","_x7","getWattsappGroupApiOthers","_x8","_x9","_x10","uplaodFile","file","formData","FormData","_x11","getUploadedFile","_callee5","_context5","COLORS","TimeTable","appenColorTOTeacherList","draggedTeacher","setDraggedTeacher","lectureList","setLectureList","teacherAssignment","setTeacherAssignment","teacherCounter","setTeacherCounter","lectureTeacherCounter","setLectureTeacherCounter","_useState11","_useState12","duplicateTeacherDetectedInRow","setDuplicateTeacherDetectedInRow","_useState13","_useState14","draggedCellKey","setDraggedCellKey","_useState15","_useState16","setBatchList","_useState17","_useState18","setTeacherList","_useState19","_useState20","showAddBatchModal","setShowAddBatchModal","_useState21","_useState22","showAddTeacherModal","setShowAddTeacherModal","_useState23","_useState24","fromDate","setFromDate","_useState25","_useState26","toDate","setToDate","_useState27","_useState28","_useState29","_useState30","divRef","useRef","stateTeacherList","i","concat","allowDrop","ev","t","classList","contains","parentNode","innerText","trim","preventDefault","handleDrop","e","lecture","selectedTeacher","keyInside","removeTeacher","stateTeacherAssignment","key","stateLectureList","lectureDto","Subject","IsActive","CreatedByUserID","CreatedOnDate","_toConsumableArray","updateLectureListOnDrop","lectureId","teacherId","stateLectureTeacherCounter","checkDuplicateTeacherInRowOnDrop","stateTeacherCounter","updateTeacherCounterOnDrop","batchId","index","row","_row$batch","_row$lecture","splice","lectureTeacherKey","keyLtId","isTeacherDuplicateInLecture","generateUID","firstPart","Math","random","secondPart","toString","slice","convertToImage","canvas","imgData","byteString","mimeString","ia","blob","imageName","_data$Object","data","fileDetail","html2canvas","current","toDataURL","atob","split","Uint8Array","length","charCodeAt","Blob","File","reverse","obj","_obj$Title","Title","indexOf","LongURL","t1","onAddBatch","onAddTeacher","saveTable","sentBatchID","_result$ExceptionMess","item","TimeTableID","Description","DateType","ToDate","ShiftID","SessionID","Session","Date","LectureList","ExceptionMessage","clearAll","_Fragment","Row","Col","Alert","Form","Input","id","defaultValue","value","onChangeFromDate","min","toISOString","placeholder","onChangeToDate","disabled","ButtonGroup","UncontrolledDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","divider","ref","each","window","confirm","updatedBatches","filter","onDeleteBatch","RxCross2","b","_teacherAssignment$ke","_teacherAssignment$ke2","_teacherAssignment$ke3","_teacherAssignment$ke4","_teacherAssignment$ke5","_teacherAssignment$ke6","_teacherAssignment$ke7","draggable","onDragOver","onDrop","onDragStart","backgroundColor","onDragEnd","Badge","updatedTeachers","onDeleteTeacher"],"mappings":"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","file":"static/js/6.af6e7219.chunk.js","sourcesContent":["import {v4 as uuidv4} from \"uuid\"\r\nexport const teachers_list = [\r\n        {\r\n            FacultyID: 22,\r\n            Faculty: \"MYK\",\r\n            subject: \"Physics\"\r\n        },\r\n        \r\n        {\r\n            FacultyID: 3038,\r\n            Faculty: \"KPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 2029,\r\n            Faculty: \"MRS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 3051,\r\n            Faculty: \"MAS\",\r\n            subject:\"Physics\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 3050,\r\n            Faculty: \"RSS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 25,\r\n            Faculty: \"NMS\",\r\n            subject:\"Biology\"\r\n        },\r\n        {\r\n            FacultyID: 3037,\r\n            Faculty: \"HDS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3032,\r\n            Faculty: \"MNM\",\r\n            subject: \"Biology\"\r\n        },\r\n        \r\n        {\r\n            FacultyID: 1023,\r\n            Faculty: \"SJ\",\r\n            subject:\"Biology\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 1025,\r\n            Faculty: \"AJ\",\r\n            subject:\"Biology\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 1026,\r\n            Faculty: \"DMPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n\r\n        \r\n       \r\n        \r\n        {\r\n            FacultyID: 1027,\r\n            Faculty: \"PSJ\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 3033,\r\n            Faculty: \"YBS\",\r\n            subject:\"Biology\"\r\n        },\r\n        {\r\n            FacultyID: 3030,\r\n            Faculty: \"AKS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 2028,\r\n            Faculty: \"AMS\",\r\n            subject:\"Maths\"\r\n        },\r\n        {\r\n            FacultyID: 3031,\r\n            Faculty: \"NDS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 3052,\r\n            Faculty: \"HWS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 1029,\r\n            Faculty: \"JRS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3053,\r\n            Faculty: \"HTS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3054,\r\n            Faculty: \"NPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3055,\r\n            Faculty: \"SKS\",\r\n            subject:\"Maths\"\r\n        },\r\n    ]; \r\n    \r\n\r\nexport const batch= [\r\n    {\r\n        BatchID: 1,\r\n        Batch: \"A1\",\r\n        CourseID: 3\r\n    },\r\n    {\r\n        BatchID: 2,\r\n        Batch: \"B1\",\r\n        CourseID: 2\r\n    },\r\n    {\r\n        BatchID: 3,\r\n        Batch: \"C1\",\r\n        CourseID: 1\r\n    },\r\n    {\r\n        BatchID: 6,\r\n        Batch: \"A2\",\r\n        CourseID: 3\r\n    },\r\n    \r\n    {\r\n        BatchID: 7,\r\n        Batch: \"A4\",\r\n        CourseID: 3\r\n    },\r\n    {\r\n        BatchID: 10,\r\n        Batch: \"A3\",\r\n        CourseID: 3\r\n    },\r\n    \r\n    {\r\n        BatchID: 15,\r\n        Batch: \"C2\",\r\n        CourseID: 1\r\n    },\r\n    \r\n    \r\n    //MORE BATCHES ADDED WITH A FAKE BATCHID AND FAKE COURSEID NEED TO CHANGE LATER\r\n\r\n    {\r\n        BatchID: 20,\r\n        Batch: \"JO1\",\r\n        CourseID: 13\r\n    },\r\n    {\r\n        BatchID: 22,\r\n        Batch: \"JXII-1\",\r\n        CourseID: 12\r\n    },\r\n    {\r\n        BatchID: 3042,\r\n        Batch: \"JXI-1\",\r\n        CourseID: 11\r\n    },\r\n    {\r\n        BatchID: 3049,\r\n        Batch: \"B2\",\r\n        CourseID: 2\r\n    },\r\n    {\r\n        BatchID: 3061,\r\n        Batch: \"JXI-2\",\r\n        CourseID: 11\r\n    },\r\n    {\r\n        BatchID: 3078,\r\n        Batch: \"JEE adv\",\r\n        CourseID: 13\r\n    },\r\n    \r\n    {\r\n        BatchID: 3079,\r\n        Batch: \"JEE XL\",\r\n        CourseID: 1025\r\n    }\r\n    \r\n]\r\n\r\n\r\nexport const time= [\r\n    {\r\n        LectureID: 1,\r\n        Lecture: \"L1\",\r\n        Time_From: \"08:30 AM\",\r\n        Time_To: \"09:45 AM\"\r\n    },\r\n    {\r\n        LectureID: 2,\r\n        Lecture: \"L2\",\r\n        Time_From: \"09:50 AM\",\r\n        Time_To: \"11:05 AM\"\r\n    },\r\n    {\r\n        LectureID: 3,\r\n        Lecture: \"L3\",\r\n        Time_From: \"11:20 AM\",\r\n        Time_To: \"12:35 PM\"\r\n    },\r\n    {\r\n        LectureID: 4,\r\n        Lecture: \"L4\",\r\n        Time_From: \"12:40 PM\",\r\n        Time_To: \"01:55 PM\"\r\n    },\r\n    {\r\n        LectureID: 5,\r\n        Lecture: \"L5\",\r\n        Time_From: \"02:00 PM\",\r\n        Time_To: \"03:15 PM\"\r\n    },\r\n    {\r\n        LectureID: 6,\r\n        Lecture: \"L6\",\r\n        Time_From: \"03:20 PM\",\r\n        Time_To: \"04:35 PM\"\r\n    },\r\n    {\r\n        LectureID: 7,\r\n        Lecture: \"L7\",\r\n        Time_From: \"04:50 PM\",\r\n        Time_To: \"06:05 PM\"\r\n    },\r\n    {\r\n        LectureID: 8,\r\n        Lecture: \"L8\",\r\n        Time_From: \"06:15 PM\",\r\n        Time_To: \"07:30 PM\"\r\n    }\r\n]\r\n","const ENV_URL = 'https://api.aayamcareerinstitute.co.in/api'; // producation fn\r\nconst DEV_URL = 'http://localhost:5001'; // producation fn\r\nconst BASE_URL= ENV_URL\r\n\r\n\r\n\r\nexport const URL = {\r\n    UPLOAD_FILE: BASE_URL + '/UploadFilesAttachment',\r\n    GET_UPLOAD_FILE_URL: BASE_URL + '/GetFiles', \r\n    GET_SAVE_TIMETABLE_URL: BASE_URL+ '/AddUpdateTimeTable',\r\n    GET_ALL_TT: BASE_URL + '/GetTimeTable', \r\n\r\n    GET_EDIT_TT: BASE_URL + '/GetTimeTableByDate',\r\n    REMOVE_TT: BASE_URL + '/DeleteTimeTable',\r\n\r\n\r\n\r\n\r\n};  \r\n","import React, { useState, useEffect } from 'react';\r\nimport { batch } from '../List/List';\r\nimport { teachers_list } from '../List/List';\r\n// import { teachers_list } from '../../../const/teacherList';\r\n// import { batch } from '../../../const/batchList';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledAlert } from 'reactstrap';\r\nimport \"./TeacherForm.css\";\r\n\r\nconst AddTeacher = ({ showModal, setShowModal, teacherList }) => {\r\n\r\n  /************************************Use Effect****************************************** */\r\n  useEffect(() => {\r\n    if (showModal) {\r\n      const fetchApiData = async () => {\r\n        try {\r\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\r\n          const result = await response.json();\r\n          setApiData(result);\r\n        } catch (error) {\r\n        }\r\n      };\r\n\r\n      fetchApiData();\r\n    }\r\n  }, [showModal]);\r\n\r\n  /***********************Use State***************************************************** */\r\n  const [faculties, setFaculties] = useState(teacherList);\r\n  // const [batches, setBatches] = useState(JSON.parse(localStorage.getItem('batches')) || batch);\r\n  const [apiData, setApiData] = useState({});\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n  const [showAlert, setShowAlert] = useState(\"\");\r\n  const [timeOfAlert, setTimeOfAlert] = useState(false);\r\n\r\n  /*************************other consts*************************************************** */\r\n  const { Object: responseObject = {} } = apiData;\r\n  const { Batch = [], FacultyList = [], UserList = [] } = responseObject;\r\n  const facultyNameMap = {};\r\n\r\n  UserList.forEach((user) => {\r\n    facultyNameMap[user.UserID] = user.UserName;\r\n  });\r\n  /****************************************methods******************************************* */\r\n  const handleCheckboxChange = (event) => {\r\n    const { name, checked } = event.target;\r\n    setCheckedItems({\r\n      ...checkedItems,\r\n      [name]: checked,\r\n    });\r\n  };\r\n\r\n  const updatedFacultyList = FacultyList.map((faculty) => ({\r\n    ...faculty,\r\n    Faculty: facultyNameMap[faculty.FacultyID] || faculty.Faculty,\r\n  }));\r\n\r\n  const addToFaculty = () => {\r\n    const newTeachersList = teacherList;\r\n\r\n    for (const facultyID in checkedItems) {\r\n      if (checkedItems[facultyID]) {\r\n        const selectedItem = updatedFacultyList.find(\r\n          (faculty) => faculty.FacultyID === parseInt(facultyID)\r\n        );\r\n\r\n        if (selectedItem) {\r\n          const facultyUser = UserList.find(\r\n            (user) => user.UserID === selectedItem.FacultyID\r\n          );\r\n          const facultyName = facultyUser ? facultyUser.UserName : selectedItem.Faculty;\r\n\r\n          const isTeacherAlreadyAdded = newTeachersList.some(\r\n            (teacher) => teacher.FacultyID === selectedItem.FacultyID\r\n          );\r\n\r\n          if (!isTeacherAlreadyAdded) {\r\n            newTeachersList.push({\r\n              FacultyID: selectedItem.FacultyID,\r\n              Faculty: facultyName,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setFaculties(newTeachersList);\r\n    if (!timeOfAlert) {\r\n      setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\r\n        Teachers added successfully\r\n      </UncontrolledAlert>);\r\n      setTimeout(() => {\r\n        setTimeOfAlert(false);\r\n        setShowAlert(\"\");\r\n      }, 3000);\r\n    };\r\n    closeModal();\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  /**********************************************Template to return******************************** */\r\n  return (\r\n    <div>\r\n      <Modal isOpen={showModal} toggle={closeModal} centered={true}>\r\n        <ModalHeader toggle={closeModal}>Select Teachers from the list</ModalHeader>\r\n        <ModalBody>\r\n          {showAlert}\r\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\r\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\r\n              {updatedFacultyList.map((faculty) => {\r\n                const { FacultyID, bgColor, className } = faculty;\r\n                const facultyUser = UserList.find((user) => user.UserID === FacultyID);\r\n                const facultyName = facultyUser ? facultyUser.UserName : faculty.Faculty;\r\n                return (\r\n                  <li key={faculty.FacultyID}>\r\n                    <div className=\"add-faculty-style\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        name={faculty.FacultyID}\r\n                        checked={checkedItems[faculty.FacultyID] || false}\r\n                        onChange={handleCheckboxChange}\r\n                        className=\"addfaculty-checkbox-style\"\r\n                      />\r\n                      {facultyName}\r\n                    </div>\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={addToFaculty}>Add</Button>{' '}\r\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default AddTeacher;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { URL } from '../const/url';\r\n\r\nexport default class TtApi {\r\n    getTtList = async () => {\r\n        try {\r\n            const res = await fetch(URL.GET_ALL_TT, {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getEditTt = async (fromDateEdit) => {\r\n        try {\r\n            // const formData = new FormData();\r\n            // formData.append('file', file, file.name);\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.GET_EDIT_TT, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: JSON.stringify({\r\n                    FromDate: fromDateEdit.replaceAll(\"-\", \"/\"),\r\n                })\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    \r\n    addUpdateTt = async (ttRequestBody) => {\r\n        try {\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.GET_SAVE_TIMETABLE_URL, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: JSON.stringify(ttRequestBody)\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    removeTtById = async (timeTableID) => {\r\n        try {\r\n            // const formData = new FormData();\r\n            // formData.append('file', file, file.name);\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.REMOVE_TT, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: timeTableID\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n}","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { batch } from '../List/List';\r\n// import { batch } from '../../../const/batchList';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledAlert } from 'reactstrap';\r\nimport \"./AddBatch.css\"\r\n\r\nconst AddBatch = ({ showModal, setShowModal, batchList }) => {\r\n  /******************************************Use Effect********************************************** */\r\n  useEffect(() => {\r\n    if (showModal) {\r\n      const fetchApiData = async () => {\r\n        try {\r\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\r\n          const result = await response.json();\r\n          setApiData(result);\r\n        } catch (error) {\r\n        }\r\n      };\r\n      fetchApiData();\r\n    }\r\n  }, [showModal]);\r\n  /********************************************Use State****************************************** */\r\n  const [batches, setBatches] = useState(batchList);\r\n  const [apiData, setApiData] = useState({});\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n  const [showAlert, setShowAlert] = useState(\"\");\r\n  const [timeOfAlert, setTimeOfAlert] = useState(false);\r\n\r\n\r\n  /*****************************Other consts******************************************************** */\r\n  const { Object: responseObject = {} } = apiData;\r\n  const { Batch = [] } = responseObject;\r\n\r\n  /***************************************Methods*************************************************** */\r\n  const handleCheckboxChange = (event) => {\r\n    const { name, checked } = event.target;\r\n    setCheckedItems({\r\n      ...checkedItems,\r\n      [name]: checked,\r\n    });\r\n  };\r\n\r\n  const addToBatch = () => {\r\n    const newBatches = batchList;\r\n    for (const batchID in checkedItems) {\r\n      if (checkedItems[batchID]) {\r\n        const selectedItem = Batch.find((batch) => batch.BatchID === parseInt(batchID));\r\n        if (selectedItem && !newBatches.find((batch) => batch.BatchID === selectedItem.BatchID)) {\r\n          newBatches.push({\r\n            BatchID: selectedItem.BatchID,\r\n            Batch: selectedItem.Batch,\r\n            CourseID: selectedItem.CourseID,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    setBatches(newBatches);\r\n    if (!timeOfAlert) {\r\n      setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\r\n        Batches added successfully\r\n      </UncontrolledAlert>);\r\n\r\n      setTimeout(() => {\r\n        setTimeOfAlert(false);\r\n        setShowAlert(\"\");\r\n      }, 3000);\r\n\r\n    };\r\n    closeModal();\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  /***************************Template to return******************************************************* */\r\n  return (\r\n    <div>\r\n      <Modal centered={true} isOpen={showModal} toggle={closeModal}>\r\n        <ModalHeader toggle={closeModal}>Select Batches from the list</ModalHeader>\r\n        <ModalBody>\r\n          {showAlert}\r\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\r\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\r\n              {Batch.map((batch) => (\r\n                <li key={batch.BatchID}>\r\n                  <div className=\"add-batch-style\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name={batch.BatchID}\r\n                      checked={checkedItems[batch.BatchID] || false}\r\n                      onChange={handleCheckboxChange}\r\n                      className=\"addbatch-checkbox-style\"\r\n                    />\r\n                    {batch.Batch}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={addToBatch}>Add</Button>{' '}\r\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default AddBatch;\r\n\r\n","import { URL } from '../const/url';\r\n\r\nexport default class UploadApi {\r\n    // getUserWalletBalance = async (userId) => {\r\n    //     try {\r\n    //         GlobalEmitterService.emit(true);\r\n    //         const token = `Bearer ${AuthService.getToken()}`;\r\n    //         const res = await fetch(URL.USER_WALLET_BALANCE + '?' + new URLSearchParams({\r\n    //             userId\r\n    //         }), {\r\n    //             method: 'GET',\r\n    //             headers: { 'Content-Type': 'application/json', 'Authorization': token },\r\n    //         });\r\n    //         const result = await res.json();\r\n    //         GlobalEmitterService.emit(false);\r\n    //         return result;\r\n    //     } catch (e) {\r\n    //         GlobalEmitterService.emit(false);\r\n    //         throw new Error(e.message, e.options);\r\n    //     }\r\n    // }\r\n\r\n\r\n    getWattsappApi = async (url, message, cell, fileName) => {\r\n        try {\r\n            console.log(\"url\", url);\r\n            console.log(\"mesage\", message);\r\n            console.log(\"cel\", cell);\r\n            console.log(\"file\", fileName);\r\n            // https://ziper.io/api/send.php?number=917898118503&type=media&message=test%20message&media_url=https://api.aayamcareerinstitute.co.in//Uploads/Files/File_3431223213168.pdf&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/send.php\" + '?' + new URLSearchParams({\r\n                number: cell,\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"647B3C9AA8D0A\",\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n\r\n    getWattsappGroupApiTeachers = async (url, message, fileName) => {\r\n        try {\r\n            console.log(\"url\", url);\r\n            console.log(\"mesage\", message);\r\n            console.log(\"file\", fileName);\r\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\r\n                group_id: \"919977116612-1595572006@g.us\",\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"647B3C9AA8D0A\",\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getWattsappGroupApiOthers = async (url, message, fileName) => {\r\n        try {\r\n            console.log(\"url\", url);\r\n            console.log(\"mesage\", message);\r\n            console.log(\"file\", fileName);\r\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\r\n                group_id: \"919826362001-1628170376@g.us\",\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"647B3C9AA8D0A\",\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    uplaodFile = async (file) => {\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('file', file, file.name);\r\n            const res = await fetch(URL.UPLOAD_FILE, {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getUploadedFile = async () => {\r\n        try {\r\n            const res = await fetch(URL.GET_UPLOAD_FILE_URL, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({})\r\n\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n}","export const COLORS = [\"#D4E6F1\", \"#E8DAEF\", \"#008080\", \"#808000\", \"#C39BD3\", \"#76D7C4\", \"#3498DB\", \"#358b79\", \"#847f86\", \"rgb(251, 235, 9)\", \"#CA6F1E\", \"#CCCCFF\", \"#F4D03F\", \"rgb(199, 185, 84)\", \"#979A9A\", \"#F0B27A\", \"rgb(117, 98, 179)\", \"#CD5C5C\", \"#40E0D0\", \"#DAF7A6\",\"#CECCA9\", \"#808000\", \"#FADBD8\", \"green\", \"yellow\", \"white\", \"red\", \"pink\"]\r\n","import html2canvas from 'html2canvas';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport { Alert, Badge, Button, ButtonGroup, Col, DropdownItem, DropdownMenu, DropdownToggle, Form, FormGroup, Input, Row, UncontrolledAlert, UncontrolledDropdown } from 'reactstrap';\r\nimport TtApi from '../../../api/tt.api.js';\r\nimport UploadApi from '../../../api/upload.api.js';\r\nimport { COLORS } from '../../../const/color.const.js';\r\nimport AddBatch from '../AddBatch/AddBatch.js';\r\nimport { batch, teachers_list, time } from '../List/List.js';\r\nimport AddTeacher from '../TeacherForm/TeacherForm.js';\r\nimport \"./TimeTable.scss\";\r\n\r\nconst TimeTable = () => {\r\n  /***************************************** Use Params Section******************************/\r\n  /**************************************** const Section ************************************/\r\n\r\n  /**************************************** Use Effect Section ************************************/\r\n  useEffect(() => {\r\n    appenColorTOTeacherList();\r\n  }, []);\r\n\r\n  /**************************************** State Section *****************************************/\r\n  const [draggedTeacher, setDraggedTeacher] = useState({}); // Contains dragged teacher\r\n  const [lectureList, setLectureList] = useState([]);\r\n  const [teacherAssignment, setTeacherAssignment] = useState({});\r\n  const [teacherCounter, setTeacherCounter] = useState({}); // key: teacherId, value: counter\r\n  const [lectureTeacherCounter, setLectureTeacherCounter] = useState({}); // key: lectureId_teacherId, value: counter to check duplicate rows\r\n  const [duplicateTeacherDetectedInRow, setDuplicateTeacherDetectedInRow] = useState(false);\r\n  const [draggedCellKey, setDraggedCellKey] = useState(null);\r\n\r\n  // contains key of teacher asignment which is grag within the table\r\n  const [batchList, setBatchList] = useState(batch);\r\n  const [teacherList, setTeacherList] = useState(teachers_list);\r\n  const [showAddBatchModal, setShowAddBatchModal] = useState(false); //for add Batch popup\r\n  const [showAddTeacherModal, setShowAddTeacherModal] = useState(false);\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n  const [showAlert, setShowAlert] = useState(\"\");\r\n  const [timeOfAlert, setTimeOfAlert] = useState(false);\r\n  const divRef = useRef(null);\r\n\r\n  /**************************************** Component Method Section *********************************/\r\n  /**\r\n   * \r\n   * @param {*} e drag event\r\n   * @param {*} teacherInfo teacherVo\r\n   * Calls when drag start & drag the reacher\r\n   */\r\n  const dragStart = (e, teacherDragged) => {\r\n    setDraggedTeacher(teacherDragged);\r\n  };\r\n\r\n  const appenColorTOTeacherList = () => {\r\n    //due to this method once the color assigned to the teacher will stick to that teacher only i.e on deleting the teacher from teacher list the color will aslo be deleted i.e will not assign to the next teacher.\r\n    const stateTeacherList = [];\r\n    teachers_list.forEach((teacher, i) => {\r\n      teacher.color = COLORS[i];\r\n      stateTeacherList.push(teacher);\r\n    });\r\n    setTeacherList([...stateTeacherList]);\r\n  };\r\n\r\n  const allowDrop = (ev) => {\r\n    let t = ev.target;\r\n    while (t && (!t.classList || !t.classList.contains(\"each-block\"))) {\r\n      t = t.parentNode;\r\n    }\r\n    if (t && t.innerText.trim() !== \"\") {\r\n      // Prevent drop event if cell is not empty\r\n      return false;\r\n    }\r\n    ev.preventDefault();\r\n  };\r\n\r\n  // Prepare lecture list\r\n  const updateLectureListOnDrop = (lecture, batch, teacher) => {\r\n    const stateLectureList = lectureList;\r\n    const lectureDto = {};\r\n    lectureDto.ID = \"0\";\r\n    lectureDto.TimeTableID = \"0\";\r\n    lectureDto.LectureName = \"\";\r\n    lectureDto.Batch = batch;\r\n    lectureDto.Lecture = lecture;\r\n    lectureDto.Subject = teacher.subject;\r\n    lectureDto.FacultyID = teacher.FacultyID;\r\n    lectureDto.IsActive = true;\r\n    lectureDto.CreatedByUserID = \"1\";\r\n    lectureDto.CreatedOnDate = \"02/05/2023\";\r\n    stateLectureList.push(lectureDto);\r\n    setLectureList([...stateLectureList]);\r\n  };\r\n\r\n  const updateTeacherCounterOnDrop = (teacher, lectureId) => {\r\n    const stateTeacherCounter = teacherCounter;\r\n    if (!stateTeacherCounter[teacher.FacultyID]) {\r\n      stateTeacherCounter[teacher.FacultyID] = 1;\r\n      setTeacherCounter({ ...stateTeacherCounter });\r\n      return;\r\n    }\r\n    // to update the counter of teacher when new teacher is droped into the cell of table\r\n    const key = lectureId + '_' + teacher.FacultyID;\r\n    if (lectureTeacherCounter && lectureTeacherCounter[key] && lectureTeacherCounter[key] > 1) {\r\n      return;\r\n    }\r\n    stateTeacherCounter[teacher.FacultyID] += 1;\r\n    setTeacherCounter({ ...stateTeacherCounter });\r\n  }\r\n\r\n  const checkDuplicateTeacherInRowOnDrop = (lectureId, teacherId) => {\r\n    const key = lectureId + '_' + teacherId;\r\n    const stateLectureTeacherCounter = lectureTeacherCounter;\r\n    if (!stateLectureTeacherCounter[key]) {\r\n      stateLectureTeacherCounter[key] = 1\r\n    } else {\r\n      stateLectureTeacherCounter[key] += 1\r\n    }\r\n    setLectureTeacherCounter({ ...stateLectureTeacherCounter });\r\n    if (stateLectureTeacherCounter[key] > 1) {\r\n      setDuplicateTeacherDetectedInRow(true);\r\n      setTimeout(() => {\r\n        setDuplicateTeacherDetectedInRow(false);\r\n      }, 3000); // Alert duration \r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On Drop\r\n   * Check if drops within the table if yes remove techer from current block by preserving the teacher and proceed for select teacher & if no proceed for select teacher\r\n   * set teacher assignment object\r\n   * set teature lecture list for api call (updateLectureListOnDrop)\r\n   * update teacher drop counter (updateTeacherCounterOnDrop)\r\n   * Check if teacher dropped in same row if yes show alert and set lecture vs teacher counter to use for blink (checkDuplicateTeacherInRowOnDrop)\r\n   * empty teacher state\r\n   * empty state used withing table drag\r\n   */\r\n  const handleDrop = (e, lecture, batch) => {\r\n    let selectedTeacher = draggedTeacher;\r\n    if (draggedCellKey) {\r\n      // if dragged within the table remove source & proceed for drop\r\n      const keyInside = draggedCellKey.lecture.LectureID + '_' + draggedCellKey.batch.BatchID;\r\n      selectedTeacher = teacherAssignment[keyInside];\r\n      removeTeacher(draggedCellKey.lecture.LectureID, draggedCellKey.batch.BatchID, teacherAssignment[keyInside].FacultyID);\r\n    }\r\n    const stateTeacherAssignment = teacherAssignment;\r\n    const key = lecture.LectureID + '_' + batch.BatchID;\r\n    teacherAssignment[key] = selectedTeacher;\r\n    setTeacherAssignment({ ...stateTeacherAssignment });\r\n    updateLectureListOnDrop(lecture, batch, selectedTeacher);\r\n    checkDuplicateTeacherInRowOnDrop(lecture.LectureID, selectedTeacher.FacultyID);\r\n    updateTeacherCounterOnDrop(selectedTeacher, lecture.LectureID);\r\n    setDraggedTeacher({});\r\n    setDraggedCellKey(null);\r\n  }\r\n\r\n  const removeTeacher = (lectureId, batchId, teacherId) => {\r\n    // Remove from teacher assignment\r\n    const key = lectureId + '_' + batchId;\r\n    const stateTeacherAssignment = teacherAssignment;\r\n    delete stateTeacherAssignment[key];\r\n    setTeacherAssignment({ ...stateTeacherAssignment });\r\n\r\n    // Remove from lecture list\r\n    const stateLectureList = lectureList;\r\n    const index = stateLectureList?.find(row => row.batch?.BatchID === batchId && row.lecture?.LectureID === lectureId);\r\n    if (index >= 0) {\r\n      stateLectureList.splice(index, 1);\r\n      setLectureList([...stateLectureList]);\r\n    }\r\n    // To make not blink when teacher itself dragged from one place to other in same row\r\n    const stateLectureTeacherCounter = lectureTeacherCounter;\r\n    const lectureTeacherKey = lectureId + '_' + teacherId;\r\n    if (stateLectureTeacherCounter[lectureTeacherKey] > 1) {\r\n      stateLectureTeacherCounter[lectureTeacherKey] -= 1;\r\n    } else {\r\n      delete stateLectureTeacherCounter[lectureTeacherKey];\r\n    }\r\n    setLectureTeacherCounter(stateLectureTeacherCounter);\r\n\r\n    const keyLtId = lectureId + '_' + teacherId;\r\n    if (lectureTeacherCounter && lectureTeacherCounter[keyLtId] && lectureTeacherCounter[keyLtId] >= 1) {\r\n      return;\r\n    }\r\n\r\n    // Decrease one from teacher counter\r\n    const stateTeacherCounter = teacherCounter;\r\n    stateTeacherCounter[teacherId] -= 1;\r\n    if (stateTeacherCounter[teacherId] <= 0) {\r\n      delete stateTeacherCounter[teacherId];\r\n    }\r\n    setTeacherCounter(stateTeacherCounter);\r\n\r\n\r\n  }\r\n\r\n  // Called to provide class name if true set classname blink else empty\r\n  // return true if same teacher counter greater than one with respect to lectureId\r\n  const isTeacherDuplicateInLecture = (lectureId, teacherId) => {\r\n    if (!lectureId || !teacherId) {\r\n      return false;\r\n    }\r\n    const key = lectureId + '_' + teacherId;\r\n    console.log(key);\r\n    return lectureTeacherCounter[key] > 1;\r\n  };\r\n\r\n  const handleTableCellDragStart = (e, lecture, batch) => {\r\n    setDraggedCellKey({\r\n      lecture, batch\r\n    });\r\n  };\r\n\r\n  const onDragEnd = (e) => {\r\n    setDraggedTeacher({});\r\n  }\r\n\r\n  /*********************************************This below methods are added by jitendra from TimeTable.js***********************************/\r\n  const generateUID = () => {\r\n    // I generate the UID from two parts here \r\n    // to ensure the random number provide enough bits.\r\n    var firstPart = (Math.random() * 46656) | 0;\r\n    var secondPart = (Math.random() * 46656) | 0;\r\n    firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\r\n    secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\r\n    return firstPart + secondPart;\r\n  }\r\n\r\n  const convertToImage = async () => {\r\n    const canvas = await html2canvas(divRef.current);\r\n    const imgData = canvas.toDataURL();\r\n    /*converting page64 url got as imgData into file Object by using blob below*/\r\n    const byteString = atob(imgData.split(',')[1]);\r\n    const mimeString = imgData.split(',')[0].split(':')[1].split(';')[0];\r\n    const ia = new Uint8Array(byteString.length);\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n    }\r\n    const blob = new Blob([ia], { type: mimeString });\r\n    const imageName = generateUID();\r\n    const file = new File([blob], imageName + \".jpg\");\r\n    const fileName = imageName + \".jpg\";\r\n    const result = await new UploadApi().uplaodFile(file);\r\n    if (result === \"Success\") {\r\n      const data = await new UploadApi().getUploadedFile();\r\n      if (data.Object?.length > 0) {\r\n        const fileDetail = data.Object.reverse().find(obj => { return obj.Title?.indexOf(imageName) >= 0 });\r\n        // for (let i = 0; i < numberList.length; i++) {       THIS IS USED WHEN GETWATTSAPPAPI WILL USED SO DONT DELETE THIS LINES\r\n        try {\r\n          // const cell = numberList[i];\r\n          /*CHECK THE DETAILS OF THIS GETWATTSAPPAPI IN UPLOAD.API.JS FILE IN API FOLDER*/\r\n          // await new UploadApi().getWattsappApi(fileDetail.LongURL, \"time table\", cell, fileName);\r\n          await new UploadApi().getWattsappGroupApiOthers(fileDetail.LongURL, \"time table\", fileName);\r\n          // await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\r\n        } catch (e) {\r\n          // continue;\r\n          console.log(\"error\")\r\n        }\r\n        try {\r\n          await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\r\n        } catch (e) {\r\n          console.log(\"error\")\r\n        }\r\n      }\r\n    }\r\n    if (!timeOfAlert) {\r\n      setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\r\n        Time table image sent successfully\r\n      </UncontrolledAlert>);\r\n      setTimeout(() => {\r\n        setTimeOfAlert(false);\r\n        setShowAlert(\"\");\r\n      }, 3000);\r\n    };\r\n\r\n  }\r\n\r\n  const onChangeFromDate = (e) => {\r\n    setFromDate(e.target.value);\r\n  }\r\n\r\n  const onChangeToDate = (e) => {\r\n    setToDate(e.target.value);\r\n  }\r\n\r\n  const onAddBatch = () => {\r\n    // setAddBatch(<AddBatch batchList={batchList} />)\r\n    setShowAddBatchModal(true);\r\n  }\r\n\r\n  const onDeleteBatch = (batchID) => {\r\n    const confirmDelete = window.confirm('Are you sure you want to delete this batch?');\r\n    if (confirmDelete) {\r\n      const updatedBatches = batchList.filter((each) => each.BatchID !== batchID);\r\n      setBatchList(updatedBatches);\r\n    }\r\n  };\r\n\r\n  const onAddTeacher = () => {\r\n    setShowAddTeacherModal(true);\r\n  }\r\n\r\n  const onDeleteTeacher = (facultyID) => {\r\n    const confirmDelete = window.confirm('Are you sure you want to delete this Faculty?');\r\n    if (confirmDelete) {\r\n      const updatedTeachers = teacherList.filter((each) => each.FacultyID !== facultyID);\r\n      setTeacherList(updatedTeachers);\r\n    };\r\n  }\r\n\r\n  const saveTable = async () => {\r\n    const sentBatchID = batchList.map(item => item.BatchID)\r\n    const body = {\r\n      TimeTableID: 0,\r\n      Description: \"time table save\",\r\n      DateType: !!toDate ? \"multiple\" : \"single\",\r\n      FromDate: fromDate,\r\n      ToDate: toDate,\r\n      ShiftID: 1,\r\n      SessionID: 6,\r\n      Session: \"2023-24\",\r\n      BatchID: sentBatchID,\r\n      LectureID: [\r\n        1, 2, 3, 4, 5, 6, 7, 8\r\n      ],\r\n      IsActive: true,\r\n      CreatedByUserID: 1,\r\n      CreatedOnDate: new Date(),\r\n      LectureList: lectureList\r\n    };\r\n\r\n    const result = await new TtApi().addUpdateTt(body);\r\n    if (result === 'Success') {\r\n      if (!timeOfAlert) {\r\n        setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\r\n          time table saved successfully\r\n        </UncontrolledAlert>);\r\n        setTimeout(() => {\r\n          setTimeOfAlert(false);\r\n          setShowAlert(\"\");\r\n        }, 3000);\r\n      };\r\n\r\n    } else {\r\n      if (!timeOfAlert) {\r\n        setShowAlert(<UncontrolledAlert color=\"danger\" fade={false}>\r\n          {result?.ExceptionMessage ?? 'An error has occurred.'}\r\n        </UncontrolledAlert>);\r\n        setTimeout(() => {\r\n          setTimeOfAlert(false);\r\n          setShowAlert(\"\");\r\n        }, 3000);\r\n      };\r\n    }\r\n  };\r\n\r\n  const clearAll = (key) => {\r\n    // const key = lectureId + '_' + batchId\r\n    const stateTeacherAssignment = teacherAssignment;\r\n    delete stateTeacherAssignment[key];\r\n    setTeacherAssignment({ stateTeacherAssignment });\r\n  }\r\n\r\n  /**************************************** Template Section *****************************************/\r\n  return (\r\n    <>\r\n      <div className=\"bg-container\">\r\n        <Row>\r\n          <Col>\r\n            {showAlert}\r\n            {\r\n              duplicateTeacherDetectedInRow ? <Alert color=\"warning\">\r\n                Two same teachers found in the same row\r\n              </Alert> : <></>\r\n            }\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* <Row>\r\n          <Col>\r\n            <h1 className='heading-style'>CLASS SCHEDULE</h1>\r\n          </Col>\r\n        </Row> */}\r\n\r\n        <Row>\r\n          <Col>\r\n            <Form>\r\n              <div>\r\n                <Row>\r\n                  <div className=\"col-sm-12 col-md-3 label-date-allignment\">\r\n                    <span className=\"date-label-style\">From<span style={{ color: \"red\" }}>*</span>:&nbsp;&nbsp;</span>\r\n                    <Input\r\n                      id=\"fromDate\"\r\n                      name=\"date\"\r\n                      type=\"date\"\r\n                      defaultValue={fromDate}\r\n                      onChange={(e) => { onChangeFromDate(e) }}\r\n                      className='input-size'\r\n                      min={new Date().toISOString().split('T')[0]}\r\n                      placeholder='From Date'\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-sm-12 col-md-3 label-date-allignment\">\r\n                    <span className=\"date-label-style\">To:&nbsp;&nbsp;</span>\r\n                    <Input\r\n                      id=\"toDate\"\r\n                      name=\"date\"\r\n                      type=\"date\"\r\n                      defaultValue={toDate}\r\n                      onChange={(e) => { onChangeToDate(e) }}\r\n                      className='input-size'\r\n                      min={new Date().toISOString().split('T')[0]}\r\n                    />\r\n                  </div>\r\n                  <div className=\"d-lg-none\">\r\n                    <br></br>\r\n                    <div className=\"button-group\">\r\n                      <Button className=\"btn\" color=\"info\" onClick={saveTable} disabled={fromDate === ''}>\r\n                        Save\r\n                      </Button>\r\n                      <Button className=\"btn\" color=\"info\" onClick={convertToImage}>\r\n                        Post\r\n                      </Button>\r\n                      <ButtonGroup >\r\n                        <UncontrolledDropdown>\r\n                          <DropdownToggle color=\"info\" caret>\r\n                            More Actions\r\n                          </DropdownToggle>\r\n                          <DropdownMenu>\r\n                            <DropdownItem onClick={onAddBatch}>\r\n                              Add Batches\r\n                            </DropdownItem>\r\n                            <DropdownItem divider />\r\n                            <DropdownItem onClick={onAddTeacher}>\r\n                              Add Teachers\r\n                            </DropdownItem>\r\n                            <DropdownItem divider />\r\n                            <DropdownItem onClick={clearAll}>\r\n                              Clear ALL\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </ButtonGroup>\r\n                    </div>\r\n                    <br></br>\r\n                  </div>\r\n                  <div className=\"d-none d-md-block col-md-6\">\r\n                    <div className=\"button-group\">\r\n                      <Button className=\"btn \" color=\"info\" onClick={onAddBatch}>\r\n                        Add Batches\r\n                      </Button>\r\n                      <Button className=\"btn\" color=\"info\" onClick={onAddTeacher}>\r\n                        Add Teachers\r\n                      </Button>\r\n                      <Button className=\"btn\" color=\"info\" onClick={saveTable} disabled={fromDate === ''}>\r\n                        Save\r\n                      </Button>\r\n                      <Button className=\"btn\" color=\"info\" onClick={convertToImage}>\r\n                        Post\r\n                      </Button>\r\n                      <Button className=\"btn\" color=\"info\" onClick={clearAll}>\r\n                        Clear ALL\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Row>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col>\r\n            <div>\r\n              {showAddBatchModal && <AddBatch showModal={showAddBatchModal} setShowModal={setShowAddBatchModal} batchList={batchList} />}\r\n              {showAddTeacherModal && <AddTeacher showModal={showAddTeacherModal} setShowModal={setShowAddTeacherModal} teacherList={teacherList} />}\r\n              <div ref={divRef} className='table-container'>\r\n                <table className='table-style'>\r\n                  <tbody>\r\n                    <div className=\"for-time\">\r\n                      <tr>\r\n                        <td className='F-style time-style'>Time</td>\r\n                        {batchList.map((each) => {\r\n                          return (\r\n                            <td className='F-style batch-style' key={each.BatchID}>{each.Batch}\r\n                              <button className=\"delete-style\" onClick={() => onDeleteBatch(each.BatchID)}><RxCross2 /></button>\r\n                            </td>\r\n                          )\r\n                        })}\r\n                      </tr>\r\n                    </div>\r\n                    <tr >\r\n                      {time.map((t) => {\r\n                        return (\r\n\r\n                          <div >\r\n                            <td className='F-style time-style'>{t.Time_From}-{t.Time_To}</td>\r\n                            {batchList.map((b) => {\r\n                              const key = t.LectureID + '_' + b.BatchID\r\n                              return (\r\n                                <td\r\n                                  draggable={!!teacherAssignment[key]?.Faculty}\r\n                                  onDragOver={allowDrop}\r\n                                  onDrop={(e) => handleDrop(e, t, b)}\r\n                                  onDragStart={(e) => handleTableCellDragStart(e, t, b)}\r\n                                  key={key}\r\n                                  id={key}\r\n                                  className={`each-block ${isTeacherDuplicateInLecture(t.LectureID, teacherAssignment[key]?.FacultyID ?? null) ? \"blink\" : \"\"}`}\r\n                                  style={{ backgroundColor: teacherAssignment[key]?.color }}\r\n                                >\r\n                                  <div className={`teacname-cross-style ${teacherAssignment[key]?.className} `}>\r\n                                    <div className=\"teacher-name\" >\r\n                                      {teacherAssignment[key]?.Faculty}\r\n                                    </div>\r\n                                    <div className=\"cross-btn-container\">\r\n                                      {teacherAssignment[key]?.Faculty ? (\r\n                                        <button\r\n                                          className=\"cross-style\"\r\n                                          onClick={() => removeTeacher(t.LectureID, b.BatchID, teacherAssignment[key].FacultyID)}\r\n                                        >\r\n                                          <RxCross2 />\r\n                                        </button>\r\n                                      ) : <></>}\r\n                                    </div>\r\n                                  </div>\r\n                                </td>\r\n                              )\r\n                            })}\r\n                          </div>\r\n                        )\r\n                      })}\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col>\r\n            <div className='teacher-container'>\r\n              {teacherList.map((teacher, index) => {\r\n                const { FacultyID, Faculty } = teacher;\r\n                return (\r\n                  <div\r\n                    style={{ backgroundColor: teacher.color }}\r\n                    key={FacultyID}\r\n                    className=\"teacher-item\"\r\n                    draggable={true}\r\n                    onDragStart={(e) => dragStart(e, teacher)}\r\n                    onDragEnd={(e) => onDragEnd(e)}\r\n                  >\r\n                    <span>{Faculty}</span>\r\n                    {teacherCounter[FacultyID] > 0 && (\r\n                      <Badge className=\"counter-item\">\r\n                        {teacherCounter[FacultyID]}\r\n                      </Badge>\r\n                    )}\r\n                    <span onClick={() => onDeleteTeacher(teacher.FacultyID)} className=\"remove-icon\" color='danger'>\r\n                      <RxCross2/>\r\n                    </span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default TimeTable;"],"sourceRoot":""}