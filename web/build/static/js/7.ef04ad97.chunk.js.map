{"version":3,"sources":["pages/TTPages/List/List.js","const/url.js","pages/TTPages/TeacherForm/TeacherForm.js","api/tt.api.js","pages/TTPages/AddBatch/AddBatch.js","api/upload.api.js","pages/TTPages/TimeTable2/TimeTable2.js"],"names":["teachers_list","FacultyID","Faculty","subject","batch","BatchID","Batch","CourseID","time","LectureID","Lecture","Time_From","Time_To","BASE_URL","URL","UPLOAD_FILE","GET_UPLOAD_FILE_URL","GET_SAVE_TIMETABLE_URL","GET_ALL_TT","GET_EDIT_TT","REMOVE_TT","AddTeacher","_ref","showModal","setShowModal","teacherList","useEffect","fetchApiData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_context","prev","next","fetch","sent","json","setApiData","t0","stop","apply","arguments","_useState","useState","_useState2","_slicedToArray","setFaculties","_useState3","_useState4","apiData","_useState5","_useState6","checkedItems","setCheckedItems","_useState7","_useState8","showAlert","setShowAlert","_useState9","_useState10","timeOfAlert","setTimeOfAlert","_apiData$Object","Object","responseObject","_responseObject$Facul","FacultyList","_responseObject$UserL","UserList","facultyNameMap","forEach","user","UserID","UserName","handleCheckboxChange","event","_event$target","target","name","checked","_objectSpread","_defineProperty","updatedFacultyList","map","faculty","closeModal","_jsx","children","_jsxs","Modal","isOpen","toggle","style","maxWidth","ModalHeader","ModalBody","className","maxHeight","overflowY","listStyle","facultyUser","bgColor","find","facultyName","type","onChange","ModalFooter","Button","color","onClick","newTeachersList","_loop","facultyID","selectedItem","parseInt","some","teacher","push","UncontrolledAlert","fade","setTimeout","TtApi","_createClass","_classCallCheck","getTtList","res","method","abrupt","Error","message","options","getEditTt","_callee2","fromDateEdit","myHeaders","_context2","Headers","append","headers","body","JSON","stringify","FromDate","replaceAll","_x","addUpdateTt","_ref3","_callee3","ttRequestBody","_context3","_x2","removeTtById","_ref4","_callee4","timeTableID","_context4","_x3","AddBatch","batchList","setBatches","_responseObject$Batch","newBatches","batchID","UploadApi","getWattsappApi","url","cell","fileName","console","log","URLSearchParams","number","media_url","filename","instance_id","access_token","_x4","getWattsappGroupApiTeachers","group_id","_x5","_x6","_x7","getWattsappGroupApiOthers","_x8","_x9","_x10","uplaodFile","file","formData","FormData","_x11","getUploadedFile","_callee5","_context5","TimeTable2","tableWidth","setTableWidth","draggedCellKey","setDraggedCellKey","duplicateElements","setDuplicateElements","duplicateDetected","setDuplicateDetected","setTeacher","_useState11","_useState12","teacherCounter","setTeacherCounter","_useState13","_useState14","teacherAssignment","setTeacherAssignment","_useState15","_useState16","lectureList","setLectureList","_useState17","_useState18","addBatch","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","setImage","_useState25","_useState26","showAddBatchModal","setShowAddBatchModal","_useState27","_useState28","showAddTeacherModal","setShowAddTeacherModal","_useState29","_useState30","fromDate","setFromDate","_useState31","_useState32","toDate","setToDate","tableElement","document","querySelector","offsetWidth","alert","divRef","useRef","generateUID","firstPart","Math","random","secondPart","toString","slice","convertToImage","canvas","imgData","byteString","mimeString","ia","i","blob","imageName","_data$Object","data","fileDetail","html2canvas","current","toDataURL","atob","split","Uint8Array","length","charCodeAt","Blob","File","reverse","obj","_obj$Title","Title","indexOf","LongURL","t1","dragItem","handleDrop","e","key","_objectSpread2","sourceAssignment","targetAssignment","teacher_assignment","teacherCount","rowId","teacherInCurrentRow","cellKey","startsWith","duplicates","reduce","acc","item","newDuplicateKeys","values","filter","keys","flat","includes","checkForDuplicateInRow","batchId","lectureId","teacherName","batchVo","it","lectureVo","teacherVo","lecture","Subject","IsActive","CreatedByUserID","CreatedOnDate","lecture_list","_toConsumableArray","allowDrop","ev","t","classList","contains","parentNode","innerText","trim","preventDefault","saveTable","saveTt","_Fragment","ref","Form","FormGroup","Input","id","value","onChangeFromDate","onChangeToDate","each","b","_teacherAssignment$ke","_teacherAssignment$ke2","_teacherAssignment$ke3","_teacherAssignment$ke4","draggable","onDragOver","onDrop","onDragStart","handleTableCellDragStart","concat","backgroundColor","removeTeacher","RxCross2","index","teacherInfo"],"mappings":"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","file":"static/js/7.ef04ad97.chunk.js","sourcesContent":["import {v4 as uuidv4} from \"uuid\"\r\nexport const teachers_list = [\r\n        {\r\n            FacultyID: 22,\r\n            Faculty: \"MYK\",\r\n            subject: \"Physics\"\r\n        },\r\n        \r\n        {\r\n            FacultyID: 3038,\r\n            Faculty: \"KPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 2029,\r\n            Faculty: \"MRS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 3051,\r\n            Faculty: \"MAS\",\r\n            subject:\"Physics\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 3050,\r\n            Faculty: \"RSS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 25,\r\n            Faculty: \"NMS\",\r\n            subject:\"Biology\"\r\n        },\r\n        {\r\n            FacultyID: 3037,\r\n            Faculty: \"HDS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3032,\r\n            Faculty: \"MNM\",\r\n            subject: \"Biology\"\r\n        },\r\n        \r\n        {\r\n            FacultyID: 1023,\r\n            Faculty: \"SJ\",\r\n            subject:\"Biology\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 1025,\r\n            Faculty: \"AJ\",\r\n            subject:\"Biology\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 1026,\r\n            Faculty: \"DMPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n\r\n        \r\n       \r\n        \r\n        {\r\n            FacultyID: 1027,\r\n            Faculty: \"PSJ\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 3033,\r\n            Faculty: \"YBS\",\r\n            subject:\"Biology\"\r\n        },\r\n        {\r\n            FacultyID: 3030,\r\n            Faculty: \"AKS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 2028,\r\n            Faculty: \"AMS\",\r\n            subject:\"Maths\"\r\n        },\r\n        {\r\n            FacultyID: 3031,\r\n            Faculty: \"NDS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 3052,\r\n            Faculty: \"HWS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 1029,\r\n            Faculty: \"JRS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3053,\r\n            Faculty: \"HTS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3054,\r\n            Faculty: \"NPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3055,\r\n            Faculty: \"SKS\",\r\n            subject:\"Maths\"\r\n        },\r\n    ]; \r\n    \r\n\r\nexport const batch= [\r\n    {\r\n        BatchID: 1,\r\n        Batch: \"A1\",\r\n        CourseID: 3\r\n    },\r\n    {\r\n        BatchID: 2,\r\n        Batch: \"B1\",\r\n        CourseID: 2\r\n    },\r\n    {\r\n        BatchID: 3,\r\n        Batch: \"C1\",\r\n        CourseID: 1\r\n    },\r\n    {\r\n        BatchID: 6,\r\n        Batch: \"A2\",\r\n        CourseID: 3\r\n    },\r\n    \r\n    {\r\n        BatchID: 7,\r\n        Batch: \"A4\",\r\n        CourseID: 3\r\n    },\r\n    {\r\n        BatchID: 10,\r\n        Batch: \"A3\",\r\n        CourseID: 3\r\n    },\r\n    \r\n    {\r\n        BatchID: 15,\r\n        Batch: \"C2\",\r\n        CourseID: 1\r\n    },\r\n    \r\n    \r\n    //MORE BATCHES ADDED WITH A FAKE BATCHID AND FAKE COURSEID NEED TO CHANGE LATER\r\n\r\n    {\r\n        BatchID: 20,\r\n        Batch: \"JO1\",\r\n        CourseID: 13\r\n    },\r\n    {\r\n        BatchID: 22,\r\n        Batch: \"JXII-1\",\r\n        CourseID: 12\r\n    },\r\n    {\r\n        BatchID: 3042,\r\n        Batch: \"JXI-1\",\r\n        CourseID: 11\r\n    },\r\n    {\r\n        BatchID: 3049,\r\n        Batch: \"B2\",\r\n        CourseID: 2\r\n    },\r\n    {\r\n        BatchID: 3061,\r\n        Batch: \"JXI-2\",\r\n        CourseID: 11\r\n    },\r\n    {\r\n        BatchID: 3078,\r\n        Batch: \"JEE adv\",\r\n        CourseID: 13\r\n    },\r\n    \r\n    {\r\n        BatchID: 3079,\r\n        Batch: \"JEE XL\",\r\n        CourseID: 1025\r\n    }\r\n    \r\n]\r\n\r\n\r\nexport const time= [\r\n    {\r\n        LectureID: 1,\r\n        Lecture: \"L1\",\r\n        Time_From: \"08:30 AM\",\r\n        Time_To: \"09:45 AM\"\r\n    },\r\n    {\r\n        LectureID: 2,\r\n        Lecture: \"L2\",\r\n        Time_From: \"09:50 AM\",\r\n        Time_To: \"11:05 AM\"\r\n    },\r\n    {\r\n        LectureID: 3,\r\n        Lecture: \"L3\",\r\n        Time_From: \"11:20 AM\",\r\n        Time_To: \"12:35 PM\"\r\n    },\r\n    {\r\n        LectureID: 4,\r\n        Lecture: \"L4\",\r\n        Time_From: \"12:40 PM\",\r\n        Time_To: \"01:55 PM\"\r\n    },\r\n    {\r\n        LectureID: 5,\r\n        Lecture: \"L5\",\r\n        Time_From: \"02:00 PM\",\r\n        Time_To: \"03:15 PM\"\r\n    },\r\n    {\r\n        LectureID: 6,\r\n        Lecture: \"L6\",\r\n        Time_From: \"03:20 PM\",\r\n        Time_To: \"04:35 PM\"\r\n    },\r\n    {\r\n        LectureID: 7,\r\n        Lecture: \"L7\",\r\n        Time_From: \"04:50 PM\",\r\n        Time_To: \"06:05 PM\"\r\n    },\r\n    {\r\n        LectureID: 8,\r\n        Lecture: \"L8\",\r\n        Time_From: \"06:15 PM\",\r\n        Time_To: \"07:30 PM\"\r\n    }\r\n]\r\n","const ENV_URL = 'https://api.aayamcareerinstitute.co.in/api'; // producation fn\r\nconst DEV_URL = 'http://localhost:5001'; // producation fn\r\nconst BASE_URL= ENV_URL\r\n\r\n\r\n\r\nexport const URL = {\r\n    UPLOAD_FILE: BASE_URL + '/UploadFilesAttachment',\r\n    GET_UPLOAD_FILE_URL: BASE_URL + '/GetFiles', \r\n    GET_SAVE_TIMETABLE_URL: BASE_URL+ '/AddUpdateTimeTable',\r\n    GET_ALL_TT: BASE_URL + '/GetTimeTable', \r\n\r\n    GET_EDIT_TT: BASE_URL + '/GetTimeTableByDate',\r\n    REMOVE_TT: BASE_URL + '/DeleteTimeTable',\r\n\r\n\r\n\r\n\r\n};  \r\n","import React, { useState, useEffect } from 'react';\r\nimport { batch } from '../List/List';\r\nimport { teachers_list } from '../List/List';\r\n// import { teachers_list } from '../../../const/teacherList';\r\n// import { batch } from '../../../const/batchList';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledAlert } from 'reactstrap';\r\nimport \"./TeacherForm.css\";\r\n\r\nconst AddTeacher = ({ showModal, setShowModal, teacherList }) => {\r\n\r\n  /************************************Use Effect****************************************** */\r\n  useEffect(() => {\r\n    if (showModal) {\r\n      const fetchApiData = async () => {\r\n        try {\r\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\r\n          const result = await response.json();\r\n          setApiData(result);\r\n        } catch (error) {\r\n        }\r\n      };\r\n\r\n      fetchApiData();\r\n    }\r\n  }, [showModal]);\r\n\r\n  /***********************Use State***************************************************** */\r\n  const [faculties, setFaculties] = useState(teacherList);\r\n  // const [batches, setBatches] = useState(JSON.parse(localStorage.getItem('batches')) || batch);\r\n  const [apiData, setApiData] = useState({});\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n  const [showAlert, setShowAlert] = useState(\"\");\r\n  const [timeOfAlert, setTimeOfAlert] = useState(false);\r\n\r\n  /*************************other consts*************************************************** */\r\n  const { Object: responseObject = {} } = apiData;\r\n  const { Batch = [], FacultyList = [], UserList = [] } = responseObject;\r\n  const facultyNameMap = {};\r\n\r\n  UserList.forEach((user) => {\r\n    facultyNameMap[user.UserID] = user.UserName;\r\n  });\r\n  /****************************************methods******************************************* */\r\n  const handleCheckboxChange = (event) => {\r\n    const { name, checked } = event.target;\r\n    setCheckedItems({\r\n      ...checkedItems,\r\n      [name]: checked,\r\n    });\r\n  };\r\n\r\n  const updatedFacultyList = FacultyList.map((faculty) => ({\r\n    ...faculty,\r\n    Faculty: facultyNameMap[faculty.FacultyID] || faculty.Faculty,\r\n  }));\r\n\r\n  const addToFaculty = () => {\r\n    const newTeachersList = teacherList;\r\n\r\n    for (const facultyID in checkedItems) {\r\n      if (checkedItems[facultyID]) {\r\n        const selectedItem = updatedFacultyList.find(\r\n          (faculty) => faculty.FacultyID === parseInt(facultyID)\r\n        );\r\n\r\n        if (selectedItem) {\r\n          const facultyUser = UserList.find(\r\n            (user) => user.UserID === selectedItem.FacultyID\r\n          );\r\n          const facultyName = facultyUser ? facultyUser.UserName : selectedItem.Faculty;\r\n\r\n          const isTeacherAlreadyAdded = newTeachersList.some(\r\n            (teacher) => teacher.FacultyID === selectedItem.FacultyID\r\n          );\r\n\r\n          if (!isTeacherAlreadyAdded) {\r\n            newTeachersList.push({\r\n              FacultyID: selectedItem.FacultyID,\r\n              Faculty: facultyName,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setFaculties(newTeachersList);\r\n    if (!timeOfAlert) {\r\n      setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\r\n        Teachers added successfully\r\n      </UncontrolledAlert>);\r\n      setTimeout(() => {\r\n        setTimeOfAlert(false);\r\n        setShowAlert(\"\");\r\n      }, 3000);\r\n    };\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  /**********************************************Template to return******************************** */\r\n  return (\r\n    <div>\r\n      <Modal isOpen={showModal} toggle={closeModal} style={{ maxWidth: '320px' }}>\r\n        <ModalHeader toggle={closeModal}>Select Teachers from the list</ModalHeader>\r\n        <ModalBody>\r\n          {showAlert}\r\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\r\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\r\n              {updatedFacultyList.map((faculty) => {\r\n                const { FacultyID, bgColor, className } = faculty;\r\n                const facultyUser = UserList.find((user) => user.UserID === FacultyID);\r\n                const facultyName = facultyUser ? facultyUser.UserName : faculty.Faculty;\r\n                return (\r\n                  <li key={faculty.FacultyID}>\r\n                    <div className=\"add-faculty-style\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        name={faculty.FacultyID}\r\n                        checked={checkedItems[faculty.FacultyID] || false}\r\n                        onChange={handleCheckboxChange}\r\n                        className=\"addfaculty-checkbox-style\"\r\n                      />\r\n                      {facultyName}\r\n                    </div>\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={addToFaculty}>Add</Button>{' '}\r\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default AddTeacher;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { URL } from '../const/url';\r\n\r\nexport default class TtApi {\r\n    getTtList = async () => {\r\n        try {\r\n            const res = await fetch(URL.GET_ALL_TT, {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getEditTt = async (fromDateEdit) => {\r\n        try {\r\n            // const formData = new FormData();\r\n            // formData.append('file', file, file.name);\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.GET_EDIT_TT, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: JSON.stringify({\r\n                    FromDate: fromDateEdit.replaceAll(\"-\", \"/\"),\r\n                })\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    \r\n    addUpdateTt = async (ttRequestBody) => {\r\n        try {\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.GET_SAVE_TIMETABLE_URL, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: JSON.stringify(ttRequestBody)\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    removeTtById = async (timeTableID) => {\r\n        try {\r\n            // const formData = new FormData();\r\n            // formData.append('file', file, file.name);\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.REMOVE_TT, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: timeTableID\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n}","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { batch } from '../List/List';\r\n// import { batch } from '../../../const/batchList';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledAlert } from 'reactstrap';\r\nimport \"./AddBatch.css\"\r\n\r\nconst AddBatch = ({ showModal, setShowModal, batchList }) => {\r\n  /******************************************Use Effect********************************************** */\r\n  useEffect(() => {\r\n    if (showModal) {\r\n      const fetchApiData = async () => {\r\n        try {\r\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\r\n          const result = await response.json();\r\n          setApiData(result);\r\n        } catch (error) {\r\n        }\r\n      };\r\n      fetchApiData();\r\n    }\r\n  }, [showModal]);\r\n  /********************************************Use State****************************************** */\r\n  const [batches, setBatches] = useState(batchList);\r\n  const [apiData, setApiData] = useState({});\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n  const [showAlert, setShowAlert] = useState(\"\");\r\n  const [timeOfAlert, setTimeOfAlert] = useState(false);\r\n\r\n\r\n  /*****************************Other consts******************************************************** */\r\n  const { Object: responseObject = {} } = apiData;\r\n  const { Batch = [] } = responseObject;\r\n\r\n  /***************************************Methods*************************************************** */\r\n  const handleCheckboxChange = (event) => {\r\n    const { name, checked } = event.target;\r\n    setCheckedItems({\r\n      ...checkedItems,\r\n      [name]: checked,\r\n    });\r\n  };\r\n\r\n  const addToBatch = () => {\r\n    const newBatches = batchList;\r\n    for (const batchID in checkedItems) {\r\n      if (checkedItems[batchID]) {\r\n        const selectedItem = Batch.find((batch) => batch.BatchID === parseInt(batchID));\r\n        if (selectedItem && !newBatches.find((batch) => batch.BatchID === selectedItem.BatchID)) {\r\n          newBatches.push({\r\n            BatchID: selectedItem.BatchID,\r\n            Batch: selectedItem.Batch,\r\n            CourseID: selectedItem.CourseID,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    setBatches(newBatches);\r\n    if (!timeOfAlert) {\r\n      setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\r\n        Batches added successfully\r\n      </UncontrolledAlert>);\r\n\r\n      setTimeout(() => {\r\n        setTimeOfAlert(false);\r\n        setShowAlert(\"\");\r\n      }, 3000);\r\n\r\n    };\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  /***************************Template to return******************************************************* */\r\n  return (\r\n    <div>\r\n      <Modal isOpen={showModal} toggle={closeModal} style={{ maxWidth: '320px' }}>\r\n        <ModalHeader toggle={closeModal}>Select Batches from the list</ModalHeader>\r\n        <ModalBody>\r\n          {showAlert}\r\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\r\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\r\n              {Batch.map((batch) => (\r\n                <li key={batch.BatchID}>\r\n                  <div className=\"add-batch-style\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name={batch.BatchID}\r\n                      checked={checkedItems[batch.BatchID] || false}\r\n                      onChange={handleCheckboxChange}\r\n                      className=\"addbatch-checkbox-style\"\r\n                    />\r\n                    {batch.Batch}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={addToBatch}>Add</Button>{' '}\r\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default AddBatch;\r\n\r\n","import { URL } from '../const/url';\r\n\r\nexport default class UploadApi {\r\n    // getUserWalletBalance = async (userId) => {\r\n    //     try {\r\n    //         GlobalEmitterService.emit(true);\r\n    //         const token = `Bearer ${AuthService.getToken()}`;\r\n    //         const res = await fetch(URL.USER_WALLET_BALANCE + '?' + new URLSearchParams({\r\n    //             userId\r\n    //         }), {\r\n    //             method: 'GET',\r\n    //             headers: { 'Content-Type': 'application/json', 'Authorization': token },\r\n    //         });\r\n    //         const result = await res.json();\r\n    //         GlobalEmitterService.emit(false);\r\n    //         return result;\r\n    //     } catch (e) {\r\n    //         GlobalEmitterService.emit(false);\r\n    //         throw new Error(e.message, e.options);\r\n    //     }\r\n    // }\r\n\r\n\r\n    getWattsappApi = async (url, message, cell, fileName) => {\r\n        try {\r\n            console.log(\"url\", url);\r\n            console.log(\"mesage\", message);\r\n            console.log(\"cel\", cell);\r\n            console.log(\"file\", fileName);\r\n            // https://ziper.io/api/send.php?number=917898118503&type=media&message=test%20message&media_url=https://api.aayamcareerinstitute.co.in//Uploads/Files/File_3431223213168.pdf&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/send.php\" + '?' + new URLSearchParams({\r\n                number: cell,\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"647B3C9AA8D0A\",\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n\r\n    getWattsappGroupApiTeachers = async (url, message, fileName) => {\r\n        try {\r\n            console.log(\"url\", url);\r\n            console.log(\"mesage\", message);\r\n            console.log(\"file\", fileName);\r\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\r\n                group_id: \"919977116612-1595572006@g.us\",\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"647B3C9AA8D0A\",\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getWattsappGroupApiOthers = async (url, message, fileName) => {\r\n        try {\r\n            console.log(\"url\", url);\r\n            console.log(\"mesage\", message);\r\n            console.log(\"file\", fileName);\r\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\r\n                group_id: \"919826362001-1628170376@g.us\",\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"647B3C9AA8D0A\",\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    uplaodFile = async (file) => {\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('file', file, file.name);\r\n            const res = await fetch(URL.UPLOAD_FILE, {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getUploadedFile = async () => {\r\n        try {\r\n            const res = await fetch(URL.GET_UPLOAD_FILE_URL, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({})\r\n\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport { batch, teachers_list, time } from '../List/List';\r\n// import { teachers_list } from '../../../const/teacherList';\r\n// import { batch } from '../../../const/batchList';\r\n// import { time } from '../../../const/time';\r\nimport \"./TimeTable2.scss\";\r\n// import { RiDeleteBin2Line } from \"react-icons/ri\";\r\n// import htmlToCanvas from 'html-to-canvas';\r\nimport html2canvas from 'html2canvas';\r\nimport { Card, Row, Col, CardTitle, CardBody, Button, Form, FormGroup, Label, Input, FormText, } from \"reactstrap\";\r\nimport AddBatch from '../AddBatch/AddBatch';\r\nimport UploadApi from '../../../api/upload.api';\r\nimport AddTeacher from '../TeacherForm/TeacherForm';\r\nimport TtApi from '../../../api/tt.api.js';\r\n\r\nconst TimeTable2 = () => {\r\n  /**************************************** Use Effect Section ************************************/\r\n  /**************************************** State Section *****************************************/\r\n  const [tableWidth, setTableWidth] = useState(0);\r\n  const [draggedCellKey, setDraggedCellKey] = useState(null);\r\n  const [duplicateElements, setDuplicateElements] = useState({});\r\n  const [duplicateDetected, setDuplicateDetected] = useState(false);\r\n  const [teacher, setTeacher] = useState({});\r\n  const [teacherCounter, setTeacherCounter] = useState({}); // key: teacherId, value: counter\r\n  const [teacherAssignment, setTeacherAssignment] = useState({});\r\n  const [lectureList, setLectureList] = useState([]);\r\n  const [addBatch, setAddBatch] = useState(null);\r\n  // const [numberList, setNumberList] = useState([918989529107, 917898118503, 918871688429, 918349215747,919826362001,918349215747,917314058393,917869597239,919977116612,918085390900,918302184021,918358810742,919893640561,919713519598,919713030834,919827274005,919691938832,917043127836,919977711607,917298519996,919713191848,918871841238,917007794323,919669889020,918770153381]);\r\n  const [numberList, setNumberList] = useState([917898118503]);\r\n  const [batchList, setBatchList] = useState(batch);\r\n  const [image, setImage] = useState(null);   //  for div to image conversion\r\n  const [showAddBatchModal, setShowAddBatchModal] = useState(false); //for add Batch popup\r\n  const [showAddTeacherModal, setShowAddTeacherModal] = useState(false);\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n\r\n  /**************************************** Use Effect Section ************************************/\r\n  useEffect(() => {\r\n    const tableElement = document.querySelector('.table-style');\r\n    if (tableElement) {\r\n      const tableWidth = tableElement.offsetWidth;\r\n      setTableWidth(tableWidth);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (duplicateDetected) {\r\n      alert('Two same teachers found in the same row');\r\n      setDuplicateDetected(false);\r\n      setTimeout(() => {\r\n        setDuplicateElements({});\r\n      }, 3000); // Blink duration\r\n    }\r\n  }, [duplicateDetected]);\r\n\r\n  useEffect(() => {\r\n    if (duplicateDetected) {\r\n      // alert('Two same teachers found in the same row');   \r\n      setDuplicateDetected(false);\r\n    }\r\n  }, [duplicateDetected]);\r\n  /***************************************other const section*********************************** */\r\n  const divRef = useRef(null);\r\n  const color = [\"#D4E6F1\", \"#E8DAEF\", \"#008080\", \"#808000\", \"#C39BD3\", \"#76D7C4\", \"#3498DB\", \"#358b79\", \"#847f86\", \"rgb(251, 235, 9)\", \"#CA6F1E\", \"#CCCCFF\", \"#F4D03F\", \"rgb(199, 185, 84)\", \"#979A9A\", \"#F0B27A\", \"rgb(117, 98, 179)\", \"#CD5C5C\", \"#40E0D0\", \"#DAF7A6\", \"#008080\", \"#808000\", \"#FADBD8\", \"green\", \"yellow\", \"white\", \"red\", \"pink\"]\r\n  /**************************************** Component Method Section *********************************/\r\n\r\n  const generateUID = () => {\r\n    // I generate the UID from two parts here \r\n    // to ensure the random number provide enough bits.\r\n    var firstPart = (Math.random() * 46656) | 0;\r\n    var secondPart = (Math.random() * 46656) | 0;\r\n    firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\r\n    secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\r\n    return firstPart + secondPart;\r\n  }\r\n  const convertToImage = async () => {\r\n    // alert(\"Time table image sent successfully\")\r\n    const canvas = await html2canvas(divRef.current);\r\n    const imgData = canvas.toDataURL();\r\n    setImage(imgData);\r\n    /*converting page64 url got as imgData into file Object by using blob below*/\r\n    const byteString = atob(imgData.split(',')[1]);\r\n    const mimeString = imgData.split(',')[0].split(':')[1].split(';')[0];\r\n    const ia = new Uint8Array(byteString.length);\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n    }\r\n    const blob = new Blob([ia], { type: mimeString });\r\n    const imageName = generateUID();\r\n    const file = new File([blob], imageName + \".jpg\");\r\n    const fileName = imageName + \".jpg\";\r\n    const result = await new UploadApi().uplaodFile(file);\r\n    if (result === \"Success\") {\r\n      const data = await new UploadApi().getUploadedFile();\r\n      if (data.Object?.length > 0) {\r\n        const fileDetail = data.Object.reverse().find(obj => { return obj.Title?.indexOf(imageName) >= 0 });\r\n        // for (let i = 0; i < numberList.length; i++) {       THIS IS USED WHEN GETWATTSAPPAPI WILL USED SO DONT DELETE THIS LINES\r\n        try {\r\n          // const cell = numberList[i];\r\n          /*CHECK THE DETAILS OF THIS GETWATTSAPPAPI IN UPLOAD.API.JS FILE IN API FOLDER*/\r\n          // await new UploadApi().getWattsappApi(fileDetail.LongURL, \"time table\", cell, fileName);\r\n          await new UploadApi().getWattsappGroupApiOthers(fileDetail.LongURL, \"time table\", fileName);\r\n          // await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\r\n        } catch (e) {\r\n          // continue;\r\n          console.log(\"error\")\r\n        }\r\n        try {\r\n          await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\r\n        } catch (e) {\r\n          console.log(\"error\")\r\n        }\r\n      }\r\n    }\r\n    alert(\"Time table image sent successfully\")\r\n  }\r\n  const dragItem = teacher;\r\n  const dragStart = (e, teacherInfo) => {\r\n    dragItem.current = teacherInfo;\r\n    console.log(teacherInfo)\r\n  };\r\n  const handleTableCellDragStart = (e, key) => {\r\n    setDraggedCellKey(key);\r\n  };\r\n  const checkForDuplicateInRow = (key) => {\r\n    const rowId = key.split('_')[0];\r\n    const teacherInCurrentRow = [];\r\n    for (const cellKey in teacherAssignment) {\r\n      if (cellKey.startsWith(rowId)) {\r\n        teacherInCurrentRow.push({\r\n          key: cellKey,\r\n          teacher: teacherAssignment[cellKey].teacher,\r\n        });\r\n      }\r\n    }\r\n    const duplicates = teacherInCurrentRow.reduce((acc, item) => {\r\n      if (acc[item.teacher]) {\r\n        acc[item.teacher].push(item.key);\r\n      } else {\r\n        acc[item.teacher] = [item.key];\r\n      }\r\n      return acc;\r\n    }, {});\r\n    const newDuplicateKeys = Object.values(duplicates)\r\n      .filter((keys) => keys.length > 1)\r\n      .flat();\r\n    const oldDuplicateKeys = Object.keys(duplicateElements);\r\n    const isNewDuplicate = !oldDuplicateKeys.includes(key) && newDuplicateKeys.includes(key);\r\n    if (isNewDuplicate) {\r\n      setDuplicateDetected(true);\r\n      setDuplicateElements(\r\n        newDuplicateKeys.reduce((acc, key) => {\r\n          acc[key] = true;\r\n          return acc;\r\n        }, {})\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e, key) => {\r\n    console.log(key)\r\n    console.log(\"jjjjj\", teacherAssignment)\r\n    console.log(\"drag cell key\", draggedCellKey);\r\n    if (draggedCellKey) {\r\n      // Move table item\r\n      const sourceAssignment = teacherAssignment[draggedCellKey];\r\n      const targetAssignment = teacherAssignment[key];\r\n      setTeacherAssignment({\r\n        ...teacherAssignment,\r\n        [draggedCellKey]: targetAssignment,\r\n        [key]: sourceAssignment,\r\n      });\r\n      setDraggedCellKey(null);\r\n    } else {\r\n      // Assign teacher to the cell\r\n      const teacher_assignment = teacherAssignment;\r\n      teacherAssignment[key] = dragItem.current;\r\n      setTeacherAssignment({ ...teacher_assignment });\r\n      setTeacher({});\r\n      const teacherCount = teacherCounter;\r\n      if (!teacherCount[dragItem.current.teacher]) {\r\n        teacherCount[dragItem.current.teacher] = 1;\r\n      } else {\r\n        teacherCount[dragItem.current.teacher] += 1;\r\n      }\r\n      setTeacherCounter({ ...teacherCount });\r\n      checkForDuplicateInRow(key);\r\n\r\n      const teacher = teacherAssignment[key];\r\n      const batchId = key.split(\"_\")[1];\r\n      const lectureId = key.split(\"_\")[0];\r\n      const teacherName = teacher.teacher;\r\n\r\n      const batchVo = batch.find(it => it.BatchID == batchId);\r\n      console.log('xxxx xx xx teacher ', teacher);\r\n      console.log('xxxx xx xx batchId ', batchId);\r\n      console.log('xxxx xx xx lectureId', lectureId);\r\n      console.log('xxxx xx xx teacherAssignment', teacherAssignment);\r\n      // making lectureVO \r\n      const lectureVo = time.find(it => it.LectureID == lectureId);\r\n      const teacherVo = teachers_list.find(it => it.Faculty == teacherName)\r\n      console.log(\"iiii\", teacherVo)\r\n\r\n      const lecture = {};\r\n      lecture.ID = \"0\"\r\n      lecture.TimeTableID = \"0\";\r\n      lecture.LectureName = \"\";\r\n      lecture.Batch = batchVo;\r\n      lecture.Lecture = lectureVo;\r\n      lecture.Subject = teacherVo.subject;\r\n      lecture.FacultyID = teacherVo.FacultyID;\r\n      lecture.IsActive = true;\r\n      lecture.CreatedByUserID = \"1\";\r\n      lecture.CreatedOnDate = \"02/05/2023\";\r\n      console.log(\"fff\", lecture);\r\n      console.log(\"zzzz\", teacher)\r\n\r\n      const lecture_list = lectureList;\r\n      lecture_list.push(lecture);\r\n      setLectureList([...lecture_list])\r\n      /* THIS LECTURE LIST WILL BE USED BELOW IN THE CONST SAVETABLE() METHOD FROM WHERE WE SEND IT TO DATABASE THROUGH API WRITTEN IN SAVETABLE() METHOD*/\r\n    }\r\n  }\r\n\r\n  const allowDrop = (ev) => {\r\n    let t = ev.target;\r\n    while (t && (!t.classList || !t.classList.contains(\"each-block\"))) {\r\n      t = t.parentNode;\r\n    }\r\n    if (t && t.innerText.trim() !== \"\") {\r\n      // Prevent drop event if cell is not empty\r\n      return false;\r\n    }\r\n    ev.preventDefault();\r\n  };\r\n\r\n  const removeTeacher = (key) => {\r\n    const teacher_assignment = teacherAssignment;\r\n    setTeacherAssignment({ ...teacher_assignment });\r\n    setTeacher({});\r\n    const teacherCount = teacherCounter;\r\n    if ([teacherAssignment[key].teacher]) {\r\n      teacherCount[teacherAssignment[key].teacher] -= 1;\r\n    }\r\n    delete teacherAssignment[key].teacher;\r\n    delete teacherAssignment[key].color;\r\n    setTeacherCounter(teacherCount);\r\n  }\r\n\r\n  const onChangeFromDate = (e) => {\r\n    setFromDate(e.target.value);\r\n  }\r\n\r\n  const onChangeToDate = (e) => {\r\n    setToDate(e.target.value);\r\n  }\r\n\r\n  const onAddBatch = () => {\r\n    // setAddBatch(<AddBatch batchList={batchList} />)\r\n    setShowAddBatchModal(true);\r\n  }\r\n  \r\n  const onAddTeacher = () => {\r\n    setShowAddTeacherModal(true);\r\n  }\r\n\r\n  const saveTable = async() => {\r\n    const result = await new TtApi().saveTt(fromDate,toDate,lectureList);\r\n    alert(\"time table saved successfully\");\r\n  };\r\n  \r\n  /**************************************** Template Section *****************************************/\r\n  return (\r\n    <>\r\n      <div className=\"bg-container\">\r\n        <h1 className='heading-style'>CLASS SCHEDULE</h1>\r\n        <div className=\"button-group added-style\">\r\n          <Button className=\"btn \" color=\"info\" onClick={onAddBatch}>\r\n            Add Batches\r\n          </Button>\r\n          {showAddBatchModal && <AddBatch showModal={showAddBatchModal} setShowModal={setShowAddBatchModal} />}\r\n          {addBatch}\r\n          <Button className=\"btn\" color=\"info\" onClick={onAddTeacher}>\r\n            Add Teachers\r\n          </Button>\r\n          {showAddTeacherModal && <AddTeacher showModal={showAddTeacherModal} setShowModal={setShowAddTeacherModal} />}\r\n          <Button className=\"btn\" color=\"info\" onClick={saveTable}>\r\n            Save\r\n          </Button>\r\n          <Button className=\"btn\" color=\"info\" onClick={convertToImage}>\r\n            Post\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <div ref={divRef}>\r\n            <br />\r\n            <Form >\r\n              <div className='time-table-date-style'>\r\n                <FormGroup className=\"label-date-allignment\">\r\n                  <p>From:</p>\r\n                  <Input\r\n                    id=\"fromDate\"\r\n                    name=\"date\"\r\n                    type=\"date\"\r\n                    onChange={(e) => { onChangeFromDate(e) }}\r\n                    className='input-size'\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"label-date-allignment\">\r\n                  <p>To:</p>\r\n                  <Input\r\n                    id=\"toDate\"\r\n                    name=\"date\"\r\n                    type=\"date\"\r\n                    onChange={(e) => { onChangeToDate(e) }}\r\n                    className='input-size'\r\n\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </Form>\r\n            <table className='table-style'>\r\n              <tbody>\r\n                <div className=\"for-time\">\r\n                  <tr>\r\n                    <td className='F-style time-style'>Time</td>\r\n                    {batch.map((each) => {\r\n                      return (\r\n                        <td className='F-style batch-style' key={batch.BatchID}>{each.Batch}</td>\r\n                      )\r\n                    })}\r\n                  </tr>\r\n                </div>\r\n                <tr >\r\n                  {time.map((t) => {\r\n                    return (\r\n                      <div >\r\n                        <td className='F-style time-style'>{t.Time_From}-{t.Time_To}</td>\r\n                        {batchList.map((b) => {\r\n                          const key = t.LectureID + '_' + b.BatchID\r\n                          return (\r\n                            <td\r\n                              draggable={true}\r\n                              onDragOver={allowDrop}\r\n                              onDrop={(e) => handleDrop(e, key)}\r\n                              onDragStart={(e) => teacherAssignment[key] && handleTableCellDragStart(e, key)}\r\n                              key={key}\r\n                              id={key}\r\n                              className={`each-block ${duplicateElements[key] ? \"blink\" : \"\"}`}\r\n                              style={{ backgroundColor: teacherAssignment[key]?.color }}\r\n                            // className={`each-block ${duplicateElements[key]}`}\r\n                            >\r\n                              {teacherAssignment[key] && (\r\n                                <div className={`teacname-cross-style ${teacherAssignment[key]?.className} `}>\r\n                                  <div className=\"teacher-name\" >\r\n                                    {teacherAssignment[key]?.teacher}\r\n                                  </div>\r\n                                  <div className=\"cross-btn-container\">\r\n                                    {teacherAssignment[key]?.teacher ? (\r\n                                      <button\r\n                                        className=\"cross-style\"\r\n                                        onClick={() => removeTeacher(key)}\r\n                                      >\r\n                                        {/* <RiDeleteBin2Line /> */}\r\n                                        <RxCross2 />\r\n                                      </button>\r\n                                    ) : (\r\n                                      ''\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </td>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <br />\r\n            {/* <button onClick={onAddBatch}>+</button>\r\n            {addBatch} */}\r\n          </div>\r\n\r\n          {/* {image && <img src={image} alt=\"table\" style={{ maxWidth: tableWidth }} />} */}\r\n          {/* <button onClick={saveTable}>Save</button> */}\r\n        </div>\r\n        <div className='teacher-container' style={{ maxWidth: tableWidth }}>\r\n          {teachers_list.map((teacher, index) => {\r\n            const { FacultyID, Faculty } = teacher;\r\n            return (\r\n              <div\r\n                style={{ maxWidth: tableWidth, backgroundColor: color[index % color.length] }}\r\n                key={FacultyID}\r\n                className=\"teacher-item\"\r\n                draggable={true}\r\n                onDragStart={(e) => dragStart(e, { teacher: Faculty, color: color[index % color.length] })}\r\n              >\r\n                <h3>{Faculty}</h3>\r\n                {teacherCounter[Faculty] > 0 && (\r\n                  <span className={`counter-item `} draggable={false}>\r\n                    {teacherCounter[Faculty]}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default TimeTable2;"],"sourceRoot":""}