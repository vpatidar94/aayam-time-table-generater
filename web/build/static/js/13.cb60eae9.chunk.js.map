{"version":3,"sources":["const/url.js","api/tt.api.js.js","pages/TTPages/PreviousTimeTable/PreviousTimeTable.js"],"names":["BASE_URL","URL","UPLOAD_FILE","GET_UPLOAD_FILE_URL","GET_SAVE_TIMETABLE_URL","GET_ALL_TT","GET_EDIT_TT","TtApi","_createClass","_classCallCheck","getTtList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","result","wrap","_context","prev","next","fetch","method","sent","json","abrupt","t0","Error","message","options","stop","getEditTt","_ref2","_callee2","fromDateEdit","myHeaders","_context2","Headers","append","headers","body","JSON","stringify","FromDate","replaceAll","_x","apply","arguments","saveTt","_ref3","_callee3","fromDate","toDate","lectureList","sentBatchID","_context3","TimeTableID","Description","DateType","ToDate","ShiftID","SessionID","Session","BatchID","LectureID","IsActive","CreatedByUserID","CreatedOnDate","Date","toLocaleString","LectureList","_x2","_x3","_x4","_x5","saveEditedTt","_ref4","_callee4","_context4","_x6","_x7","_x8","_x9","_x10","_x11","_x12","_x13","_x14","_x15","_x16","PreviousTimeTable","useEffect","getTimeTableList","_useState","useState","_useState2","_slicedToArray","timeTableList","setTimeTableList","_ref","_result$Object","IsSuccessful","Object","length","console","log","_jsx","_Fragment","children","className","Card","_jsxs","CardBody","CardTitle","tag","CardSubtitle","Table","responsive","borderless","reverse","map","tdata","index","NavLink","to","Button","onClick","e","row","outline","color"],"mappings":"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","file":"static/js/13.cb60eae9.chunk.js","sourcesContent":["const ENV_URL = 'https://api.aayamcareerinstitute.co.in/api'; // producation fn\r\nconst DEV_URL = 'http://localhost:5001'; // producation fn\r\nconst BASE_URL= ENV_URL\r\n\r\n\r\n\r\nexport const URL = {\r\n    UPLOAD_FILE: BASE_URL + '/UploadFilesAttachment',\r\n    GET_UPLOAD_FILE_URL: BASE_URL + '/GetFiles', \r\n    GET_SAVE_TIMETABLE_URL: BASE_URL+ '/AddUpdateTimeTable',\r\n    GET_ALL_TT: BASE_URL + '/GetTimeTable', \r\n\r\n    GET_EDIT_TT: BASE_URL + '/GetTimeTableByDate',\r\n\r\n\r\n\r\n};  \r\n","import { URL } from '../const/url';\r\n\r\nexport default class TtApi {\r\n    getTtList = async () => {\r\n        try {\r\n            const res = await fetch(URL.GET_ALL_TT, {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\ngetEditTt = async (fromDateEdit) => {\r\n    try {\r\n        // const formData = new FormData();\r\n        // formData.append('file', file, file.name);\r\n        const myHeaders = new Headers();\r\n          myHeaders.append(\"Content-Type\", \"application/json\");\r\n        const res = await fetch(URL.GET_EDIT_TT, {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify({\r\n            FromDate: fromDateEdit.replaceAll(\"-\", \"/\"),\r\n        })});\r\n        const result = await res.json();\r\n        return result;\r\n    } catch (e) {\r\n        throw new Error(e.message, e.options);\r\n    }\r\n}\r\n\r\nsaveTt = async (fromDate,toDate,lectureList,sentBatchID) => {\r\n    try {\r\n        const myHeaders = new Headers();\r\n          myHeaders.append(\"Content-Type\", \"application/json\");\r\n        const res = await fetch(URL.GET_SAVE_TIMETABLE_URL, {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify({\r\n                TimeTableID: 0,\r\n                Description: \"time table save\",\r\n                DateType: \"multiple\",\r\n                FromDate: fromDate,\r\n                ToDate: toDate,\r\n                ShiftID: 1,\r\n                SessionID: 5,\r\n                Session: \"string\",\r\n                // BatchID: [\r\n                //   1, 6, 10, 7, 3, 15, 2, 3049, 20, 3042, 3061, 22, 13, 14\r\n                // ],,\r\n                BatchID:sentBatchID,\r\n                LectureID: [\r\n                  1, 2, 3, 4, 5, 6, 7, 8\r\n                ],\r\n                IsActive: true,\r\n                CreatedByUserID: 1,\r\n                CreatedOnDate: new Date().toLocaleString(),\r\n                LectureList: lectureList\r\n        })});\r\n        const result = await res.json();\r\n        return result;\r\n    } catch (e) {\r\n        throw new Error(e.message, e.options);\r\n    }\r\n}\r\n\r\nsaveEditedTt = async (TimeTableID,DateType,fromDate,toDate,ShiftID,SessionID,Session,sentBatchID,LectureID,CreatedByUserID,lectureList) => {\r\n    try {\r\n        const myHeaders = new Headers();\r\n          myHeaders.append(\"Content-Type\", \"application/json\");\r\n        const res = await fetch(URL.GET_SAVE_TIMETABLE_URL, {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify({\r\n            TimeTableID: 0,\r\n            Description: \"time table save\",\r\n            DateType: \"multiple\",\r\n            FromDate: fromDate,\r\n            ToDate: toDate,\r\n            ShiftID: ShiftID,\r\n            SessionID: SessionID,\r\n            Session: Session,\r\n            BatchID: sentBatchID,\r\n            LectureID: LectureID,\r\n            IsActive: true,\r\n            CreatedByUserID: CreatedByUserID,\r\n            CreatedOnDate: new Date().toLocaleString(),\r\n            LectureList: lectureList\r\n        })});\r\n        const result = await res.json();\r\n        return result;\r\n    } catch (e) {\r\n        throw new Error(e.message, e.options);\r\n    }\r\n}\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport TtApi from '../../../api/tt.api.js';\r\nimport { Button, Card, CardBody, CardSubtitle, CardTitle, Table } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst PreviousTimeTable = () => {\r\n  /**************************************** const Section ************************************/\r\n  /**************************************** Use Effect Section ************************************/\r\n  useEffect(() => {\r\n    getTimeTableList();\r\n  }, []);\r\n\r\n  /**************************************** State Section *****************************************/\r\n  const [timeTableList, setTimeTableList] = useState([]);\r\n\r\n  /**************************************** Component Method Section *********************************/\r\n  const getTimeTableList = async () => {\r\n    // TODO: Call api\r\n    const result = await new TtApi().getTtList();\r\n    if (result.IsSuccessful && result.Object?.length > 0) {\r\n      setTimeTableList(result.Object);\r\n      console.log(result.Object)\r\n    }\r\n    // console.log(result);\r\n  };\r\n\r\n  const editTt = (row) => {\r\n    console.log('xxx xx xx row is ', row);\r\n  }\r\n\r\n  /**************************************** Template Section *****************************************/\r\n  return (\r\n    <>\r\n      <div className='col-12'>\r\n        <Card>\r\n          <CardBody>\r\n            <CardTitle tag=\"h5\">Previous Time Table</CardTitle>\r\n            <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\r\n              Overview of the projects\r\n            </CardSubtitle>\r\n\r\n            <Table className=\"no-wrap mt-3 align-middle\" responsive borderless>\r\n              <thead>\r\n                <tr>\r\n                  <th>Table Id</th>\r\n                  <th>Session</th>\r\n\r\n                  <th>FromDate</th>\r\n                  <th>To Date</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {timeTableList.reverse().map((tdata, index) => (\r\n                  <tr key={index} className=\"border-top\">\r\n                    <td>\r\n                      {tdata.TimeTableID}\r\n                    </td>\r\n                    <td>{tdata.Session}</td>\r\n                    <td>\r\n                      {tdata.FromDate}\r\n                    </td>\r\n                    <td>{tdata.ToDate}</td>\r\n                    <td>\r\n                     <NavLink to={'/edit/'+ tdata.FromDate.replaceAll(\"/\", '-')}><Button onClick={e => {editTt(tdata)}} className=\"btn\" outline color=\"primary\">\r\n                        Edit\r\n                      </Button></NavLink>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PreviousTimeTable\r\n"],"sourceRoot":""}