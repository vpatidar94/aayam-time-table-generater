{"version":3,"sources":["pages/TTPages/List/List.js","const/url.js","pages/TTPages/TeacherForm/TeacherForm.js","api/tt.api.js.js","pages/TTPages/AddBatch/AddBatch.js","api/upload.api.js","const/color.const.js","pages/TTPages/EditTimeTable/EditTimeTable.js"],"names":["teachers_list","FacultyID","Faculty","subject","batch","BatchID","Batch","CourseID","time","LectureID","Lecture","Time_From","Time_To","BASE_URL","URL","UPLOAD_FILE","GET_UPLOAD_FILE_URL","GET_SAVE_TIMETABLE_URL","GET_ALL_TT","GET_EDIT_TT","AddTeacher","_ref","showModal","setShowModal","console","log","useEffect","fetchApiData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_context","prev","next","fetch","sent","json","setApiData","t0","stop","apply","arguments","_useState","useState","_useState2","_slicedToArray","setFaculties","_useState3","_useState4","apiData","_useState5","_useState6","checkedItems","setCheckedItems","_apiData$Object","Object","responseObject","_responseObject$Facul","FacultyList","_responseObject$UserL","UserList","facultyNameMap","forEach","user","UserID","UserName","handleCheckboxChange","event","_event$target","target","name","checked","_objectSpread","_defineProperty","updatedFacultyList","map","faculty","closeModal","_jsxs","children","_jsx","Modal","isOpen","toggle","style","maxWidth","ModalHeader","ModalBody","className","maxHeight","overflowY","listStyle","facultyUser","bgColor","find","facultyName","type","onChange","ModalFooter","Button","color","onClick","newTeachersList","_loop","facultyID","selectedItem","parseInt","some","teacher","push","alert","TtApi","_createClass","_classCallCheck","getTtList","res","method","abrupt","Error","message","options","getEditTt","_callee2","fromDateEdit","myHeaders","_context2","Headers","append","headers","body","JSON","stringify","FromDate","replaceAll","_x","saveTt","_ref3","_callee3","fromDate","toDate","lectureList","sentBatchID","_context3","TimeTableID","Description","DateType","ToDate","ShiftID","SessionID","Session","IsActive","CreatedByUserID","CreatedOnDate","Date","toLocaleString","LectureList","_x2","_x3","_x4","_x5","AddBatch","batchList","setBatches","_responseObject$Batch","newBatches","batchID","UploadApi","getWattsappApi","url","cell","fileName","URLSearchParams","number","media_url","filename","instance_id","access_token","getWattsappGroupApiTeachers","group_id","_x6","_x7","getWattsappGroupApiOthers","_x8","_x9","_x10","uplaodFile","_ref4","_callee4","file","formData","_context4","FormData","_x11","getUploadedFile","_callee5","_context5","COLORS","EditTimeTable","useParams","appenColorTOTeacherList","getEditTimeTable","tableElement","document","querySelector","tableWidth","offsetWidth","setTableWidth","tt","setTt","draggedTeacher","setDraggedTeacher","_useState7","_useState8","setLectureList","_useState9","_useState10","teacherAssignment","setTeacherAssignment","_useState11","_useState12","teacherCounter","setTeacherCounter","_useState13","_useState14","lectureTeacherCounter","setLectureTeacherCounter","_useState15","_useState16","duplicateTeacherDetectedInRow","setDuplicateTeacherDetectedInRow","_useState17","_useState18","draggedCellKey","setDraggedCellKey","_useState19","_useState20","addBatch","_useState21","_useState22","setImage","_useState23","_useState24","showAddBatchModal","setShowAddBatchModal","_useState25","_useState26","showAddTeacherModal","setShowAddTeacherModal","_useState27","_useState28","setFromDate","_useState29","_useState30","setToDate","divRef","useRef","_useState31","_useState32","setBatchList","_useState33","_useState34","teacherList","setTeacherList","_useState35","_useState36","loaded","setLoaded","stateTeacherList","i","concat","_result$Object$Lectur","stateTeacherAssignment","_result$Object$Lectur2","setBatchAndTimeList","length","lec","_lec$Batch","_lec$Lecture","LectureName","_result$Object","_result$Object$BatchI","_lec$Batch2","_result$Object2","_result$Object2$Lectu","lecture","t","_lec$Lecture2","indexOf","_lec$Batch3","key","updateLectureListOnDrop","updateTeacherCounterOnDrop","_tt$Batch","stateBatchList","filter","it","_tt$BatchID","_toConsumableArray","dragStart","e","teacherDragged","allowDrop","ev","classList","contains","parentNode","innerText","trim","preventDefault","stateLectureList","lectureDto","Subject","stateTeacherCounter","handleDrop","selectedTeacher","keyInside","removeTeacher","lectureId","teacherId","stateLectureTeacherCounter","setTimeout","checkDuplicateTeacherInRowOnDrop","batchId","index","row","_row$batch","_row$lecture","splice","isTeacherDuplicateInLecture","generateUID","firstPart","Math","random","secondPart","toString","slice","convertToImage","canvas","imgData","byteString","mimeString","ia","blob","imageName","_data$Object","data","fileDetail","html2canvas","current","toDataURL","atob","split","Uint8Array","charCodeAt","Blob","File","reverse","obj","_obj$Title","Title","LongURL","t1","_Fragment","Alert","item","raw","redirect","then","text","catch","error","ref","Form","FormGroup","Input","id","value","onChangeFromDate","onChangeToDate","window","confirm","updatedBatches","each","onDeleteBatch","RxCross2","b","_teacherAssignment$ke","_teacherAssignment$ke2","_teacherAssignment$ke3","_teacherAssignment$ke4","_teacherAssignment$ke5","_teacherAssignment$ke6","draggable","onDragOver","onDrop","onDragStart","backgroundColor","onDragEnd","onTouchStart","onTouchMove","x","touches","clientX","y","clientY","elem","elementFromPoint","updatedTeachers","onDeleteTeacher"],"mappings":"iHAAA,gHACaA,EAAgB,CACrB,CACIC,UAAW,GACXC,QAAS,MACTC,QAAS,WAGb,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,aAGZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,aAGZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,WAGZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,WAEZ,CACIF,UAAW,GACXC,QAAS,MACTC,QAAQ,WAEZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,aAEZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAS,WAGb,CACIF,UAAW,KACXC,QAAS,KACTC,QAAQ,WAGZ,CACIF,UAAW,KACXC,QAAS,KACTC,QAAQ,WAGZ,CACIF,UAAW,KACXC,QAAS,OACTC,QAAQ,aAMZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,WAEZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,WAEZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,aAEZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,SAEZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,WAEZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,WAEZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,aAEZ,CACIF,UAAW,KACXC,QAAS,MACTC,QAAQ,cAKPC,EAAO,CAChB,CACIC,QAAS,EACTC,MAAO,KACPC,SAAU,GAEd,CACIF,QAAS,EACTC,MAAO,KACPC,SAAU,GAEd,CACIF,QAAS,GACTC,MAAO,KACPC,SAAU,GAEd,CACIF,QAAS,EACTC,MAAO,KACPC,SAAU,GAEd,CACIF,QAAS,EACTC,MAAO,KACPC,SAAU,GAEd,CACIF,QAAS,GACTC,MAAO,KACPC,SAAU,GAEd,CACIF,QAAS,EACTC,MAAO,KACPC,SAAU,GAEd,CACIF,QAAS,KACTC,MAAO,KACPC,SAAU,GAId,CACIF,QAAS,GACTC,MAAO,MACPC,SAAU,IAEd,CACIF,QAAS,KACTC,MAAO,QACPC,SAAU,IAEd,CACIF,QAAS,KACTC,MAAO,QACPC,SAAU,IAEd,CACIF,QAAS,GACTC,MAAO,SACPC,SAAU,IAEd,CACIF,QAAS,KACTC,MAAO,SACPC,SAAU,MAEd,CACIF,QAAS,KACTC,MAAO,UACPC,SAAU,KAKLC,EAAM,CACf,CACIC,UAAW,EACXC,QAAS,KACTC,UAAW,WACXC,QAAS,YAEb,CACIH,UAAW,EACXC,QAAS,KACTC,UAAW,WACXC,QAAS,YAEb,CACIH,UAAW,EACXC,QAAS,KACTC,UAAW,WACXC,QAAS,YAEb,CACIH,UAAW,EACXC,QAAS,KACTC,UAAW,WACXC,QAAS,YAEb,CACIH,UAAW,EACXC,QAAS,KACTC,UAAW,WACXC,QAAS,YAEb,CACIH,UAAW,EACXC,QAAS,KACTC,UAAW,WACXC,QAAS,YAEb,CACIH,UAAW,EACXC,QAAS,KACTC,UAAW,WACXC,QAAS,YAEb,CACIH,UAAW,EACXC,QAAS,KACTC,UAAW,WACXC,QAAS,Y,kCC1OjB,sCAEMC,EAFU,6CAMHC,EAAM,CACfC,YAAaF,EAAW,yBACxBG,oBAAqBH,EAAW,YAChCI,uBAAwBJ,EAAU,sBAClCK,WAAYL,EAAW,gBAEvBM,YAAaN,EAAW,sB,qIC0HbO,IA9HI,SAAHC,GAAqC,IAA/BC,EAASD,EAATC,UAAWC,EAAYF,EAAZE,aAC/BC,QAAQC,IAAI,OAAQzB,KAGpB0B,qBAAU,WACR,GAAIJ,EAAW,CACb,IAAMK,EAAY,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMC,MAAM,4DAA4D,KAAD,EAA1E,OAARN,EAAQG,EAAAI,KAAAJ,EAAAE,KAAA,EACOL,EAASQ,OAAO,KAAD,EAA9BP,EAAME,EAAAI,KACZE,EAAWR,GAAQE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAEnBZ,QAAQC,IAAI,2BAA0BW,EAAAO,IAAS,yBAAAP,EAAAQ,OAAA,GAAAZ,EAAA,mBAElD,kBARiB,OAAAJ,EAAAiB,MAAA,KAAAC,UAAA,KAUlBnB,GACF,CACF,GAAG,CAACL,IAGJ,IAAAyB,EAAkCC,mBAAShD,KAAciD,EAAAC,YAAAH,EAAA,GAAvCI,GAAFF,EAAA,GAAcA,EAAA,IAE9BG,EAA8BJ,mBAAS,CAAC,GAAEK,EAAAH,YAAAE,EAAA,GAAnCE,EAAOD,EAAA,GAAEX,EAAUW,EAAA,GAC1BE,EAAwCP,mBAAS,CAAC,GAAEQ,EAAAN,YAAAK,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAGpCG,EAAwCL,EAAhCM,OAAQC,OAAc,IAAAF,EAAG,CAAC,EAACA,EACjBG,GAAsCD,EAAhDvD,MAAgDuD,EAApCE,oBAAW,IAAAD,EAAG,GAAEA,EAAAE,EAAoBH,EAAlBI,gBAAQ,IAAAD,EAAG,GAAEA,EAC7CE,EAAiB,CAAC,EAExBD,EAASE,SAAQ,SAACC,GAChBF,EAAeE,EAAKC,QAAUD,EAAKE,QACrC,IAEA,IAAMC,EAAuB,SAACC,GAC5B,IAAAC,EAA0BD,EAAME,OAAxBC,EAAIF,EAAJE,KAAMC,EAAOH,EAAPG,QACdlB,EAAemB,wBAAC,CAAC,EACZpB,GAAY,GAAAqB,YAAA,GACdH,EAAOC,IAEZ,EAEMG,EAAqBhB,EAAYiB,KAAI,SAACC,GAAO,OAAAJ,wBAAA,GAC9CI,GAAO,IACV/E,QAASgE,EAAee,EAAQhF,YAAcgF,EAAQ/E,SAAO,IAsCzDgF,EAAa,WACjB3D,GAAa,EACf,EAGA,OACE4D,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,oBACJD,eAACG,IAAK,CAACC,OAAQjE,EAAWkE,OAAQN,EAAYO,MAAO,CAACC,SAAS,SAASN,SAAA,CACtEC,cAACM,IAAW,CAACH,OAAQN,EAAWE,SAAC,kCACjCC,cAACO,IAAS,CAAAR,SACRC,cAAA,OAAKQ,UAAU,uBAAuBJ,MAAO,CAAEK,UAAW,QAASC,UAAW,SAASL,SAAS,SAASN,SACvGC,cAAA,MAAIQ,UAAU,aAAaJ,MAAO,CAAEO,UAAW,QAASZ,SACrDL,EAAmBC,KAAI,SAACC,GACvB,IAAQhF,EAAkCgF,EAAlChF,UACFgG,GADoChB,EAAvBiB,QAAuBjB,EAAdY,UACR5B,EAASkC,MAAK,SAAC/B,GAAI,OAAKA,EAAKC,SAAWpE,CAAS,KAC/DmG,EAAcH,EAAcA,EAAY3B,SAAWW,EAAQ/E,QACjE,OACEmF,cAAA,MAAAD,SACAD,eAAA,OAAKU,UAAU,oBAAmBT,SAAA,CAC9BC,cAAA,SACEgB,KAAK,WACL1B,KAAMM,EAAQhF,UACd2E,QAASnB,EAAawB,EAAQhF,aAAc,EAC5CqG,SAAU/B,EACVsB,UAAU,8BAEXO,MATInB,EAAQhF,UAarB,UAINkF,eAACoB,IAAW,CAAAnB,SAAA,CACVC,cAACmB,IAAM,CAACC,MAAM,UAAUC,QAvEX,WACnB,IAAMC,EAAkB3G,IAAc4G,EAAA,SAAAC,GAGpC,GAAIpD,EAAaoD,GAAY,CAC3B,IAAMC,EAAe/B,EAAmBoB,MACtC,SAAClB,GAAO,OAAKA,EAAQhF,YAAc8G,SAASF,EAAU,IAGxD,GAAIC,EAAc,CAChB,IAAMb,EAAchC,EAASkC,MAC3B,SAAC/B,GAAI,OAAKA,EAAKC,SAAWyC,EAAa7G,SAAS,IAE5CmG,EAAcH,EAAcA,EAAY3B,SAAWwC,EAAa5G,QAExCyG,EAAgBK,MAC5C,SAACC,GAAO,OAAKA,EAAQhH,YAAc6G,EAAa7G,SAAS,KAIzD0G,EAAgBO,KAAK,CACnBjH,UAAW6G,EAAa7G,UACxBC,QAASkG,GAGf,CACF,CACF,EAxBA,IAAK,IAAMS,KAAapD,EAAYmD,EAAAC,GA0BpCrF,QAAQC,IAAIkF,GACZxD,EAAawD,GACbQ,MAAM,6BAER,EAsCsD/B,SAAC,QAAa,IAC5DC,cAACmB,IAAM,CAACC,MAAM,YAAYC,QAASxB,EAAWE,SAAC,kBAKzD,C,mICnIqBgC,EAAKC,aAAA,SAAAD,IAAAE,YAAA,KAAAF,GAAA,KACtBG,UAAS1F,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAwF,EAAAtF,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEcC,MAAMzB,IAAII,WAAY,CACpCuG,OAAQ,QACT,KAAD,EAFO,OAAHD,EAAGpF,EAAAI,KAAAJ,EAAAE,KAAA,EAGYkF,EAAI/E,OAAO,KAAD,EAAnB,OAANP,EAAME,EAAAI,KAAAJ,EAAAsF,OAAA,SACLxF,GAAM,cAAAE,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAEP,IAAIuF,MAAMvF,EAAAO,GAAEiF,QAASxF,EAAAO,GAAEkF,SAAS,KAAD,oBAAAzF,EAAAQ,OAAA,GAAAZ,EAAA,mBAE5C,KAEL8F,UAAS,eAAAlG,EAAAC,YAAAC,cAAAC,MAAG,SAAAgG,EAAOC,GAAY,IAAAC,EAAAT,EAAAtF,EAAA,OAAAJ,cAAAK,MAAA,SAAA+F,GAAA,cAAAA,EAAA7F,KAAA6F,EAAA5F,MAAA,OAKgC,OALhC4F,EAAA7F,KAAA,GAIjB4F,EAAY,IAAIE,SACVC,OAAO,eAAgB,oBAAoBF,EAAA5F,KAAA,EACrCC,MAAMzB,IAAIK,YAAa,CACrCsG,OAAQ,OACRY,QAASJ,EACTK,KAAMC,KAAKC,UAAU,CACrBC,SAAUT,EAAaU,WAAW,IAAK,SACtC,KAAD,EALK,OAAHlB,EAAGU,EAAA1F,KAAA0F,EAAA5F,KAAA,EAMYkF,EAAI/E,OAAO,KAAD,EAAnB,OAANP,EAAMgG,EAAA1F,KAAA0F,EAAAR,OAAA,SACLxF,GAAM,cAAAgG,EAAA7F,KAAA,GAAA6F,EAAAvF,GAAAuF,EAAA,SAEP,IAAIP,MAAMO,EAAAvF,GAAEiF,QAASM,EAAAvF,GAAEkF,SAAS,KAAD,oBAAAK,EAAAtF,OAAA,GAAAmF,EAAA,mBAE5C,gBAAAY,GAAA,OAAA/G,EAAAiB,MAAA,KAAAC,UAAA,EAjBQ,GAiBR,KAED8F,OAAM,eAAAC,EAAAhH,YAAAC,cAAAC,MAAG,SAAA+G,EAAOC,EAASC,EAAOC,EAAYC,GAAW,IAAAjB,EAAAT,EAAAtF,EAAA,OAAAJ,cAAAK,MAAA,SAAAgH,GAAA,cAAAA,EAAA9G,KAAA8G,EAAA7G,MAAA,OAGQ,OAHR6G,EAAA9G,KAAA,GAEzC4F,EAAY,IAAIE,SACVC,OAAO,eAAgB,oBAAoBe,EAAA7G,KAAA,EACrCC,MAAMzB,IAAIG,uBAAwB,CAChDwG,OAAQ,OACRY,QAASJ,EACTK,KAAMC,KAAKC,UAAU,CACjBY,YAAa,EACbC,YAAa,kBACbC,SAAU,SACVb,SAAUM,EACVQ,OAAQP,EACRQ,QAAS,EACTC,UAAW,EACXC,QAAS,SAITrJ,QAAQ6I,EACRzI,UAAW,CACT,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEvBkJ,UAAU,EACVC,gBAAiB,EACjBC,eAAe,IAAIC,MAAOC,iBAC1BC,YAAaf,MAChB,KAAD,EAvBK,OAAHzB,EAAG2B,EAAA3G,KAAA2G,EAAA7G,KAAA,EAwBYkF,EAAI/E,OAAO,KAAD,EAAnB,OAANP,EAAMiH,EAAA3G,KAAA2G,EAAAzB,OAAA,SACLxF,GAAM,cAAAiH,EAAA9G,KAAA,GAAA8G,EAAAxG,GAAAwG,EAAA,SAEP,IAAIxB,MAAMwB,EAAAxG,GAAEiF,QAASuB,EAAAxG,GAAEkF,SAAS,KAAD,oBAAAsB,EAAAvG,OAAA,GAAAkG,EAAA,mBAE5C,gBAAAmB,EAAAC,EAAAC,EAAAC,GAAA,OAAAvB,EAAAhG,MAAA,KAAAC,UAAA,EAjCK,EAiCL,G,uHCiCcuH,UA7FE,SAAHhJ,GAAgD,IAA1CC,EAASD,EAATC,UAAWC,EAAYF,EAAZE,aAAc+I,EAASjJ,EAATiJ,UAC3C9I,QAAQC,IAAI,OAAQrB,KAEpBsB,qBAAU,WACR,GAAIJ,EAAW,CACb,IAAMK,EAAY,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMC,MAAM,4DAA4D,KAAD,EAA1E,OAARN,EAAQG,EAAAI,KAAAJ,EAAAE,KAAA,EACOL,EAASQ,OAAO,KAAD,EAA9BP,EAAME,EAAAI,KACZE,EAAWR,GAAQE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAEnBZ,QAAQC,IAAI,2BAA0BW,EAAAO,IAAS,yBAAAP,EAAAQ,OAAA,GAAAZ,EAAA,mBAElD,kBARiB,OAAAJ,EAAAiB,MAAA,KAAAC,UAAA,KAUlBnB,GAEF,CACF,GAAG,CAACL,IAEJ,IAAAyB,EAA8BC,mBAASsH,GAAUrH,EAAAC,YAAAH,EAAA,GAAjCwH,GAAFtH,EAAA,GAAYA,EAAA,IAC1BG,EAA8BJ,mBAAS,CAAC,GAAEK,EAAAH,YAAAE,EAAA,GAAnCE,EAAOD,EAAA,GAAEX,EAAUW,EAAA,GAC1BE,EAAwCP,mBAAS,CAAC,GAAEQ,EAAAN,YAAAK,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAGpCG,EAAwCL,EAAhCM,OACR4G,QAD8B,IAAA7G,EAAG,CAAC,EAACA,GAC3BrD,aAAK,IAAAkK,EAAG,GAAEA,EAGZjG,EAAuB,SAACC,GAC5B,IAAAC,EAA0BD,EAAME,OAAxBC,EAAIF,EAAJE,KAAMC,EAAOH,EAAPG,QACdlB,EAAemB,wBAAC,CAAC,EACZpB,GAAY,GAAAqB,YAAA,GACdH,EAAOC,IAEZ,EAqBMM,EAAa,WACjB3D,GAAa,EACf,EAGA,OACE8D,cAAA,OAAAD,SACED,eAACG,IAAK,CAACC,OAAQjE,EAAWkE,OAAQN,EAAYO,MAAO,CAAEC,SAAU,SAAUN,SAAA,CACzEC,cAACM,IAAW,CAACH,OAAQN,EAAWE,SAAC,iCACjCC,cAACO,IAAS,CAAAR,SACRC,cAAA,OAAKQ,UAAU,uBAAuBJ,MAAO,CAAEK,UAAW,QAASC,UAAW,SAAUL,SAAU,SAAUN,SAC1GC,cAAA,MAAIQ,UAAU,aAAaJ,MAAO,CAAEO,UAAW,QAASZ,SACrD9E,EAAM0E,KAAI,SAAC5E,GAAK,OACfiF,cAAA,MAAAD,SACED,eAAA,OAAKU,UAAU,kBAAiBT,SAAA,CAC9BC,cAAA,SACEgB,KAAK,WACL1B,KAAMvE,EAAMC,QACZuE,QAASnB,EAAarD,EAAMC,WAAY,EACxCiG,SAAU/B,EACVsB,UAAU,4BAEXzF,EAAME,UATFF,EAAMC,QAWV,UAKb8E,eAACoB,IAAW,CAAAnB,SAAA,CACVC,cAACmB,IAAM,CAACC,MAAM,UAAUC,QAjDb,WACjB,IAAM+D,EAAaH,EAAU1D,EAAA,SAAA8D,GAE3B,GAAIjH,EAAaiH,GAAU,CACzB,IAAM5D,EAAexG,EAAM6F,MAAK,SAAC/F,GAAK,OAAKA,EAAMC,UAAY0G,SAAS2D,EAAQ,IAC1E5D,IAAiB2D,EAAWtE,MAAK,SAAC/F,GAAK,OAAKA,EAAMC,UAAYyG,EAAazG,OAAO,KACpFoK,EAAWvD,KAAK,CACd7G,QAASyG,EAAazG,QACtBC,MAAOwG,EAAaxG,MACpBC,SAAUuG,EAAavG,UAG7B,CACF,EAXA,IAAK,IAAMmK,KAAWjH,EAAYmD,EAAA8D,GAYlClJ,QAAQC,IAAIgJ,GACZF,EAAWE,GACXtD,MAAM,6BACR,EAgCoD/B,SAAC,QAAa,IAC1DC,cAACmB,IAAM,CAACC,MAAM,YAAYC,QAASxB,EAAWE,SAAC,iBAKzD,C,8GCjGqBuF,EAAStD,aAAA,SAAAsD,IAAArD,YAAA,KAAAqD,GAkB1B,KAGAC,eAAc,eAAAvJ,EAAAQ,YAAAC,cAAAC,MAAG,SAAAC,EAAO6I,EAAKjD,EAASkD,EAAMC,GAAQ,IAAAvD,EAAAtF,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAM5C,OAN4CF,EAAAC,KAAA,EAE5Cb,QAAQC,IAAI,MAAOoJ,GACnBrJ,QAAQC,IAAI,SAAUmG,GACtBpG,QAAQC,IAAI,MAAOqJ,GACnBtJ,QAAQC,IAAI,OAAQsJ,GACpB3I,EAAAE,KAAA,EACkBC,MAAM,iCAAwC,IAAIyI,gBAAgB,CAChFC,OAAQH,EACRzE,KAAM,QACNuB,QAASA,EACTsD,UAAW,0CAA4CL,EACvDM,SAAUJ,EACVK,YAAa,gBACbC,aAAc,qCACd,CACA5D,OAAQ,QACT,KAAD,EAVO,OAAHD,EAAGpF,EAAAI,KAAAJ,EAAAE,KAAA,GAWYkF,EAAI/E,OAAO,KAAD,GAAnB,OAANP,EAAME,EAAAI,KAAAJ,EAAAsF,OAAA,SACLxF,GAAM,cAAAE,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAEP,IAAIuF,MAAMvF,EAAAO,GAAEiF,QAASxF,EAAAO,GAAEkF,SAAS,KAAD,oBAAAzF,EAAAQ,OAAA,GAAAZ,EAAA,mBAE5C,gBAAA2G,EAAAsB,EAAAC,EAAAC,GAAA,OAAA9I,EAAAwB,MAAA,KAAAC,UAAA,EAvBa,GAuBb,KAGDwI,4BAA2B,eAAA1J,EAAAC,YAAAC,cAAAC,MAAG,SAAAgG,EAAO8C,EAAKjD,EAASmD,GAAQ,IAAAvD,EAAAtF,EAAA,OAAAJ,cAAAK,MAAA,SAAA+F,GAAA,cAAAA,EAAA7F,KAAA6F,EAAA5F,MAAA,OAKnD,OALmD4F,EAAA7F,KAAA,EAEnDb,QAAQC,IAAI,MAAOoJ,GACnBrJ,QAAQC,IAAI,SAAUmG,GACtBpG,QAAQC,IAAI,OAAQsJ,GACpB7C,EAAA5F,KAAA,EACkBC,MAAM,yCAAgD,IAAIyI,gBAAgB,CACxFO,SAAU,+BACVlF,KAAM,QACNuB,QAASA,EACTsD,UAAW,0CAA4CL,EACvDM,SAAUJ,EACVK,YAAa,gBACbC,aAAc,qCACd,CACA5D,OAAQ,QACT,KAAD,EAVO,OAAHD,EAAGU,EAAA1F,KAAA0F,EAAA5F,KAAA,EAWYkF,EAAI/E,OAAO,KAAD,EAAnB,OAANP,EAAMgG,EAAA1F,KAAA0F,EAAAR,OAAA,SACLxF,GAAM,cAAAgG,EAAA7F,KAAA,GAAA6F,EAAAvF,GAAAuF,EAAA,SAEP,IAAIP,MAAMO,EAAAvF,GAAEiF,QAASM,EAAAvF,GAAEkF,SAAS,KAAD,oBAAAK,EAAAtF,OAAA,GAAAmF,EAAA,mBAE5C,gBAAAqC,EAAAoB,EAAAC,GAAA,OAAA7J,EAAAiB,MAAA,KAAAC,UAAA,EAtB0B,GAsB1B,KAED4I,0BAAyB,eAAA7C,EAAAhH,YAAAC,cAAAC,MAAG,SAAA+G,EAAO+B,EAAKjD,EAASmD,GAAQ,IAAAvD,EAAAtF,EAAA,OAAAJ,cAAAK,MAAA,SAAAgH,GAAA,cAAAA,EAAA9G,KAAA8G,EAAA7G,MAAA,OAKjD,OALiD6G,EAAA9G,KAAA,EAEjDb,QAAQC,IAAI,MAAOoJ,GACnBrJ,QAAQC,IAAI,SAAUmG,GACtBpG,QAAQC,IAAI,OAAQsJ,GACpB5B,EAAA7G,KAAA,EACkBC,MAAM,yCAAgD,IAAIyI,gBAAgB,CACxFO,SAAU,+BACVlF,KAAM,QACNuB,QAASA,EACTsD,UAAW,0CAA4CL,EACvDM,SAAUJ,EACVK,YAAa,gBACbC,aAAc,qCAEd,CACA5D,OAAQ,QACT,KAAD,EAXO,OAAHD,EAAG2B,EAAA3G,KAAA2G,EAAA7G,KAAA,EAYYkF,EAAI/E,OAAO,KAAD,EAAnB,OAANP,EAAMiH,EAAA3G,KAAA2G,EAAAzB,OAAA,SACLxF,GAAM,cAAAiH,EAAA9G,KAAA,GAAA8G,EAAAxG,GAAAwG,EAAA,SAEP,IAAIxB,MAAMwB,EAAAxG,GAAEiF,QAASuB,EAAAxG,GAAEkF,SAAS,KAAD,oBAAAsB,EAAAvG,OAAA,GAAAkG,EAAA,mBAE5C,gBAAA6C,EAAAC,EAAAC,GAAA,OAAAhD,EAAAhG,MAAA,KAAAC,UAAA,EAvBwB,GAuBxB,KAEDgJ,WAAU,eAAAC,EAAAlK,YAAAC,cAAAC,MAAG,SAAAiK,EAAOC,GAAI,IAAAC,EAAA1E,EAAAtF,EAAA,OAAAJ,cAAAK,MAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,OAGyB,OAHzB6J,EAAA9J,KAAA,GAEV6J,EAAW,IAAIE,UACZhE,OAAO,OAAQ6D,EAAMA,EAAKtH,MAAMwH,EAAA7J,KAAA,EACvBC,MAAMzB,IAAIC,YAAa,CACrC0G,OAAQ,OACRa,KAAM4D,IACP,KAAD,EAHO,OAAH1E,EAAG2E,EAAA3J,KAAA2J,EAAA7J,KAAA,EAIYkF,EAAI/E,OAAO,KAAD,EAAnB,OAANP,EAAMiK,EAAA3J,KAAA2J,EAAAzE,OAAA,SACLxF,GAAM,cAAAiK,EAAA9J,KAAA,GAAA8J,EAAAxJ,GAAAwJ,EAAA,SAEP,IAAIxE,MAAMwE,EAAAxJ,GAAEiF,QAASuE,EAAAxJ,GAAEkF,SAAS,KAAD,oBAAAsE,EAAAvJ,OAAA,GAAAoJ,EAAA,mBAE5C,gBAAAK,GAAA,OAAAN,EAAAlJ,MAAA,KAAAC,UAAA,EAbS,GAaT,KAEDwJ,gBAAezK,YAAAC,cAAAC,MAAG,SAAAwK,IAAA,IAAA/E,EAAAtF,EAAA,OAAAJ,cAAAK,MAAA,SAAAqK,GAAA,cAAAA,EAAAnK,KAAAmK,EAAAlK,MAAA,cAAAkK,EAAAnK,KAAA,EAAAmK,EAAAlK,KAAA,EAEQC,MAAMzB,IAAIE,oBAAqB,CAC7CyG,OAAQ,OACRY,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAC,KAEvB,KAAD,EALO,OAAHhB,EAAGgF,EAAAhK,KAAAgK,EAAAlK,KAAA,EAMYkF,EAAI/E,OAAO,KAAD,EAAnB,OAANP,EAAMsK,EAAAhK,KAAAgK,EAAA9E,OAAA,SACLxF,GAAM,cAAAsK,EAAAnK,KAAA,GAAAmK,EAAA7J,GAAA6J,EAAA,SAEP,IAAI7E,MAAM6E,EAAA7J,GAAEiF,QAAS4E,EAAA7J,GAAEkF,SAAS,KAAD,oBAAA2E,EAAA5J,OAAA,GAAA2J,EAAA,kBAE5C,G,kCC9HL,kCAAO,IAAME,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,mBAAoB,UAAW,UAAW,UAAW,oBAAqB,UAAW,UAAW,oBAAqB,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,QAAS,SAAU,QAAS,MAAO,O,qNC2frUC,UA1eO,WAClB,IAAQ1E,EAAiB2E,cAAjB3E,aAIRtG,qBAAU,WACNkL,KACAC,KACA,IAAMC,EAAeC,SAASC,cAAc,gBAC5C,GAAIF,EAAc,CACd,IAAMG,EAAaH,EAAaI,YAChCC,EAAcF,EAClB,CACJ,GAAG,IAGH,IAAAlK,EAAoBC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA3BqK,EAAEnK,EAAA,GAAEoK,EAAKpK,EAAA,GAGhBG,EAAoCJ,mBAAS,GAAEK,EAAAH,YAAAE,EAAA,GAA5B+J,GAAF9J,EAAA,GAAeA,EAAA,IAChCE,EAA4CP,mBAAS,CAAC,GAAEQ,EAAAN,YAAAK,EAAA,GAAjD+J,EAAc9J,EAAA,GAAE+J,EAAiB/J,EAAA,GACxCgK,EAAsCxK,mBAAS,IAAGyK,EAAAvK,YAAAsK,EAAA,GAA3CvE,EAAWwE,EAAA,GAAEC,EAAcD,EAAA,GAClCE,EAAkD3K,mBAAS,CAAC,GAAE4K,EAAA1K,YAAAyK,EAAA,GAAvDE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAC9CG,EAA4C/K,mBAAS,CAAC,GAAEgL,EAAA9K,YAAA6K,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,EAA0DnL,mBAAS,CAAC,GAAEoL,EAAAlL,YAAAiL,EAAA,GAA/DE,EAAqBD,EAAA,GAAEE,EAAwBF,EAAA,GACtDG,EAA0EvL,oBAAS,GAAMwL,EAAAtL,YAAAqL,EAAA,GAAlFE,EAA6BD,EAAA,GAAEE,EAAgCF,EAAA,GACtEG,EAA4C3L,mBAAS,MAAK4L,EAAA1L,YAAAyL,EAAA,GAAnDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAGxCG,EAAgC/L,mBAAS,MAAKgM,GAAA9L,YAAA6L,EAAA,GAAvCE,GAAQD,GAAA,GACfE,IAD4BF,GAAA,GACFhM,mBAAS,OAAKmM,GAAAjM,YAAAgM,GAAA,GAA1BE,IAAFD,GAAA,GAAUA,GAAA,IACtBE,GAAkDrM,oBAAS,GAAMsM,GAAApM,YAAAmM,GAAA,GAA1DE,GAAiBD,GAAA,GAAEE,GAAoBF,GAAA,GAC9CG,GAAsDzM,oBAAS,GAAM0M,GAAAxM,YAAAuM,GAAA,GAA9DE,GAAmBD,GAAA,GAAEE,GAAsBF,GAAA,GAClDG,GAAgC7M,qBAAU8M,GAAA5M,YAAA2M,GAAA,GAAnC9G,GAAQ+G,GAAA,GAAEC,GAAWD,GAAA,GAC5BE,GAA4BhN,mBAAS,IAAGiN,GAAA/M,YAAA8M,GAAA,GAAjChH,GAAMiH,GAAA,GAAEC,GAASD,GAAA,GAClBE,GAASC,iBAAO,MAEtBC,GAAkCrN,mBAAS,IAAGsN,GAAApN,YAAAmN,GAAA,GAAvC/F,GAASgG,GAAA,GAAEC,GAAYD,GAAA,GAC9BE,GAAsCxN,mBAAS,IAAGyN,GAAAvN,YAAAsN,GAAA,GAA3CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAClCG,GAA4B5N,oBAAS,GAAM6N,GAAA3N,YAAA0N,GAAA,GAApCE,GAAMD,GAAA,GAAEE,GAASF,GAAA,GAGlBjE,GAA0B,WAC5B,IAAMoE,EAAmB,GACzBhR,IAAcmE,SAAQ,SAAC8C,EAASgK,GAC5BhK,EAAQR,MAAQgG,IAAOwE,GACvBD,EAAiB9J,KAAKD,EAC1B,IACA0J,GAAe,GAADO,OAAKF,GACvB,EAEMnE,GAAgB,eAAAxL,EAAAQ,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAmP,EAAAjP,EAAAkP,EAAAC,EAAA,OAAAvP,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACA,IAAI8E,KAAQU,UAAUE,GAAc,KAAD,EAAlD9F,EAAME,EAAAI,KACZ6K,EAAMnL,EAAO0B,QACbmM,GAAY7N,EAAO0B,OAAO6E,UAC1BjH,QAAQC,IAAIS,EAAO0B,OAAO6E,UAC1BjH,QAAQC,IAAIsH,IACZuI,GAAoBpP,EAAO0B,QACrBwN,EAAyBvD,GACF,QAAzBsD,EAAAjP,EAAO0B,OAAOoG,mBAAW,IAAAmH,OAAA,EAAzBA,EAA2BI,QAAS,IACX,QAAzBF,EAAAnP,EAAO0B,OAAOoG,mBAAW,IAAAqH,GAAzBA,EAA2BlN,SAAQ,SAAAqN,GAAQ,IAADC,EAAAC,EACtC,GAAO,OAAHF,QAAG,IAAHA,GAAU,QAAPC,EAAHD,EAAKlR,aAAK,IAAAmR,GAAVA,EAAYpR,SAAc,OAAHmR,QAAG,IAAHA,GAAY,QAATE,EAAHF,EAAK9Q,eAAO,IAAAgR,GAAZA,EAAcC,aAAkB,OAAHH,QAAG,IAAHA,KAAKvR,UAAW,CAAC,IAAD2R,EAAAC,EAAAC,EAAAC,EAAAC,EAC9DC,EAAUzR,IAAK2F,MAAK,SAAA+L,GAAC,IAAAC,EAAA,OAAID,EAAExR,WAAe,OAAH8Q,QAAG,IAAHA,GAAY,QAATW,EAAHX,EAAK9Q,eAAO,IAAAyR,OAAT,EAAHA,EAAcR,YAAa,IAClE1K,EAAUjH,IAAcmG,MAAK,SAAA+L,GAAC,OAAIA,EAAEjS,YAAcuR,EAAIvR,SAAS,IACrE,GAAW,OAAPgS,QAAO,IAAPA,KAASxR,WAAoB,OAAPwG,QAAO,IAAPA,KAAShH,YAAmB,OAANiC,QAAM,IAANA,GAAc,QAAR0P,EAAN1P,EAAQ0B,cAAM,IAAAgO,GAAS,QAATC,EAAdD,EAAgBvR,eAAO,IAAAwR,OAAjB,EAANA,EAAyBO,QAAW,OAAHZ,QAAG,IAAHA,GAAU,QAAPM,EAAHN,EAAKlR,aAAK,IAAAwR,OAAP,EAAHA,EAAYzR,WAAY,IAAW,OAAN6B,QAAM,IAANA,GAAc,QAAR6P,EAAN7P,EAAQ0B,cAAM,IAAAmO,GAAW,QAAXC,EAAdD,EAAgBtR,iBAAS,IAAAuR,OAAnB,EAANA,EAA2BI,QAAe,OAAPH,QAAO,IAAPA,OAAO,EAAPA,EAASxR,aAAc,EAAG,CAAC,IAAD4R,EACjKC,EAAML,EAAQxR,UAAY,KAAS,OAAH+Q,QAAG,IAAHA,GAAU,QAAPa,EAAHb,EAAKlR,aAAK,IAAA+R,OAAP,EAAHA,EAAYhS,SAC7CwN,EAAkByE,KACnBlB,EAAuBkB,GAAOrL,EAC9B6G,EAAoBjJ,YAAC,CAAC,EAAIuM,IAC1BmB,GAAwBN,EAAY,OAAHT,QAAG,IAAHA,OAAG,EAAHA,EAAKlR,MAAO2G,GAC7CuL,GAA2BvL,GAEnC,CACJ,CACJ,KAEJzF,QAAQC,IAAI,SAAU2L,GACtB2D,IAAU,GAAM,yBAAA3O,EAAAQ,OAAA,GAAAZ,EAAA,KAEnB,kBA5BqB,OAAAX,EAAAwB,MAAA,KAAAC,UAAA,KA8BhBwO,GAAsB,SAAClE,GACzB,GAAIA,EAAI,CAAC,IAADqF,EACEC,EAAmB,OAAFtF,QAAE,IAAFA,GAAS,QAAPqF,EAAFrF,EAAI9M,aAAK,IAAAmS,OAAP,EAAFA,EAAWE,QAAO,SAAAC,GAAE,IAAAC,EAAA,OAAc,QAAVA,EAAAzF,EAAG/M,eAAO,IAAAwS,OAAA,EAAVA,EAAYT,QAAQQ,EAAGvS,WAAY,CAAC,IACnFkQ,GAAYuC,YAAKJ,GACrB,CAEJ,EAGMK,GAAY,SAACC,EAAGC,GAClB1F,EAAkB0F,EACtB,EACMC,GAAY,SAACC,GAEf,IADA,IAAIjB,EAAIiB,EAAGzO,OACJwN,KAAOA,EAAEkB,YAAclB,EAAEkB,UAAUC,SAAS,gBAC/CnB,EAAIA,EAAEoB,WAEV,GAAIpB,GAA4B,KAAvBA,EAAEqB,UAAUC,OAEjB,OAAO,EAEXL,EAAGM,gBACP,EAGMlB,GAA0B,SAACN,EAAS7R,EAAO6G,GAC7C,IAAMyM,EAAmBzK,EACnB0K,EAAa,CACnBA,GAAgB,IAChBA,YAAyB,IACzBA,YAAyB,IACzBA,EAAWrT,MAAQF,EACnBuT,EAAWjT,QAAUuR,EACrB0B,EAAWC,QAAU3M,EAAQ9G,QAC7BwT,EAAW1T,UAAYgH,EAAQhH,UAC/B0T,EAAWhK,UAAW,EACtBgK,EAAW/J,gBAAkB,IAC7B+J,EAAW9J,cAAgB,aAC3B6J,EAAiBxM,KAAKyM,GACtBjG,EAAcoF,YAAKY,GACvB,EACMlB,GAA6B,SAACvL,GAChC,IAAM4M,EAAsB5F,EACvB4F,EAAoB5M,EAAQhH,WAG7B4T,EAAoB5M,EAAQhH,YAAc,EAF1C4T,EAAoB5M,EAAQhH,WAAa,EAI7CiO,EAAiBrJ,YAAC,CAAC,EAAIgP,GAC3B,EA6BMC,GAAa,SAACd,EAAGf,EAAS7R,GAC5B,IAAI2T,EAAkBzG,EACtB,GAAIuB,EAAgB,CAEhB,IAAMmF,EAAYnF,EAAeoD,QAAQxR,UAAY,IAAMoO,EAAezO,MAAMC,QAChF0T,EAAkBlG,EAAkBmG,GACpCC,GAAcpF,EAAeoD,QAAQxR,UAAWoO,EAAezO,MAAMC,QAASwN,EAAkBmG,GAAW/T,UAC/G,CACA,IAAMmR,EAAyBvD,EACzByE,EAAML,EAAQxR,UAAY,IAAML,EAAMC,QAC5CwN,EAAkByE,GAAOyB,EACzBjG,EAAoBjJ,YAAC,CAAC,EAAIuM,IAC1BmB,GAAwBN,EAAS7R,EAAO2T,GACxCvB,GAA2BuB,GAxCU,SAACG,EAAWC,GACjD,IAAM7B,EAAM4B,EAAY,IAAMC,EACxBC,EAA6B/F,EAC9B+F,EAA2B9B,GAG5B8B,EAA2B9B,IAAQ,EAFnC8B,EAA2B9B,GAAO,EAItChE,EAAwBzJ,YAAC,CAAC,EAAIuP,IAC1BA,EAA2B9B,GAAO,IAClC5D,GAAiC,GACjC2F,YAAW,WACP3F,GAAiC,EACrC,GAAG,KAEX,CA0BI4F,CAAiCrC,EAAQxR,UAAWsT,EAAgB9T,WACpEsN,EAAkB,CAAC,GACnBuB,EAAkB,KACtB,EAEMmF,GAAgB,SAACC,EAAWK,EAASJ,GAEvC,IACM/C,EAAyBvD,SACxBuD,EAFK8C,EAAY,IAAMK,GAG9BzG,EAAoBjJ,YAAC,CAAC,EAAIuM,IAG1B,IAAMsC,EAAmBzK,EACnBuL,EAAwB,OAAhBd,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBvN,MAAK,SAAAsO,GAAG,IAAAC,EAAAC,EAAA,OAAa,QAATD,EAAAD,EAAIrU,aAAK,IAAAsU,OAAA,EAATA,EAAWrU,WAAYkU,IAAsB,QAAXI,EAAAF,EAAIxC,eAAO,IAAA0C,OAAA,EAAXA,EAAalU,aAAcyT,CAAS,IAC9GM,GAAS,IACTd,EAAiBkB,OAAOJ,EAAO,GAC/B9G,EAAcoF,YAAKY,KAIvB,IAAMG,EAAsB5F,EAC5B4F,EAAoBM,IAAc,EAC9BN,EAAoBM,IAAc,UAC3BN,EAAoBM,GAE/BjG,EAAkB2F,EACtB,EAIMgB,GAA8B,SAACX,EAAWC,GAC5C,IAAKD,IAAcC,EACf,OAAO,EAEX,IAAM7B,EAAM4B,EAAY,IAAMC,EAE9B,OADA3S,QAAQC,IAAI6Q,GACLjE,EAAsBiE,GAAO,CACxC,EAoBMwC,GAAc,WAGhB,IAAIC,EAA6B,MAAhBC,KAAKC,SAAoB,EACtCC,EAA8B,MAAhBF,KAAKC,SAAoB,EAG3C,OAFAF,GAAa,MAAQA,EAAUI,SAAS,KAAKC,OAAO,KACpDF,GAAc,MAAQA,EAAWC,SAAS,KAAKC,OAAO,GAE1D,EACMC,GAAc,eAAAzT,EAAAC,YAAAC,cAAAC,MAAG,SAAAgG,IAAA,IAAAuN,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzE,EAAA0E,EAAAC,EAAA3J,EAAAlB,EAAA8K,EAAAC,EAAAC,EAAA,OAAAjU,cAAAK,MAAA,SAAA+F,GAAA,cAAAA,EAAA7F,KAAA6F,EAAA5F,MAAA,cAAA4F,EAAA5F,KAAA,EAEE0T,IAAY7F,GAAO8F,SAAS,KAAD,EAOhD,IAPMX,EAAMpN,EAAA1F,KACN+S,EAAUD,EAAOY,YACvB9G,GAASmG,GAEHC,EAAaW,KAAKZ,EAAQa,MAAM,KAAK,IACrCX,EAAaF,EAAQa,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAAK,GAC5DV,EAAK,IAAIW,WAAWb,EAAWjE,QAC5BN,EAAI,EAAGA,EAAIuE,EAAWjE,OAAQN,IACnCyE,EAAGzE,GAAKuE,EAAWc,WAAWrF,GAKC,OAH7B0E,EAAO,IAAIY,KAAK,CAACb,GAAK,CAAErP,KAAMoP,IAC9BG,EAAYd,KACZ7I,EAAO,IAAIuK,KAAK,CAACb,GAAOC,EAAY,QACpC7K,EAAW6K,EAAY,OAAM1N,EAAA5F,KAAA,IACd,IAAIqI,KAAYmB,WAAWG,GAAM,KAAD,GAAzC,GACG,YADH/D,EAAA1F,KACY,CAAA0F,EAAA5F,KAAA,gBAAA4F,EAAA5F,KAAA,IACD,IAAIqI,KAAY2B,kBAAkB,KAAD,GAA1C,GAAJwJ,EAAI5N,EAAA1F,QACK,QAAXqT,EAAAC,EAAKlS,cAAM,IAAAiS,OAAA,EAAXA,EAAatE,QAAS,GAAC,CAAArJ,EAAA5F,KAAA,SAEvB,OADMyT,EAAaD,EAAKlS,OAAO6S,UAAUtQ,MAAK,SAAAuQ,GAAQ,IAADC,EAAE,OAAgB,QAATA,EAAAD,EAAIE,aAAK,IAAAD,OAAA,EAATA,EAAWvE,QAAQwD,KAAc,CAAE,IACjG1N,EAAA7F,KAAA,GAAA6F,EAAA5F,KAAA,IAKU,IAAIqI,KAAYe,0BAA0BqK,EAAWc,QAAS,aAAc9L,GAAU,KAAD,GAAA7C,EAAA5F,KAAA,iBAAA4F,EAAA7F,KAAA,GAAA6F,EAAAvF,GAAAuF,EAAA,UAI3F1G,QAAQC,IAAI,SAAQ,eAAAyG,EAAA7F,KAAA,GAAA6F,EAAA5F,KAAA,IAGd,IAAIqI,KAAYW,4BAA4ByK,EAAWc,QAAS,aAAc9L,GAAU,KAAD,GAAA7C,EAAA5F,KAAA,iBAAA4F,EAAA7F,KAAA,GAAA6F,EAAA4O,GAAA5O,EAAA,UAE7F1G,QAAQC,IAAI,SAAQ,QAIhC0F,MAAM,sCAAqC,yBAAAe,EAAAtF,OAAA,GAAAmF,EAAA,4BAC9C,kBAxCmB,OAAAnG,EAAAiB,MAAA,KAAAC,UAAA,KAsGpB,OACIuC,cAAA0R,WAAA,CAAA3R,SAEQ0L,GAASzL,cAAA,OAAAD,SACLD,eAAA,OAAKU,UAAU,eAAcT,SAAA,CAErBqJ,EAAgCpJ,cAAC2R,IAAK,CAACvQ,MAAM,UAASrB,SAAC,4CAE5CC,cAAA0R,WAAA,IAEf1R,cAAA,MAAIQ,UAAU,gBAAeT,SAAC,mBAC9BD,eAAA,OAAKU,UAAU,2BAA0BT,SAAA,CACrCC,cAACmB,IAAM,CAACX,UAAU,OAAOY,MAAM,OAAOC,QAnE3C,WACf8I,IAAqB,EACzB,EAiEkFpK,SAAC,gBAG1DmK,IAAqBlK,cAACgF,UAAQ,CAAC/I,UAAWiO,GAAmBhO,aAAciO,GAAsBlF,UAAWA,KAC5G2E,GACD5J,cAACmB,IAAM,CAACX,UAAU,MAAMY,MAAM,OAAOC,QA9DxC,WACjBkJ,IAAuB,EAC3B,EA4DmFxK,SAAC,iBAG3DuK,IAAuBtK,cAACjE,IAAU,CAACE,UAAWqO,GAAqBpO,aAAcqO,KAClFvK,cAACmB,IAAM,CAACX,UAAU,MAAMY,MAAM,OAAOC,QAxD3C,WACd,IAAMwC,EAAcoB,GAAUtF,KAAI,SAAAiS,GAAI,OAAIA,EAAK5W,OAAO,IACtDmB,QAAQC,IAAI,SAAUyH,GACtB,IAAIjB,EAAY,IAAIE,QACpBF,EAAUG,OAAO,eAAgB,oBACjC,IAAI8O,EAAM3O,KAAKC,UAAU,CACrB,YAAe4E,EAAGhE,YAClB,YAAe,kBACf,SAAYgE,EAAG9D,SACf,SAAYP,GACZ,OAAUC,GACV,QAAWoE,EAAG5D,QACd,UAAa4D,EAAG3D,UAChB,QAAW2D,EAAG1D,QACd,QAAWR,EACX,UAAakE,EAAG3M,UAChB,UAAY,EACZ,gBAAmB2M,EAAGxD,gBACtB,eAAiB,IAAIE,MAAOC,iBAC5B,YAAed,IAQnB1G,MAAM,gEANe,CACjBkF,OAAQ,OACRY,QAASJ,EACTK,KAAM4O,EACNC,SAAU,WAGTC,MAAK,SAAAnV,GAAQ,OAAIA,EAASoV,MAAM,IAChCD,MAAK,SAAAlV,GAAM,OAAIV,QAAQC,IAAIS,EAAO,IAClCoV,OAAM,SAAAC,GAAK,OAAI/V,QAAQC,IAAI,QAAS8V,EAAM,IAC/CpQ,MAAM,gCACV,EAwBgF/B,SAAC,SAGzDC,cAACmB,IAAM,CAACX,UAAU,MAAMY,MAAM,OAAOC,QAAS2O,GAAejQ,SAAC,YAIlEC,cAAA,OAAAD,SACID,eAAA,OAAKqS,IAAKrH,GAAO/K,SAAA,CACbC,cAAA,SACAA,cAACoS,IAAI,CAAArS,SACDD,eAAA,OAAKU,UAAU,wBAAuBT,SAAA,CAClCD,eAACuS,IAAS,CAAC7R,UAAU,wBAAuBT,SAAA,CACxCC,cAAA,KAAAD,SAAG,UACHC,cAACsS,IAAK,CACFC,GAAG,WACHjT,KAAK,OACL0B,KAAK,OACLC,SAAU,SAAC0M,IApG9B,SAACA,GACtBjD,GAAYiD,EAAEtO,OAAOmT,MACzB,CAkG+DC,CAAiB9E,EAAG,EACvCnN,UAAU,kBAGlBV,eAACuS,IAAS,CAAC7R,UAAU,wBAAuBT,SAAA,CACxCC,cAAA,KAAAD,SAAG,QACHC,cAACsS,IAAK,CACFC,GAAG,SACHjT,KAAK,OACL0B,KAAK,OACLC,SAAU,SAAC0M,IA3GhC,SAACA,GACpB9C,GAAU8C,EAAEtO,OAAOmT,MACvB,CAyG+DE,CAAe/E,EAAG,EACrCnN,UAAU,uBAM1BR,cAAA,SAAOQ,UAAU,cAAaT,SAC1BD,eAAA,SAAAC,SAAA,CACIC,cAAA,OAAKQ,UAAU,WAAUT,SACrBD,eAAA,MAAAC,SAAA,CACIC,cAAA,MAAIQ,UAAU,qBAAoBT,SAAC,SAClCkF,IAAaA,GAAUtF,KAAI,SAAC5E,GACzB,OACI+E,eAAA,MAAIU,UAAU,sBAAqBT,SAAA,CAAsBhF,EAAME,MAC3D+E,cAAA,UAAQQ,UAAU,eAAea,QAAS,kBApH5E,SAACgE,GAEnB,GADsBsN,OAAOC,QAAQ,+CAClB,CACf,IAAMC,EAAiB5N,GAAUqI,QAAO,SAACwF,GAAI,OAAKA,EAAK9X,UAAYqK,CAAO,IAC1E6F,GAAa2H,EACjB,CACJ,CA8GwGE,CAAchY,EAAMC,QAAQ,EAAC+E,SAACC,cAACgT,IAAQ,QADlDjY,EAAMC,QAIvD,SAIRgF,cAAA,MAAAD,SACK5E,IAAKwE,KAAI,SAACkN,GACP,OACI/M,eAAA,OAAAC,SAAA,CACID,eAAA,MAAIU,UAAU,qBAAoBT,SAAA,CAAE8M,EAAEvR,UAAU,IAAEuR,EAAEtR,WACnD0J,IAAaA,GAAUtF,KAAI,SAACsT,GAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACzBtG,EAAMJ,EAAEzR,UAAY,IAAM6X,EAAEjY,QAClC,OACIgF,cAAA,MACIwT,WAAW,EACXC,WAAY5F,GACZ6F,OAAQ,SAAC/F,GAAC,OAAKc,GAAWd,EAAGd,EAAGoG,EAAE,EAClCU,YAAa,SAAChG,GAnN1ElE,EAAkB,CACdmD,QAkNwGC,EAlN/F9R,MAkNkGkY,GAAE,EAErDV,GAAItF,EACJzM,UAAS,cAAAqL,OAAgB2D,GAA4B3C,EAAEzR,UAA4C,QAAnC8X,EAAwB,QAAxBC,EAAE3K,EAAkByE,UAAI,IAAAkG,OAAA,EAAtBA,EAAwBvY,iBAAS,IAAAsY,IAAI,MAAQ,QAAU,IACzH9S,MAAO,CAAEwT,gBAAuC,QAAxBR,EAAE5K,EAAkByE,UAAI,IAAAmG,OAAA,EAAtBA,EAAwBhS,OAAQrB,SAE1DD,eAAA,OAAKU,UAAS,wBAAAqL,OAAgD,QAAhDwH,EAA0B7K,EAAkByE,UAAI,IAAAoG,OAAA,EAAtBA,EAAwB7S,UAAS,KAAIT,SAAA,CACzEC,cAAA,OAAKQ,UAAU,eAAcT,SACF,QADEuT,EACxB9K,EAAkByE,UAAI,IAAAqG,OAAA,EAAtBA,EAAwBzY,UAE7BmF,cAAA,OAAKQ,UAAU,sBAAqBT,SACT,QAAtBwT,EAAA/K,EAAkByE,UAAI,IAAAsG,GAAtBA,EAAwB1Y,QACrBmF,cAAA,UACIQ,UAAU,cACVa,QAAS,kBAAMuN,GAAc/B,EAAEzR,UAAW6X,EAAEjY,QAASwN,EAAkByE,GAAKrS,UAAU,EAACmF,SAEvFC,cAACgT,IAAQ,MAEbhT,cAAA0R,WAAA,UAjBPzE,EAsBjB,MAGZ,gBAMpBjN,cAAA,OAAKQ,UAAU,oBAAmBT,SAC7BsL,GAAY1L,KAAI,SAACiC,EAASuN,GACvB,IAAQvU,EAAuBgH,EAAvBhH,UAAWC,EAAY+G,EAAZ/G,QACnB,OACIiF,eAAA,OACIM,MAAO,CAAEwT,gBAAiBhS,EAAQR,OAElCZ,UAAU,eACVgT,WAAW,EACXG,YAAa,SAAChG,GAAC,OAAKD,GAAUC,EAAG/L,EAAQ,EACzCiS,UAAW,SAAClG,GAvP5CzF,EAAkB,CAAC,EAuP2C,EAC9B4L,aAAc,SAACnG,GAAC,OAAKD,GAAUC,EAAG/L,EAAQ,EAC1CmS,YAAa,SAACpG,GAAC,OAtP/B,SAACA,GACjBxR,QAAQC,IAAIuR,GACZ,IAAMqG,EAAIrG,EAAEsG,QAAQ,GAAGC,QACjBC,EAAIxG,EAAEsG,QAAQ,GAAGG,QACnBC,EAAO3M,SAAS4M,iBAAiBN,EAAGG,GACxCrS,MAAM,cAAeuS,EAAK9B,GAC9B,CAgPwDwB,CAAYpG,EAAE,EAAC5N,SAAA,CAEnCC,cAAA,MAAAD,SAAKlF,IACJ+N,EAAehO,GAAa,GACzBoF,cAAA,QAAMQ,UAAS,gBAAmBgT,WAAW,EAAMzT,SAC9C6I,EAAehO,KAGxBoF,cAAA,UAAQQ,UAAU,eAAea,QAAS,kBAjLtD,SAACG,GAErB,GADsBmR,OAAOC,QAAQ,iDAClB,CACf,IAAM2B,EAAkBlJ,GAAYiC,QAAO,SAACwF,GAAI,OAAKA,EAAKlY,YAAc4G,CAAS,IACjF8J,GAAeiJ,EACnB,CACJ,CA2KoFC,CAAgB5S,EAAQhH,UAAU,EAACmF,SAACC,cAACgT,IAAQ,QAdxFpY,EAkBjB,WAGHoF,cAAA,WAKzB,C","file":"static/js/5.55caa814.chunk.js","sourcesContent":["import {v4 as uuidv4} from \"uuid\"\nexport const teachers_list = [\n        {\n            FacultyID: 22,\n            Faculty: \"MYK\",\n            subject: \"Physics\"\n        },\n        \n        {\n            FacultyID: 3038,\n            Faculty: \"KPS\",\n            subject:\"Chemistry\"\n        },\n\n        {\n            FacultyID: 2029,\n            Faculty: \"MRS\",\n            subject:\"Chemistry\"\n        },\n\n        {\n            FacultyID: 3051,\n            Faculty: \"MAS\",\n            subject:\"Physics\"\n        },\n\n        {\n            FacultyID: 3050,\n            Faculty: \"RSS\",\n            subject:\"Physics\"\n        },\n        {\n            FacultyID: 25,\n            Faculty: \"NMS\",\n            subject:\"Biology\"\n        },\n        {\n            FacultyID: 3037,\n            Faculty: \"HDS\",\n            subject:\"Chemistry\"\n        },\n        {\n            FacultyID: 3032,\n            Faculty: \"MNM\",\n            subject: \"Biology\"\n        },\n        \n        {\n            FacultyID: 1023,\n            Faculty: \"SJ\",\n            subject:\"Biology\"\n        },\n\n        {\n            FacultyID: 1025,\n            Faculty: \"AJ\",\n            subject:\"Biology\"\n        },\n\n        {\n            FacultyID: 1026,\n            Faculty: \"DMPS\",\n            subject:\"Chemistry\"\n        },\n\n        \n       \n        \n        {\n            FacultyID: 1027,\n            Faculty: \"PSJ\",\n            subject:\"Physics\"\n        },\n        {\n            FacultyID: 3033,\n            Faculty: \"YBS\",\n            subject:\"Biology\"\n        },\n        {\n            FacultyID: 3030,\n            Faculty: \"AKS\",\n            subject:\"Chemistry\"\n        },\n        {\n            FacultyID: 2028,\n            Faculty: \"AMS\",\n            subject:\"Maths\"\n        },\n        {\n            FacultyID: 3031,\n            Faculty: \"NDS\",\n            subject:\"Physics\"\n        },\n        {\n            FacultyID: 3052,\n            Faculty: \"HWS\",\n            subject:\"Physics\"\n        },\n        {\n            FacultyID: 1029,\n            Faculty: \"JRS\",\n            subject:\"Chemistry\"\n        },\n        {\n            FacultyID: 3053,\n            Faculty: \"HTS\",\n            subject:\"Chemistry\"\n        },\n    ]; \n    \n\nexport const batch= [\n    {\n        BatchID: 1,\n        Batch: \"A1\",\n        CourseID: 3\n    },\n    {\n        BatchID: 6,\n        Batch: \"A2\",\n        CourseID: 3\n    },\n    {\n        BatchID: 10,\n        Batch: \"A3\",\n        CourseID: 3\n    },\n    {\n        BatchID: 7,\n        Batch: \"A4\",\n        CourseID: 3\n    },\n    {\n        BatchID: 3,\n        Batch: \"C1\",\n        CourseID: 1\n    },\n    {\n        BatchID: 15,\n        Batch: \"C2\",\n        CourseID: 1\n    },\n    {\n        BatchID: 2,\n        Batch: \"B1\",\n        CourseID: 2\n    },\n    {\n        BatchID: 3049,\n        Batch: \"B2\",\n        CourseID: 2\n    },\n    //MORE BATCHES ADDED WITH A FAKE BATCHID AND FAKE COURSEID NEED TO CHANGE LATER\n\n    {\n        BatchID: 20,\n        Batch: \"JO1\",\n        CourseID: 13\n    },\n    {\n        BatchID: 3042,\n        Batch: \"JXI-1\",\n        CourseID: 11\n    },\n    {\n        BatchID: 3061,\n        Batch: \"JXI-2\",\n        CourseID: 11\n    },\n    {\n        BatchID: 22,\n        Batch: \"JXII-1\",\n        CourseID: 12\n    },\n    {\n        BatchID: 3079,\n        Batch: \"JEE XL\",\n        CourseID: 1025\n    },\n    {\n        BatchID: 3078,\n        Batch: \"JEE adv\",\n        CourseID: 13\n    }\n]\n\n\nexport const time= [\n    {\n        LectureID: 1,\n        Lecture: \"L1\",\n        Time_From: \"08:30 AM\",\n        Time_To: \"09:45 AM\"\n    },\n    {\n        LectureID: 2,\n        Lecture: \"L2\",\n        Time_From: \"09:50 AM\",\n        Time_To: \"11:05 AM\"\n    },\n    {\n        LectureID: 3,\n        Lecture: \"L3\",\n        Time_From: \"11:20 AM\",\n        Time_To: \"12:35 PM\"\n    },\n    {\n        LectureID: 4,\n        Lecture: \"L4\",\n        Time_From: \"12:40 PM\",\n        Time_To: \"01:55 PM\"\n    },\n    {\n        LectureID: 5,\n        Lecture: \"L5\",\n        Time_From: \"02:00 PM\",\n        Time_To: \"03:15 PM\"\n    },\n    {\n        LectureID: 6,\n        Lecture: \"L6\",\n        Time_From: \"03:20 PM\",\n        Time_To: \"04:35 PM\"\n    },\n    {\n        LectureID: 7,\n        Lecture: \"L7\",\n        Time_From: \"04:50 PM\",\n        Time_To: \"06:05 PM\"\n    },\n    {\n        LectureID: 8,\n        Lecture: \"L8\",\n        Time_From: \"06:15 PM\",\n        Time_To: \"07:30 PM\"\n    }\n]\n","const ENV_URL = 'https://api.aayamcareerinstitute.co.in/api'; // producation fn\nconst DEV_URL = 'http://localhost:5001'; // producation fn\nconst BASE_URL= ENV_URL\n\n\n\nexport const URL = {\n    UPLOAD_FILE: BASE_URL + '/UploadFilesAttachment',\n    GET_UPLOAD_FILE_URL: BASE_URL + '/GetFiles', \n    GET_SAVE_TIMETABLE_URL: BASE_URL+ '/AddUpdateTimeTable',\n    GET_ALL_TT: BASE_URL + '/GetTimeTable', \n\n    GET_EDIT_TT: BASE_URL + '/GetTimeTableByDate',\n\n\n\n};  \n","import React, { useState, useEffect } from 'react';\nimport { batch } from '../List/List';\nimport { teachers_list } from '../List/List';\n// import { teachers_list } from '../../../const/teacherList';\n// import { batch } from '../../../const/batchList';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport \"./TeacherForm.css\";\n\nconst AddTeacher = ({ showModal, setShowModal }) => {\n  console.log(\",,tt\", teachers_list);\n\n  /************************************Use Effect****************************************** */\n  useEffect(() => {\n    if (showModal) {\n      const fetchApiData = async () => {\n        try {\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\n          const result = await response.json();\n          setApiData(result);\n        } catch (error) {\n          console.log('Error fetching API data:', error);\n        }\n      };\n\n      fetchApiData();\n    }\n  }, [showModal]);\n\n  /***********************Use State***************************************************** */\n  const [faculties, setFaculties] = useState(teachers_list);\n  // const [batches, setBatches] = useState(JSON.parse(localStorage.getItem('batches')) || batch);\n  const [apiData, setApiData] = useState({});\n  const [checkedItems, setCheckedItems] = useState({});\n\n  /*************************other consts*************************************************** */\n  const { Object: responseObject = {} } = apiData;\n  const { Batch = [], FacultyList = [], UserList = [] } = responseObject;\n  const facultyNameMap = {};\n\n  UserList.forEach((user) => {\n    facultyNameMap[user.UserID] = user.UserName;\n  });\n  /****************************************methods******************************************* */\n  const handleCheckboxChange = (event) => {\n    const { name, checked } = event.target;\n    setCheckedItems({\n      ...checkedItems,\n      [name]: checked,\n    });\n  };\n\n  const updatedFacultyList = FacultyList.map((faculty) => ({\n    ...faculty,\n    Faculty: facultyNameMap[faculty.FacultyID] || faculty.Faculty,\n  }));\n\n  const addToFaculty = () => {\n    const newTeachersList = teachers_list;\n\n    for (const facultyID in checkedItems) {\n      if (checkedItems[facultyID]) {\n        const selectedItem = updatedFacultyList.find(\n          (faculty) => faculty.FacultyID === parseInt(facultyID)\n        );\n\n        if (selectedItem) {\n          const facultyUser = UserList.find(\n            (user) => user.UserID === selectedItem.FacultyID\n          );\n          const facultyName = facultyUser ? facultyUser.UserName : selectedItem.Faculty;\n\n          const isTeacherAlreadyAdded = newTeachersList.some(\n            (teacher) => teacher.FacultyID === selectedItem.FacultyID\n          );\n\n          if (!isTeacherAlreadyAdded) {\n            newTeachersList.push({\n              FacultyID: selectedItem.FacultyID,\n              Faculty: facultyName,\n            });\n          }\n        }\n      }\n    }\n\n    console.log(newTeachersList);\n    setFaculties(newTeachersList);\n    alert(\"faculty added successfully\");\n\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  /**********************************************Template to return******************************** */\n  return (\n    <div>\n      <h1>Add New Teacher</h1>\n      <Modal isOpen={showModal} toggle={closeModal} style={{maxWidth:'320px'}}>\n        <ModalHeader toggle={closeModal}>Select Teachers from the list</ModalHeader>\n        <ModalBody>\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll',maxWidth:'300px'}}>\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\n              {updatedFacultyList.map((faculty) => {\n                const { FacultyID, bgColor, className } = faculty;\n                const facultyUser = UserList.find((user) => user.UserID === FacultyID);\n                const facultyName = facultyUser ? facultyUser.UserName : faculty.Faculty;\n                return (\n                  <li key={faculty.FacultyID}>\n                  <div className=\"add-faculty-style\">\n                      <input\n                        type=\"checkbox\"\n                        name={faculty.FacultyID}\n                        checked={checkedItems[faculty.FacultyID] || false}\n                        onChange={handleCheckboxChange}\n                        className=\"addfaculty-checkbox-style\"\n                      />\n                      {facultyName}\n                    </div>\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={addToFaculty}>Add</Button>{' '}\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\nexport default AddTeacher;\n\n\n\n\n\n\n","import { URL } from '../const/url';\n\nexport default class TtApi {\n    getTtList = async () => {\n        try {\n            const res = await fetch(URL.GET_ALL_TT, {\n                method: 'GET',\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\ngetEditTt = async (fromDateEdit) => {\n    try {\n        // const formData = new FormData();\n        // formData.append('file', file, file.name);\n        const myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n        const res = await fetch(URL.GET_EDIT_TT, {\n            method: 'POST',\n            headers: myHeaders,\n            body: JSON.stringify({\n            FromDate: fromDateEdit.replaceAll(\"-\", \"/\"),\n        })});\n        const result = await res.json();\n        return result;\n    } catch (e) {\n        throw new Error(e.message, e.options);\n    }\n}\n\nsaveTt = async (fromDate,toDate,lectureList,sentBatchID) => {\n    try {\n        const myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n        const res = await fetch(URL.GET_SAVE_TIMETABLE_URL, {\n            method: 'POST',\n            headers: myHeaders,\n            body: JSON.stringify({\n                TimeTableID: 0,\n                Description: \"time table save\",\n                DateType: \"single\",\n                FromDate: fromDate,\n                ToDate: toDate,\n                ShiftID: 1,\n                SessionID: 5,\n                Session: \"string\",\n                // BatchID: [\n                //   1, 6, 10, 7, 3, 15, 2, 3049, 20, 3042, 3061, 22, 13, 14\n                // ],,\n                BatchID:sentBatchID,\n                LectureID: [\n                  1, 2, 3, 4, 5, 6, 7, 8\n                ],\n                IsActive: true,\n                CreatedByUserID: 1,\n                CreatedOnDate: new Date().toLocaleString(),\n                LectureList: lectureList\n        })});\n        const result = await res.json();\n        return result;\n    } catch (e) {\n        throw new Error(e.message, e.options);\n    }\n}\n\n\n\n}","\nimport React, { useState, useEffect } from 'react';\nimport { batch } from '../List/List';\n// import { batch } from '../../../const/batchList';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport \"./AddBatch.css\"\n\nconst AddBatch = ({ showModal, setShowModal, batchList }) => {\n  console.log(\",,bb\", batch);\n  /******************************************Use Effect********************************************** */\n  useEffect(() => {\n    if (showModal) {\n      const fetchApiData = async () => {\n        try {\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\n          const result = await response.json();\n          setApiData(result);\n        } catch (error) {\n          console.log('Error fetching API data:', error);\n        }\n      };\n\n      fetchApiData();\n\n    }\n  }, [showModal]);\n  /********************************************Use State****************************************** */\n  const [batches, setBatches] = useState(batchList);\n  const [apiData, setApiData] = useState({});\n  const [checkedItems, setCheckedItems] = useState({});\n\n  /*****************************Other consts******************************************************** */\n  const { Object: responseObject = {} } = apiData;\n  const { Batch = [] } = responseObject;\n\n  /***************************************Methods*************************************************** */\n  const handleCheckboxChange = (event) => {\n    const { name, checked } = event.target;\n    setCheckedItems({\n      ...checkedItems,\n      [name]: checked,\n    });\n  };\n\n  const addToBatch = () => {\n    const newBatches = batchList;\n    for (const batchID in checkedItems) {\n      if (checkedItems[batchID]) {\n        const selectedItem = Batch.find((batch) => batch.BatchID === parseInt(batchID));\n        if (selectedItem && !newBatches.find((batch) => batch.BatchID === selectedItem.BatchID)) {\n          newBatches.push({\n            BatchID: selectedItem.BatchID,\n            Batch: selectedItem.Batch,\n            CourseID: selectedItem.CourseID,\n          });\n        }\n      }\n    }\n    console.log(newBatches)\n    setBatches(newBatches);\n    alert(\"batches added successfully\");\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  /***************************Template to return******************************************************* */\n  return (\n    <div>\n      <Modal isOpen={showModal} toggle={closeModal} style={{ maxWidth: '320px' }}>\n        <ModalHeader toggle={closeModal}>Select Batches from the list</ModalHeader>\n        <ModalBody>\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\n              {Batch.map((batch) => (\n                <li key={batch.BatchID}>\n                  <div className=\"add-batch-style\">\n                    <input\n                      type=\"checkbox\"\n                      name={batch.BatchID}\n                      checked={checkedItems[batch.BatchID] || false}\n                      onChange={handleCheckboxChange}\n                      className=\"addbatch-checkbox-style\"\n                    />\n                    {batch.Batch}\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={addToBatch}>Add</Button>{' '}\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\nexport default AddBatch;\n\n","import { URL } from '../const/url';\n\nexport default class UploadApi {\n    // getUserWalletBalance = async (userId) => {\n    //     try {\n    //         GlobalEmitterService.emit(true);\n    //         const token = `Bearer ${AuthService.getToken()}`;\n    //         const res = await fetch(URL.USER_WALLET_BALANCE + '?' + new URLSearchParams({\n    //             userId\n    //         }), {\n    //             method: 'GET',\n    //             headers: { 'Content-Type': 'application/json', 'Authorization': token },\n    //         });\n    //         const result = await res.json();\n    //         GlobalEmitterService.emit(false);\n    //         return result;\n    //     } catch (e) {\n    //         GlobalEmitterService.emit(false);\n    //         throw new Error(e.message, e.options);\n    //     }\n    // }\n\n\n    getWattsappApi = async (url, message, cell, fileName) => {\n        try {\n            console.log(\"url\", url);\n            console.log(\"mesage\", message);\n            console.log(\"cel\", cell);\n            console.log(\"file\", fileName);\n            // https://ziper.io/api/send.php?number=917898118503&type=media&message=test%20message&media_url=https://api.aayamcareerinstitute.co.in//Uploads/Files/File_3431223213168.pdf&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\n            const res = await fetch(\"https://ziper.io/api/send.php\" + '?' + new URLSearchParams({\n                number: cell,\n                type: \"media\",\n                message: message,\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\n                filename: fileName,\n                instance_id: \"6453479F141A2\",\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\n            }), {\n                method: 'GET',\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n\n    getWattsappGroupApiTeachers = async (url, message, fileName) => {\n        try {\n            console.log(\"url\", url);\n            console.log(\"mesage\", message);\n            console.log(\"file\", fileName);\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\n                group_id: \"919977116612-1595572006@g.us\",\n                type: \"media\",\n                message: message,\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\n                filename: fileName,\n                instance_id: \"6453479F141A2\",\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\n            }), {\n                method: 'GET',\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n    getWattsappGroupApiOthers = async (url, message, fileName) => {\n        try {\n            console.log(\"url\", url);\n            console.log(\"mesage\", message);\n            console.log(\"file\", fileName);\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\n                group_id: \"919826362001-1628170376@g.us\",\n                type: \"media\",\n                message: message,\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\n                filename: fileName,\n                instance_id: \"6453479F141A2\",\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\n\n            }), {\n                method: 'GET',\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n    uplaodFile = async (file) => {\n        try {\n            const formData = new FormData();\n            formData.append('file', file, file.name);\n            const res = await fetch(URL.UPLOAD_FILE, {\n                method: 'POST',\n                body: formData,\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n    getUploadedFile = async () => {\n        try {\n            const res = await fetch(URL.GET_UPLOAD_FILE_URL, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({})\n\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n}","export const COLORS = [\"#D4E6F1\", \"#E8DAEF\", \"#008080\", \"#808000\", \"#C39BD3\", \"#76D7C4\", \"#3498DB\", \"#358b79\", \"#847f86\", \"rgb(251, 235, 9)\", \"#CA6F1E\", \"#CCCCFF\", \"#F4D03F\", \"rgb(199, 185, 84)\", \"#979A9A\", \"#F0B27A\", \"rgb(117, 98, 179)\", \"#CD5C5C\", \"#40E0D0\", \"#DAF7A6\", \"#008080\", \"#808000\", \"#FADBD8\", \"green\", \"yellow\", \"white\", \"red\", \"pink\"]\n","import { useParams } from 'react-router-dom';\nimport TtApi from '../../../api/tt.api.js';\nimport \"./EditTimeTable.scss\";\n\n/*TAKING THE BELOW IMPORT FROM TIMETABLEV2* */\nimport html2canvas from 'html2canvas';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { RxCross2 } from \"react-icons/rx\";\nimport { Alert } from 'reactstrap';\nimport { COLORS } from '../../../const/color.const';\nimport AddBatch from '../AddBatch/AddBatch';\nimport { teachers_list, time } from '../List/List';\n// import \"./TimeTableV2.scss\";\nimport { Button, Form, FormGroup, Input } from \"reactstrap\";\nimport UploadApi from '../../../api/upload.api';\nimport AddTeacher from '../TeacherForm/TeacherForm';\n\nconst EditTimeTable = () => {\n    const { fromDateEdit } = useParams();\n\n    /**************************************** const Section ************************************/\n    /**************************************** Use Effect Section ************************************/\n    useEffect(() => {\n        appenColorTOTeacherList();\n        getEditTimeTable();\n        const tableElement = document.querySelector('.table-style');\n        if (tableElement) {\n            const tableWidth = tableElement.offsetWidth;\n            setTableWidth(tableWidth);\n        }\n    }, []);\n\n    /**************************************** State Section *****************************************/\n    const [tt, setTt] = useState(null);\n\n    /* taking the below useStates from timetable.v2*/\n    const [tableWidth, setTableWidth] = useState(0); // set table width\n    const [draggedTeacher, setDraggedTeacher] = useState({}); // Contains dragged teacher\n    const [lectureList, setLectureList] = useState([]);\n    const [teacherAssignment, setTeacherAssignment] = useState({});\n    const [teacherCounter, setTeacherCounter] = useState({}); // key: teacherId, value: counter\n    const [lectureTeacherCounter, setLectureTeacherCounter] = useState({}); // key: lectureId_teacherId, value: counter to check duplicate rows\n    const [duplicateTeacherDetectedInRow, setDuplicateTeacherDetectedInRow] = useState(false);\n    const [draggedCellKey, setDraggedCellKey] = useState(null);\n\n    // contains key of teacher asignment which is grag within the table\n    const [addBatch, setAddBatch] = useState(null);\n    const [image, setImage] = useState(null);   //  for div to image \n    const [showAddBatchModal, setShowAddBatchModal] = useState(false); //for add Batch popup\n    const [showAddTeacherModal, setShowAddTeacherModal] = useState(false);\n    const [fromDate, setFromDate] = useState();\n    const [toDate, setToDate] = useState(\"\");\n    const divRef = useRef(null);\n\n    const [batchList, setBatchList] = useState([]);\n    const [teacherList, setTeacherList] = useState([]);\n    const [loaded, setLoaded] = useState(false);\n\n    /**************************************** Component Method Section *********************************/\n    const appenColorTOTeacherList = () => {\n        const stateTeacherList = [];\n        teachers_list.forEach((teacher, i) => {\n            teacher.color = COLORS[i];\n            stateTeacherList.push(teacher);\n        });\n        setTeacherList([...stateTeacherList]);\n    };\n\n    const getEditTimeTable = async () => {\n        const result = await new TtApi().getEditTt(fromDateEdit);\n        setTt(result.Object);\n        setFromDate(result.Object.FromDate)\n        console.log(result.Object.FromDate);\n        console.log(fromDate);\n        setBatchAndTimeList(result.Object);\n        const stateTeacherAssignment = teacherAssignment;\n        if (result.Object.LectureList?.length > 0) {\n            result.Object.LectureList?.forEach(lec => {\n                if (lec?.Batch?.BatchID && lec?.Lecture?.LectureName && lec?.FacultyID) {\n                    const lecture = time.find(t => t.Lecture === lec?.Lecture?.LectureName);\n                    const teacher = teachers_list.find(t => t.FacultyID === lec.FacultyID);\n                    if (lecture?.LectureID && teacher?.FacultyID && result?.Object?.BatchID?.indexOf(lec?.Batch?.BatchID) >= 0 && result?.Object?.LectureID?.indexOf(lecture?.LectureID) >= 0) {\n                        const key = lecture.LectureID + '_' + lec?.Batch?.BatchID;\n                        if (!teacherAssignment[key]) {\n                            stateTeacherAssignment[key] = teacher;\n                            setTeacherAssignment({ ...stateTeacherAssignment });\n                            updateLectureListOnDrop(lecture, lec?.Batch, teacher);\n                            updateTeacherCounterOnDrop(teacher);\n                        }\n                    }\n                }\n            });\n        }\n        console.log(\"xxx tt\", tt);\n        setLoaded(true);\n\n    }\n\n    const setBatchAndTimeList = (tt) => {\n        if (tt) {\n            const stateBatchList = tt?.Batch?.filter(it => tt.BatchID?.indexOf(it.BatchID) >= 0);\n            setBatchList([...stateBatchList]);\n        }\n\n    };\n\n    /* Taking the below code from timetable.v2*/\n    const dragStart = (e, teacherDragged) => {\n        setDraggedTeacher(teacherDragged);\n    };\n    const allowDrop = (ev) => {\n        let t = ev.target;\n        while (t && (!t.classList || !t.classList.contains(\"each-block\"))) {\n            t = t.parentNode;\n        }\n        if (t && t.innerText.trim() !== \"\") {\n            // Prevent drop event if cell is not empty\n            return false;\n        }\n        ev.preventDefault();\n    };\n\n    // Prepare lecture list\n    const updateLectureListOnDrop = (lecture, batch, teacher) => {\n        const stateLectureList = lectureList;\n        const lectureDto = {};\n        lectureDto.ID = \"0\";\n        lectureDto.TimeTableID = \"0\";\n        lectureDto.LectureName = \"\";\n        lectureDto.Batch = batch;\n        lectureDto.Lecture = lecture;\n        lectureDto.Subject = teacher.subject;\n        lectureDto.FacultyID = teacher.FacultyID;\n        lectureDto.IsActive = true;\n        lectureDto.CreatedByUserID = \"1\";\n        lectureDto.CreatedOnDate = \"02/05/2023\";\n        stateLectureList.push(lectureDto);\n        setLectureList([...stateLectureList]);\n    };\n    const updateTeacherCounterOnDrop = (teacher) => {\n        const stateTeacherCounter = teacherCounter;\n        if (!stateTeacherCounter[teacher.FacultyID]) {\n            stateTeacherCounter[teacher.FacultyID] = 1;\n        } else {\n            stateTeacherCounter[teacher.FacultyID] += 1;\n        }\n        setTeacherCounter({ ...stateTeacherCounter });\n    }\n\n    const checkDuplicateTeacherInRowOnDrop = (lectureId, teacherId) => {\n        const key = lectureId + '_' + teacherId;\n        const stateLectureTeacherCounter = lectureTeacherCounter;\n        if (!stateLectureTeacherCounter[key]) {\n            stateLectureTeacherCounter[key] = 1\n        } else {\n            stateLectureTeacherCounter[key] += 1\n        }\n        setLectureTeacherCounter({ ...stateLectureTeacherCounter });\n        if (stateLectureTeacherCounter[key] > 1) {\n            setDuplicateTeacherDetectedInRow(true);\n            setTimeout(() => {\n                setDuplicateTeacherDetectedInRow(false);\n            }, 3000); // Alert duration \n        }\n    }\n\n    /**\n     * On Drop\n     * Check if drops within the table if yes remove techer from current block by preserving the teacher and proceed for select teacher & if no proceed for select teacher\n     * set teacher assignment object\n     * set teature lecture list for api call (updateLectureListOnDrop)\n     * update teacher drop counter (updateTeacherCounterOnDrop)\n     * Check if teacher dropped in same row if yes show alert and set lecture vs teacher counter to use for blink (checkDuplicateTeacherInRowOnDrop)\n     * empty teacher state\n     * empty state used withing table drag\n     */\n    const handleDrop = (e, lecture, batch) => {\n        let selectedTeacher = draggedTeacher;\n        if (draggedCellKey) {\n            // if dragged within the table remove source & proceed for drop\n            const keyInside = draggedCellKey.lecture.LectureID + '_' + draggedCellKey.batch.BatchID;\n            selectedTeacher = teacherAssignment[keyInside];\n            removeTeacher(draggedCellKey.lecture.LectureID, draggedCellKey.batch.BatchID, teacherAssignment[keyInside].FacultyID);\n        }\n        const stateTeacherAssignment = teacherAssignment;\n        const key = lecture.LectureID + '_' + batch.BatchID;\n        teacherAssignment[key] = selectedTeacher;\n        setTeacherAssignment({ ...stateTeacherAssignment });\n        updateLectureListOnDrop(lecture, batch, selectedTeacher);\n        updateTeacherCounterOnDrop(selectedTeacher);\n        checkDuplicateTeacherInRowOnDrop(lecture.LectureID, selectedTeacher.FacultyID);\n        setDraggedTeacher({});\n        setDraggedCellKey(null);\n    }\n\n    const removeTeacher = (lectureId, batchId, teacherId) => {\n        // Remove from teacher assignment\n        const key = lectureId + '_' + batchId\n        const stateTeacherAssignment = teacherAssignment;\n        delete stateTeacherAssignment[key];\n        setTeacherAssignment({ ...stateTeacherAssignment });\n\n        // Remove from lecture list\n        const stateLectureList = lectureList;\n        const index = stateLectureList?.find(row => row.batch?.BatchID === batchId && row.lecture?.LectureID === lectureId);\n        if (index >= 0) {\n            stateLectureList.splice(index, 1);\n            setLectureList([...stateLectureList]);\n        }\n\n        // Decrease one from teacher counter\n        const stateTeacherCounter = teacherCounter;\n        stateTeacherCounter[teacherId] -= 1;\n        if (stateTeacherCounter[teacherId] <= 0) {\n            delete stateTeacherCounter[teacherId];\n        }\n        setTeacherCounter(stateTeacherCounter);\n    }\n\n    // Called to provide class name if true set classname blink else empty\n    // return true if same teacher counter greater than one with respect to lectureId\n    const isTeacherDuplicateInLecture = (lectureId, teacherId) => {\n        if (!lectureId || !teacherId) {\n            return false;\n        }\n        const key = lectureId + '_' + teacherId;\n        console.log(key);\n        return lectureTeacherCounter[key] > 1;\n    };\n\n    const handleTableCellDragStart = (e, lecture, batch) => {\n        setDraggedCellKey({\n            lecture, batch\n        });\n    };\n\n    const onDragEnd = (e) => {\n        setDraggedTeacher({});\n    }\n\n    const onTouchMove = (e) => {\n        console.log(e);\n        const x = e.touches[0].clientX;\n        const y = e.touches[0].clientY;\n        var elem = document.elementFromPoint(x, y);\n        alert('xx xx elem ', elem.id);\n    }\n    /*********************************************This below methods are added by jitendra from TimeTable.js***********************************/\n    const generateUID = () => {\n        // I generate the UID from two parts here \n        // to ensure the random number provide enough bits.\n        var firstPart = (Math.random() * 46656) | 0;\n        var secondPart = (Math.random() * 46656) | 0;\n        firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\n        secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\n        return firstPart + secondPart;\n    }\n    const convertToImage = async () => {\n        // alert(\"Time table image sent successfully\")\n        const canvas = await html2canvas(divRef.current);\n        const imgData = canvas.toDataURL();\n        setImage(imgData);\n        /*converting page64 url got as imgData into file Object by using blob below*/\n        const byteString = atob(imgData.split(',')[1]);\n        const mimeString = imgData.split(',')[0].split(':')[1].split(';')[0];\n        const ia = new Uint8Array(byteString.length);\n        for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n        }\n        const blob = new Blob([ia], { type: mimeString });\n        const imageName = generateUID();\n        const file = new File([blob], imageName + \".jpg\");\n        const fileName = imageName + \".jpg\";\n        const result = await new UploadApi().uplaodFile(file);\n        if (result === \"Success\") {\n            const data = await new UploadApi().getUploadedFile();\n            if (data.Object?.length > 0) {\n                const fileDetail = data.Object.reverse().find(obj => { return obj.Title?.indexOf(imageName) >= 0 });\n                // for (let i = 0; i < numberList.length; i++) {       THIS IS USED WHEN GETWATTSAPPAPI WILL USED SO DONT DELETE THIS LINES\n                try {\n                    // const cell = numberList[i];\n                    /*CHECK THE DETAILS OF THIS GETWATTSAPPAPI IN UPLOAD.API.JS FILE IN API FOLDER*/\n                    // await new UploadApi().getWattsappApi(fileDetail.LongURL, \"time table\", cell, fileName);\n                    await new UploadApi().getWattsappGroupApiOthers(fileDetail.LongURL, \"time table\", fileName);\n                    // await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\n                } catch (e) {\n                    // continue;\n                    console.log(\"error\")\n                }\n                try {\n                    await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\n                } catch (e) {\n                    console.log(\"error\")\n                }\n            }\n        }\n        alert(\"Time table image sent successfully\")\n    }\n    const onChangeFromDate = (e) => {\n        setFromDate(e.target.value);\n    }\n    const onChangeToDate = (e) => {\n        setToDate(e.target.value);\n    }\n    const onAddBatch = () => {\n        setShowAddBatchModal(true);\n    }\n    const onDeleteBatch = (batchID) => {\n        const confirmDelete = window.confirm('Are you sure you want to delete this batch?');\n        if (confirmDelete) {\n            const updatedBatches = batchList.filter((each) => each.BatchID !== batchID);\n            setBatchList(updatedBatches);\n        }\n    };\n    const onAddTeacher = () => {\n        setShowAddTeacherModal(true);\n    }\n    const onDeleteTeacher = (facultyID) => {\n        const confirmDelete = window.confirm('Are you sure you want to delete this Faculty?');\n        if (confirmDelete) {\n            const updatedTeachers = teacherList.filter((each) => each.FacultyID !== facultyID);\n            setTeacherList(updatedTeachers);\n        };\n    }\n    const saveTable = () => {\n        const sentBatchID = batchList.map(item => item.BatchID)\n        console.log(\"xxsent\", sentBatchID,)\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var raw = JSON.stringify({\n            \"TimeTableID\": tt.TimeTableID,\n            \"Description\": \"time table save\",\n            \"DateType\": tt.DateType,\n            \"FromDate\": fromDate,\n            \"ToDate\": toDate,\n            \"ShiftID\": tt.ShiftID,\n            \"SessionID\": tt.SessionID,\n            \"Session\": tt.Session,\n            \"BatchID\": sentBatchID,\n            \"LectureID\": tt.LectureID,\n            \"IsActive\": true,\n            \"CreatedByUserID\": tt.CreatedByUserID,\n            \"CreatedOnDate\": new Date().toLocaleString(),\n            \"LectureList\": lectureList\n        });\n        var requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n        fetch(\"https://api.aayamcareerinstitute.co.in/api/AddUpdateTimeTable\", requestOptions)\n            .then(response => response.text())\n            .then(result => console.log(result))\n            .catch(error => console.log('error', error));\n        alert(\"time table saved successfully\");\n    };\n\n    /**************************************** Template Section *****************************************/\n    return (\n        <>\n            {\n                loaded ? <div>\n                    <div className=\"bg-container\">\n                        {\n                            duplicateTeacherDetectedInRow ? <Alert color=\"warning\">\n                                Two same teachers found in the same row\n                            </Alert> : <></>\n                        }\n                        <h1 className='heading-style'>CLASS SCHEDULE</h1>\n                        <div className=\"button-group added-style\">\n                            <Button className=\"btn \" color=\"info\" onClick={onAddBatch}>\n                                Add Batches\n                            </Button>\n                            {showAddBatchModal && <AddBatch showModal={showAddBatchModal} setShowModal={setShowAddBatchModal} batchList={batchList} />}\n                            {addBatch}\n                            <Button className=\"btn\" color=\"info\" onClick={onAddTeacher}>\n                                Add Teachers\n                            </Button>\n                            {showAddTeacherModal && <AddTeacher showModal={showAddTeacherModal} setShowModal={setShowAddTeacherModal} />}\n                            <Button className=\"btn\" color=\"info\" onClick={saveTable}>\n                                Save\n                            </Button>\n                            <Button className=\"btn\" color=\"info\" onClick={convertToImage}>\n                                Post\n                            </Button>\n                        </div>\n                        <div>\n                            <div ref={divRef}>\n                                <br />\n                                <Form >\n                                    <div className='time-table-date-style'>\n                                        <FormGroup className=\"label-date-allignment\">\n                                            <p>From:</p>\n                                            <Input\n                                                id=\"fromDate\"\n                                                name=\"date\"\n                                                type=\"date\"\n                                                onChange={(e) => { onChangeFromDate(e) }}\n                                                className='input-size'\n                                            />\n                                        </FormGroup>\n                                        <FormGroup className=\"label-date-allignment\">\n                                            <p>To:</p>\n                                            <Input\n                                                id=\"toDate\"\n                                                name=\"date\"\n                                                type=\"date\"\n                                                onChange={(e) => { onChangeToDate(e) }}\n                                                className='input-size'\n                                            />\n                                        </FormGroup>\n                                    </div>\n                                </Form>\n\n                                <table className='table-style'>\n                                    <tbody>\n                                        <div className=\"for-time\">\n                                            <tr>\n                                                <td className='F-style time-style'>Time</td>\n                                                {batchList && batchList.map((batch) => {\n                                                    return (\n                                                        <td className='F-style batch-style' key={batch.BatchID}>{batch.Batch}\n                                                            <button className=\"delete-style\" onClick={() => onDeleteBatch(batch.BatchID)}><RxCross2 /></button>\n                                                        </td>\n                                                    )\n                                                })}\n\n                                            </tr>\n                                        </div>\n                                        <tr >\n                                            {time.map((t) => {\n                                                return (\n                                                    <div >\n                                                        <td className='F-style time-style'>{t.Time_From}-{t.Time_To}</td>\n                                                        {batchList && batchList.map((b) => {\n                                                            const key = t.LectureID + '_' + b.BatchID\n                                                            return (\n                                                                <td\n                                                                    draggable={true}\n                                                                    onDragOver={allowDrop}\n                                                                    onDrop={(e) => handleDrop(e, t, b)}\n                                                                    onDragStart={(e) => handleTableCellDragStart(e, t, b)}\n                                                                    key={key}\n                                                                    id={key}\n                                                                    className={`each-block ${isTeacherDuplicateInLecture(t.LectureID, teacherAssignment[key]?.FacultyID ?? null) ? \"blink\" : \"\"}`}\n                                                                    style={{ backgroundColor: teacherAssignment[key]?.color }}\n                                                                >\n                                                                    <div className={`teacname-cross-style ${teacherAssignment[key]?.className} `}>\n                                                                        <div className=\"teacher-name\" >\n                                                                            {teacherAssignment[key]?.Faculty}\n                                                                        </div>\n                                                                        <div className=\"cross-btn-container\">\n                                                                            {teacherAssignment[key]?.Faculty ? (\n                                                                                <button\n                                                                                    className=\"cross-style\"\n                                                                                    onClick={() => removeTeacher(t.LectureID, b.BatchID, teacherAssignment[key].FacultyID)}\n                                                                                >\n                                                                                    <RxCross2 />\n                                                                                </button>\n                                                                            ) : <></>}\n                                                                        </div>\n                                                                    </div>\n                                                                </td>\n                                                            )\n                                                        })}\n                                                    </div>\n                                                )\n                                            })}\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                        <div className='teacher-container'>\n                            {teacherList.map((teacher, index) => {\n                                const { FacultyID, Faculty } = teacher;\n                                return (\n                                    <div\n                                        style={{ backgroundColor: teacher.color }}\n                                        key={FacultyID}\n                                        className=\"teacher-item\"\n                                        draggable={true}\n                                        onDragStart={(e) => dragStart(e, teacher)}\n                                        onDragEnd={(e) => onDragEnd(e)}\n                                        onTouchStart={(e) => dragStart(e, teacher)}\n                                        onTouchMove={(e) => onTouchMove(e)}\n                                    >\n                                        <h3>{Faculty}</h3>\n                                        {teacherCounter[FacultyID] > 0 && (\n                                            <span className={`counter-item `} draggable={false}>\n                                                {teacherCounter[FacultyID]}\n                                            </span>\n                                        )}\n                                        <button className=\"delete-style\" onClick={() => onDeleteTeacher(teacher.FacultyID)}><RxCross2 /></button>\n\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div> : <div></div>\n            }\n            {/* {editTimeTable} */}\n        </>\n    )\n}\nexport default EditTimeTable\n"],"sourceRoot":""}