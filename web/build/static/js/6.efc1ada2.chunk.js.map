{"version":3,"sources":["pages/TTPages/List/List.js","const/url.js","pages/TTPages/TeacherForm/TeacherForm.js","api/tt.api.js.js","pages/TTPages/AddBatch/AddBatch.js","api/upload.api.js","const/color.const.js","pages/TTPages/TimeTableV2/TimeTableV2.js"],"names":["teachers_list","FacultyID","Faculty","subject","batch","BatchID","Batch","CourseID","time","LectureID","Lecture","Time_From","Time_To","BASE_URL","URL","UPLOAD_FILE","GET_UPLOAD_FILE_URL","GET_SAVE_TIMETABLE_URL","GET_ALL_TT","GET_EDIT_TT","AddTeacher","_ref","showModal","setShowModal","useEffect","fetchApiData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_context","prev","next","fetch","sent","json","setApiData","t0","stop","apply","arguments","_useState","useState","_useState2","_slicedToArray","setFaculties","_useState3","_useState4","apiData","_useState5","_useState6","checkedItems","setCheckedItems","_apiData$Object","Object","responseObject","_responseObject$Facul","FacultyList","_responseObject$UserL","UserList","facultyNameMap","forEach","user","UserID","UserName","handleCheckboxChange","event","_event$target","target","name","checked","_objectSpread","_defineProperty","updatedFacultyList","map","faculty","closeModal","_jsx","children","_jsxs","Modal","isOpen","toggle","style","maxWidth","ModalHeader","ModalBody","className","maxHeight","overflowY","listStyle","facultyUser","bgColor","find","facultyName","type","onChange","ModalFooter","Button","color","onClick","newTeachersList","_loop","facultyID","selectedItem","parseInt","some","teacher","push","alert","TtApi","_createClass","_classCallCheck","getTtList","res","method","abrupt","Error","message","options","getEditTt","_callee2","fromDateEdit","myHeaders","_context2","Headers","append","headers","body","JSON","stringify","FromDate","replaceAll","_x","saveTt","_ref3","_callee3","fromDate","toDate","lectureList","sentBatchID","_context3","TimeTableID","Description","DateType","ToDate","ShiftID","SessionID","Session","IsActive","CreatedByUserID","CreatedOnDate","Date","toLocaleString","LectureList","_x2","_x3","_x4","_x5","saveEditedTt","_ref4","_callee4","_context4","_x6","_x7","_x8","_x9","_x10","_x11","_x12","_x13","_x14","_x15","_x16","AddBatch","batchList","setBatches","_responseObject$Batch","newBatches","batchID","UploadApi","getWattsappApi","url","cell","fileName","console","log","URLSearchParams","number","media_url","filename","instance_id","access_token","getWattsappGroupApiTeachers","group_id","getWattsappGroupApiOthers","uplaodFile","file","formData","FormData","getUploadedFile","_callee5","_context5","COLORS","TimeTableV2","tableElement","document","querySelector","tableWidth","offsetWidth","setTableWidth","draggedTeacher","setDraggedTeacher","setLectureList","_useState7","_useState8","teacherAssignment","setTeacherAssignment","_useState9","_useState10","teacherCounter","setTeacherCounter","_useState11","_useState12","lectureTeacherCounter","setLectureTeacherCounter","_useState13","_useState14","duplicateTeacherDetectedInRow","setDuplicateTeacherDetectedInRow","_useState15","_useState16","draggedCellKey","setDraggedCellKey","_useState17","_useState18","addBatch","_useState19","_useState20","setImage","_useState21","_useState22","setBatchList","_useState23","_useState24","teacherList","setTeacherList","_useState25","_useState26","showAddBatchModal","setShowAddBatchModal","_useState27","_useState28","showAddTeacherModal","setShowAddTeacherModal","_useState29","_useState30","setFromDate","_useState31","_useState32","setToDate","divRef","useRef","dragStart","e","teacherDragged","allowDrop","ev","t","classList","contains","parentNode","innerText","trim","preventDefault","handleDrop","lecture","selectedTeacher","keyInside","removeTeacher","stateTeacherAssignment","key","stateLectureList","lectureDto","Subject","_toConsumableArray","updateLectureListOnDrop","lectureId","teacherId","stateLectureTeacherCounter","setTimeout","checkDuplicateTeacherInRowOnDrop","batchId","index","row","_row$batch","_row$lecture","splice","stateTeacherCounter","isTeacherDuplicateInLecture","generateUID","firstPart","Math","random","secondPart","toString","slice","convertToImage","canvas","imgData","byteString","mimeString","ia","i","blob","imageName","_data$Object","data","fileDetail","html2canvas","current","toDataURL","atob","split","Uint8Array","length","charCodeAt","Blob","File","reverse","obj","_obj$Title","Title","indexOf","LongURL","t1","saveTable","item","_Fragment","Alert","ref","Form","FormGroup","Input","id","value","onChangeFromDate","onChangeToDate","each","window","confirm","updatedBatches","filter","onDeleteBatch","RxCross2","b","_teacherAssignment$ke","_teacherAssignment$ke2","_teacherAssignment$ke3","_teacherAssignment$ke4","_teacherAssignment$ke5","_teacherAssignment$ke6","draggable","onDragOver","onDrop","onDragStart","concat","backgroundColor","onDragEnd","onTouchStart","onTouchMove","x","touches","clientX","y","clientY","elem","elementFromPoint","updatedTeachers","onDeleteTeacher"],"mappings":"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","file":"static/js/6.efc1ada2.chunk.js","sourcesContent":["import {v4 as uuidv4} from \"uuid\"\nexport const teachers_list = [\n        {\n            FacultyID: 22,\n            Faculty: \"MYK\",\n            subject: \"Physics\"\n        },\n        \n        {\n            FacultyID: 3038,\n            Faculty: \"KPS\",\n            subject:\"Chemistry\"\n        },\n\n        {\n            FacultyID: 2029,\n            Faculty: \"MRS\",\n            subject:\"Chemistry\"\n        },\n\n        {\n            FacultyID: 3051,\n            Faculty: \"MAS\",\n            subject:\"Physics\"\n        },\n\n        {\n            FacultyID: 3050,\n            Faculty: \"RSS\",\n            subject:\"Physics\"\n        },\n        {\n            FacultyID: 25,\n            Faculty: \"NMS\",\n            subject:\"Biology\"\n        },\n        {\n            FacultyID: 3037,\n            Faculty: \"HDS\",\n            subject:\"Chemistry\"\n        },\n        {\n            FacultyID: 3032,\n            Faculty: \"MNM\",\n            subject: \"Biology\"\n        },\n        \n        {\n            FacultyID: 1023,\n            Faculty: \"SJ\",\n            subject:\"Biology\"\n        },\n\n        {\n            FacultyID: 1025,\n            Faculty: \"AJ\",\n            subject:\"Biology\"\n        },\n\n        {\n            FacultyID: 1026,\n            Faculty: \"DMPS\",\n            subject:\"Chemistry\"\n        },\n\n        \n       \n        \n        {\n            FacultyID: 1027,\n            Faculty: \"PSJ\",\n            subject:\"Physics\"\n        },\n        {\n            FacultyID: 3033,\n            Faculty: \"YBS\",\n            subject:\"Biology\"\n        },\n        {\n            FacultyID: 3030,\n            Faculty: \"AKS\",\n            subject:\"Chemistry\"\n        },\n        {\n            FacultyID: 2028,\n            Faculty: \"AMS\",\n            subject:\"Maths\"\n        },\n        {\n            FacultyID: 3031,\n            Faculty: \"NDS\",\n            subject:\"Physics\"\n        },\n        {\n            FacultyID: 3052,\n            Faculty: \"HWS\",\n            subject:\"Physics\"\n        },\n        {\n            FacultyID: 1029,\n            Faculty: \"JRS\",\n            subject:\"Chemistry\"\n        },\n        {\n            FacultyID: 3053,\n            Faculty: \"HTS\",\n            subject:\"Chemistry\"\n        },\n    ]; \n    \n\nexport const batch= [\n    {\n        BatchID: 1,\n        Batch: \"A1\",\n        CourseID: 3\n    },\n    {\n        BatchID: 6,\n        Batch: \"A2\",\n        CourseID: 3\n    },\n    {\n        BatchID: 10,\n        Batch: \"A3\",\n        CourseID: 3\n    },\n    {\n        BatchID: 7,\n        Batch: \"A4\",\n        CourseID: 3\n    },\n    {\n        BatchID: 3,\n        Batch: \"C1\",\n        CourseID: 1\n    },\n    {\n        BatchID: 15,\n        Batch: \"C2\",\n        CourseID: 1\n    },\n    {\n        BatchID: 2,\n        Batch: \"B1\",\n        CourseID: 2\n    },\n    {\n        BatchID: 3049,\n        Batch: \"B2\",\n        CourseID: 2\n    },\n    //MORE BATCHES ADDED WITH A FAKE BATCHID AND FAKE COURSEID NEED TO CHANGE LATER\n\n    {\n        BatchID: 20,\n        Batch: \"JO1\",\n        CourseID: 13\n    },\n    {\n        BatchID: 3042,\n        Batch: \"JXI-1\",\n        CourseID: 11\n    },\n    {\n        BatchID: 3061,\n        Batch: \"JXI-2\",\n        CourseID: 11\n    },\n    {\n        BatchID: 22,\n        Batch: \"JXII-1\",\n        CourseID: 12\n    },\n    {\n        BatchID: 3079,\n        Batch: \"JEE XL\",\n        CourseID: 1025\n    },\n    {\n        BatchID: 3078,\n        Batch: \"JEE adv\",\n        CourseID: 13\n    }\n]\n\n\nexport const time= [\n    {\n        LectureID: 1,\n        Lecture: \"L1\",\n        Time_From: \"08:30 AM\",\n        Time_To: \"09:45 AM\"\n    },\n    {\n        LectureID: 2,\n        Lecture: \"L2\",\n        Time_From: \"09:50 AM\",\n        Time_To: \"11:05 AM\"\n    },\n    {\n        LectureID: 3,\n        Lecture: \"L3\",\n        Time_From: \"11:20 AM\",\n        Time_To: \"12:35 PM\"\n    },\n    {\n        LectureID: 4,\n        Lecture: \"L4\",\n        Time_From: \"12:40 PM\",\n        Time_To: \"01:55 PM\"\n    },\n    {\n        LectureID: 5,\n        Lecture: \"L5\",\n        Time_From: \"02:00 PM\",\n        Time_To: \"03:15 PM\"\n    },\n    {\n        LectureID: 6,\n        Lecture: \"L6\",\n        Time_From: \"03:20 PM\",\n        Time_To: \"04:35 PM\"\n    },\n    {\n        LectureID: 7,\n        Lecture: \"L7\",\n        Time_From: \"04:50 PM\",\n        Time_To: \"06:05 PM\"\n    },\n    {\n        LectureID: 8,\n        Lecture: \"L8\",\n        Time_From: \"06:15 PM\",\n        Time_To: \"07:30 PM\"\n    }\n]\n","const ENV_URL = 'https://api.aayamcareerinstitute.co.in/api'; // producation fn\nconst DEV_URL = 'http://localhost:5001'; // producation fn\nconst BASE_URL= ENV_URL\n\n\n\nexport const URL = {\n    UPLOAD_FILE: BASE_URL + '/UploadFilesAttachment',\n    GET_UPLOAD_FILE_URL: BASE_URL + '/GetFiles', \n    GET_SAVE_TIMETABLE_URL: BASE_URL+ '/AddUpdateTimeTable',\n    GET_ALL_TT: BASE_URL + '/GetTimeTable', \n\n    GET_EDIT_TT: BASE_URL + '/GetTimeTableByDate',\n\n\n\n};  \n","import React, { useState, useEffect } from 'react';\nimport { batch } from '../List/List';\nimport { teachers_list } from '../List/List';\n// import { teachers_list } from '../../../const/teacherList';\n// import { batch } from '../../../const/batchList';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport \"./TeacherForm.css\";\n\nconst AddTeacher = ({ showModal, setShowModal }) => {\n\n  /************************************Use Effect****************************************** */\n  useEffect(() => {\n    if (showModal) {\n      const fetchApiData = async () => {\n        try {\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\n          const result = await response.json();\n          setApiData(result);\n        } catch (error) {\n        }\n      };\n\n      fetchApiData();\n    }\n  }, [showModal]);\n\n  /***********************Use State***************************************************** */\n  const [faculties, setFaculties] = useState(teachers_list);\n  // const [batches, setBatches] = useState(JSON.parse(localStorage.getItem('batches')) || batch);\n  const [apiData, setApiData] = useState({});\n  const [checkedItems, setCheckedItems] = useState({});\n\n  /*************************other consts*************************************************** */\n  const { Object: responseObject = {} } = apiData;\n  const { Batch = [], FacultyList = [], UserList = [] } = responseObject;\n  const facultyNameMap = {};\n\n  UserList.forEach((user) => {\n    facultyNameMap[user.UserID] = user.UserName;\n  });\n  /****************************************methods******************************************* */\n  const handleCheckboxChange = (event) => {\n    const { name, checked } = event.target;\n    setCheckedItems({\n      ...checkedItems,\n      [name]: checked,\n    });\n  };\n\n  const updatedFacultyList = FacultyList.map((faculty) => ({\n    ...faculty,\n    Faculty: facultyNameMap[faculty.FacultyID] || faculty.Faculty,\n  }));\n\n  const addToFaculty = () => {\n    const newTeachersList = teachers_list;\n\n    for (const facultyID in checkedItems) {\n      if (checkedItems[facultyID]) {\n        const selectedItem = updatedFacultyList.find(\n          (faculty) => faculty.FacultyID === parseInt(facultyID)\n        );\n\n        if (selectedItem) {\n          const facultyUser = UserList.find(\n            (user) => user.UserID === selectedItem.FacultyID\n          );\n          const facultyName = facultyUser ? facultyUser.UserName : selectedItem.Faculty;\n\n          const isTeacherAlreadyAdded = newTeachersList.some(\n            (teacher) => teacher.FacultyID === selectedItem.FacultyID\n          );\n\n          if (!isTeacherAlreadyAdded) {\n            newTeachersList.push({\n              FacultyID: selectedItem.FacultyID,\n              Faculty: facultyName,\n            });\n          }\n        }\n      }\n    }\n\n    setFaculties(newTeachersList);\n    alert(\"faculty added successfully\");\n\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  /**********************************************Template to return******************************** */\n  return (\n    <div>\n      <Modal isOpen={showModal} toggle={closeModal} style={{ maxWidth: '320px' }}>\n        <ModalHeader toggle={closeModal}>Select Teachers from the list</ModalHeader>\n        <ModalBody>\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\n              {updatedFacultyList.map((faculty) => {\n                const { FacultyID, bgColor, className } = faculty;\n                const facultyUser = UserList.find((user) => user.UserID === FacultyID);\n                const facultyName = facultyUser ? facultyUser.UserName : faculty.Faculty;\n                return (\n                  <li key={faculty.FacultyID}>\n                    <div className=\"add-faculty-style\">\n                      <input\n                        type=\"checkbox\"\n                        name={faculty.FacultyID}\n                        checked={checkedItems[faculty.FacultyID] || false}\n                        onChange={handleCheckboxChange}\n                        className=\"addfaculty-checkbox-style\"\n                      />\n                      {facultyName}\n                    </div>\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={addToFaculty}>Add</Button>{' '}\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\nexport default AddTeacher;\n\n\n\n\n\n\n","import { URL } from '../const/url';\n\nexport default class TtApi {\n    getTtList = async () => {\n        try {\n            const res = await fetch(URL.GET_ALL_TT, {\n                method: 'GET',\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\ngetEditTt = async (fromDateEdit) => {\n    try {\n        // const formData = new FormData();\n        // formData.append('file', file, file.name);\n        const myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n        const res = await fetch(URL.GET_EDIT_TT, {\n            method: 'POST',\n            headers: myHeaders,\n            body: JSON.stringify({\n            FromDate: fromDateEdit.replaceAll(\"-\", \"/\"),\n        })});\n        const result = await res.json();\n        return result;\n    } catch (e) {\n        throw new Error(e.message, e.options);\n    }\n}\n\nsaveTt = async (fromDate,toDate,lectureList,sentBatchID) => {\n    try {\n        const myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n        const res = await fetch(URL.GET_SAVE_TIMETABLE_URL, {\n            method: 'POST',\n            headers: myHeaders,\n            body: JSON.stringify({\n                TimeTableID: 0,\n                Description: \"time table save\",\n                DateType: \"multiple\",\n                FromDate: fromDate,\n                ToDate: toDate,\n                ShiftID: 1,\n                SessionID: 5,\n                Session: \"string\",\n                // BatchID: [\n                //   1, 6, 10, 7, 3, 15, 2, 3049, 20, 3042, 3061, 22, 13, 14\n                // ],,\n                BatchID:sentBatchID,\n                LectureID: [\n                  1, 2, 3, 4, 5, 6, 7, 8\n                ],\n                IsActive: true,\n                CreatedByUserID: 1,\n                CreatedOnDate: new Date().toLocaleString(),\n                LectureList: lectureList\n        })});\n        const result = await res.json();\n        return result;\n    } catch (e) {\n        throw new Error(e.message, e.options);\n    }\n}\n\nsaveEditedTt = async (TimeTableID,DateType,fromDate,toDate,ShiftID,SessionID,Session,sentBatchID,LectureID,CreatedByUserID,lectureList) => {\n    try {\n        const myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n        const res = await fetch(URL.GET_SAVE_TIMETABLE_URL, {\n            method: 'POST',\n            headers: myHeaders,\n            body: JSON.stringify({\n            TimeTableID: 0,\n            Description: \"time table save\",\n            DateType: \"multiple\",\n            FromDate: fromDate,\n            ToDate: toDate,\n            ShiftID: ShiftID,\n            SessionID: SessionID,\n            Session: Session,\n            BatchID: sentBatchID,\n            LectureID: LectureID,\n            IsActive: true,\n            CreatedByUserID: CreatedByUserID,\n            CreatedOnDate: new Date().toLocaleString(),\n            LectureList: lectureList\n        })});\n        const result = await res.json();\n        return result;\n    } catch (e) {\n        throw new Error(e.message, e.options);\n    }\n}\n\n}","\nimport React, { useState, useEffect } from 'react';\nimport { batch } from '../List/List';\n// import { batch } from '../../../const/batchList';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport \"./AddBatch.css\"\n\nconst AddBatch = ({ showModal, setShowModal, batchList }) => {\n  /******************************************Use Effect********************************************** */\n  useEffect(() => {\n    if (showModal) {\n      const fetchApiData = async () => {\n        try {\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\n          const result = await response.json();\n          setApiData(result);\n        } catch (error) {\n        }\n      };\n\n      fetchApiData();\n\n    }\n  }, [showModal]);\n  /********************************************Use State****************************************** */\n  const [batches, setBatches] = useState(batchList);\n  const [apiData, setApiData] = useState({});\n  const [checkedItems, setCheckedItems] = useState({});\n\n  /*****************************Other consts******************************************************** */\n  const { Object: responseObject = {} } = apiData;\n  const { Batch = [] } = responseObject;\n\n  /***************************************Methods*************************************************** */\n  const handleCheckboxChange = (event) => {\n    const { name, checked } = event.target;\n    setCheckedItems({\n      ...checkedItems,\n      [name]: checked,\n    });\n  };\n\n  const addToBatch = () => {\n    const newBatches = batchList;\n    for (const batchID in checkedItems) {\n      if (checkedItems[batchID]) {\n        const selectedItem = Batch.find((batch) => batch.BatchID === parseInt(batchID));\n        if (selectedItem && !newBatches.find((batch) => batch.BatchID === selectedItem.BatchID)) {\n          newBatches.push({\n            BatchID: selectedItem.BatchID,\n            Batch: selectedItem.Batch,\n            CourseID: selectedItem.CourseID,\n          });\n        }\n      }\n    }\n    setBatches(newBatches);\n    alert(\"batches added successfully\");\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  /***************************Template to return******************************************************* */\n  return (\n    <div>\n      <Modal isOpen={showModal} toggle={closeModal} style={{ maxWidth: '320px' }}>\n        <ModalHeader toggle={closeModal}>Select Batches from the list</ModalHeader>\n        <ModalBody>\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\n              {Batch.map((batch) => (\n                <li key={batch.BatchID}>\n                  <div className=\"add-batch-style\">\n                    <input\n                      type=\"checkbox\"\n                      name={batch.BatchID}\n                      checked={checkedItems[batch.BatchID] || false}\n                      onChange={handleCheckboxChange}\n                      className=\"addbatch-checkbox-style\"\n                    />\n                    {batch.Batch}\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={addToBatch}>Add</Button>{' '}\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\nexport default AddBatch;\n\n","import { URL } from '../const/url';\n\nexport default class UploadApi {\n    // getUserWalletBalance = async (userId) => {\n    //     try {\n    //         GlobalEmitterService.emit(true);\n    //         const token = `Bearer ${AuthService.getToken()}`;\n    //         const res = await fetch(URL.USER_WALLET_BALANCE + '?' + new URLSearchParams({\n    //             userId\n    //         }), {\n    //             method: 'GET',\n    //             headers: { 'Content-Type': 'application/json', 'Authorization': token },\n    //         });\n    //         const result = await res.json();\n    //         GlobalEmitterService.emit(false);\n    //         return result;\n    //     } catch (e) {\n    //         GlobalEmitterService.emit(false);\n    //         throw new Error(e.message, e.options);\n    //     }\n    // }\n\n\n    getWattsappApi = async (url, message, cell, fileName) => {\n        try {\n            console.log(\"url\", url);\n            console.log(\"mesage\", message);\n            console.log(\"cel\", cell);\n            console.log(\"file\", fileName);\n            // https://ziper.io/api/send.php?number=917898118503&type=media&message=test%20message&media_url=https://api.aayamcareerinstitute.co.in//Uploads/Files/File_3431223213168.pdf&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\n            const res = await fetch(\"https://ziper.io/api/send.php\" + '?' + new URLSearchParams({\n                number: cell,\n                type: \"media\",\n                message: message,\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\n                filename: fileName,\n                instance_id: \"6453479F141A2\",\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\n            }), {\n                method: 'GET',\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n\n    getWattsappGroupApiTeachers = async (url, message, fileName) => {\n        try {\n            console.log(\"url\", url);\n            console.log(\"mesage\", message);\n            console.log(\"file\", fileName);\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\n                group_id: \"919977116612-1595572006@g.us\",\n                type: \"media\",\n                message: message,\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\n                filename: fileName,\n                instance_id: \"6453479F141A2\",\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\n            }), {\n                method: 'GET',\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n    getWattsappGroupApiOthers = async (url, message, fileName) => {\n        try {\n            console.log(\"url\", url);\n            console.log(\"mesage\", message);\n            console.log(\"file\", fileName);\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\n                group_id: \"919826362001-1628170376@g.us\",\n                type: \"media\",\n                message: message,\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\n                filename: fileName,\n                instance_id: \"6453479F141A2\",\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\n\n            }), {\n                method: 'GET',\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n    uplaodFile = async (file) => {\n        try {\n            const formData = new FormData();\n            formData.append('file', file, file.name);\n            const res = await fetch(URL.UPLOAD_FILE, {\n                method: 'POST',\n                body: formData,\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n    getUploadedFile = async () => {\n        try {\n            const res = await fetch(URL.GET_UPLOAD_FILE_URL, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({})\n\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n}","export const COLORS = [\"#D4E6F1\", \"#E8DAEF\", \"#008080\", \"#808000\", \"#C39BD3\", \"#76D7C4\", \"#3498DB\", \"#358b79\", \"#847f86\", \"rgb(251, 235, 9)\", \"#CA6F1E\", \"#CCCCFF\", \"#F4D03F\", \"rgb(199, 185, 84)\", \"#979A9A\", \"#F0B27A\", \"rgb(117, 98, 179)\", \"#CD5C5C\", \"#40E0D0\", \"#DAF7A6\", \"#008080\", \"#808000\", \"#FADBD8\", \"green\", \"yellow\", \"white\", \"red\", \"pink\"]\n","import html2canvas from 'html2canvas';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { RxCross2 } from \"react-icons/rx\";\nimport { Alert } from 'reactstrap';\nimport { COLORS } from '../../../const/color.const';\nimport AddBatch from '../AddBatch/AddBatch';\nimport { batch, teachers_list, time } from '../List/List';\nimport \"./TimeTableV2.scss\";\nimport { Card, Row, Col, CardTitle, CardBody, Button, Form, FormGroup, Label, Input, FormText, } from \"reactstrap\";\nimport UploadApi from '../../../api/upload.api';\nimport AddTeacher from '../TeacherForm/TeacherForm';\nimport TtApi from '../../../api/tt.api.js';\n\nconst TimeTableV2 = () => {\n\n  /**************************************** const Section ************************************/\n\n  /**************************************** Use Effect Section ************************************/\n  useEffect(() => {\n    const tableElement = document.querySelector('.table-style');\n    if (tableElement) {\n      const tableWidth = tableElement.offsetWidth;\n      setTableWidth(tableWidth);\n    }\n    \n    // if (duplicateDetected) {\n    //   setDuplicateDetected(false);\n    //   setTimeout(() => {\n    //     setDuplicateElements({});\n    //   }, 3000); // Blink duration\n    // }\n  }, []);\n\n  /**************************************** State Section *****************************************/\n  const [tableWidth, setTableWidth] = useState(0); // set table width\n  const [draggedTeacher, setDraggedTeacher] = useState({}); // Contains dragged teacher\n  const [lectureList, setLectureList] = useState([]);\n  const [teacherAssignment, setTeacherAssignment] = useState({});\n  const [teacherCounter, setTeacherCounter] = useState({}); // key: teacherId, value: counter\n  const [lectureTeacherCounter, setLectureTeacherCounter] = useState({}); // key: lectureId_teacherId, value: counter to check duplicate rows\n  const [duplicateTeacherDetectedInRow, setDuplicateTeacherDetectedInRow] = useState(false);\n  const [draggedCellKey, setDraggedCellKey] = useState(null);\n\n  // contains key of teacher asignment which is grag within the table\n  const [addBatch, setAddBatch] = useState(null);\n  const [image, setImage] = useState(null);   //  for div to image \n  const [batchList, setBatchList] = useState(batch);\n  const [teacherList, setTeacherList] = useState(teachers_list);\n  const [showAddBatchModal, setShowAddBatchModal] = useState(false); //for add Batch popup\n  const [showAddTeacherModal, setShowAddTeacherModal] = useState(false);\n  const [fromDate, setFromDate] = useState(\"\");\n  const [toDate, setToDate] = useState(\"\");\n  const divRef = useRef(null);\n\n  /**************************************** Component Method Section *********************************/\n  /**\n   * \n   * @param {*} e drag event\n   * @param {*} teacherInfo teacherVo\n   * Calls when drag start & drag the reacher\n   */\n  const dragStart = (e, teacherDragged) => {\n    setDraggedTeacher(teacherDragged);\n  };\n\n  const allowDrop = (ev) => {\n    let t = ev.target;\n    while (t && (!t.classList || !t.classList.contains(\"each-block\"))) {\n      t = t.parentNode;\n    }\n    if (t && t.innerText.trim() !== \"\") {\n      // Prevent drop event if cell is not empty\n      return false;\n    }\n    ev.preventDefault();\n  };\n\n  // Prepare lecture list\n  const updateLectureListOnDrop = (lecture, batch, teacher) => {\n    const stateLectureList = lectureList;\n    const lectureDto = {};\n    lectureDto.ID = \"0\";\n    lectureDto.TimeTableID = \"0\";\n    lectureDto.LectureName = \"\";\n    lectureDto.Batch = batch;\n    lectureDto.Lecture = lecture;\n    lectureDto.Subject = teacher.subject;\n    lectureDto.FacultyID = teacher.FacultyID;\n    lectureDto.IsActive = true;\n    lectureDto.CreatedByUserID = \"1\";\n    lectureDto.CreatedOnDate = \"02/05/2023\";\n    stateLectureList.push(lectureDto);\n    setLectureList([...stateLectureList]);\n  };\n\n  const updateTeacherCounterOnDrop = (teacher) => {\n    const stateTeacherCounter = teacherCounter;\n    if (!stateTeacherCounter[teacher.FacultyID]) {\n      teacherCounter[teacher.FacultyID] = 1;\n    } else {\n      teacherCounter[teacher.FacultyID] += 1;\n    }\n  }\n\n  const checkDuplicateTeacherInRowOnDrop = (lectureId, teacherId) => {\n    const key = lectureId + '_' + teacherId;\n    const stateLectureTeacherCounter = lectureTeacherCounter;\n    if (!stateLectureTeacherCounter[key]) {\n      stateLectureTeacherCounter[key] = 1\n    } else {\n      stateLectureTeacherCounter[key] += 1\n    }\n    setLectureTeacherCounter({ ...stateLectureTeacherCounter });\n    if (stateLectureTeacherCounter[key] > 1) {\n      setDuplicateTeacherDetectedInRow(true);\n      setTimeout(() => {\n        setDuplicateTeacherDetectedInRow(false);\n      }, 3000); // Alert duration \n    }\n  }\n\n  /**\n   * On Drop\n   * Check if drops within the table if yes remove techer from current block by preserving the teacher and proceed for select teacher & if no proceed for select teacher\n   * set teacher assignment object\n   * set teature lecture list for api call (updateLectureListOnDrop)\n   * update teacher drop counter (updateTeacherCounterOnDrop)\n   * Check if teacher dropped in same row if yes show alert and set lecture vs teacher counter to use for blink (checkDuplicateTeacherInRowOnDrop)\n   * empty teacher state\n   * empty state used withing table drag\n   */\n  const handleDrop = (e, lecture, batch) => {\n    let selectedTeacher = draggedTeacher;\n    if (draggedCellKey) {\n      // if dragged within the table remove source & proceed for drop\n      const keyInside = draggedCellKey.lecture.LectureID + '_' + draggedCellKey.batch.BatchID;\n      selectedTeacher = teacherAssignment[keyInside];\n      removeTeacher(draggedCellKey.lecture.LectureID, draggedCellKey.batch.BatchID, teacherAssignment[keyInside].FacultyID);\n    }\n    const stateTeacherAssignment = teacherAssignment;\n    const key = lecture.LectureID + '_' + batch.BatchID;\n    teacherAssignment[key] = selectedTeacher;\n    setTeacherAssignment({ ...stateTeacherAssignment });\n    updateLectureListOnDrop(lecture, batch, selectedTeacher);\n    updateTeacherCounterOnDrop(selectedTeacher);\n    checkDuplicateTeacherInRowOnDrop(lecture.LectureID, selectedTeacher.FacultyID);\n    setDraggedTeacher({});\n    setDraggedCellKey(null);\n  }\n\n  const removeTeacher = (lectureId, batchId, teacherId) => {\n    // Remove from teacher assignment\n    const key = lectureId + '_' + batchId\n    const stateTeacherAssignment = teacherAssignment;\n    delete stateTeacherAssignment[key];\n    setTeacherAssignment({ ...stateTeacherAssignment });\n\n    // Remove from lecture list\n    const stateLectureList = lectureList;\n    const index = stateLectureList?.find(row => row.batch?.BatchID === batchId && row.lecture?.LectureID === lectureId);\n    if (index >= 0) {\n      stateLectureList.splice(index, 1);\n      setLectureList([...stateLectureList]);\n    }\n    // Decrease one from teacher counter\n    const stateTeacherCounter = teacherCounter;\n    stateTeacherCounter[teacherId] -= 1;\n    if (stateTeacherCounter[teacherId] <= 0) {\n      delete stateTeacherCounter[teacherId];\n    }\n    setTeacherCounter(stateTeacherCounter);\n  }\n  // Called to provide class name if true set classname blink else empty\n  // return true if same teacher counter greater than one with respect to lectureId\n  const isTeacherDuplicateInLecture = (lectureId, teacherId) => {\n    if (!lectureId || !teacherId) {\n      return false;\n    }\n    const key = lectureId + '_' + teacherId;\n    console.log(key);\n    return lectureTeacherCounter[key] > 1;\n  };\n\n  const handleTableCellDragStart = (e, lecture, batch) => {\n    setDraggedCellKey({\n      lecture, batch\n    });\n  };\n\n  const onDragEnd = (e) => {\n    setDraggedTeacher({});\n  }\n\n  const onTouchMove = (e) => {\n    console.log(e);\n    const x = e.touches[0].clientX;\n    const y = e.touches[0].clientY;\n    var elem = document.elementFromPoint(x, y);\n    alert('xx xx elem ', elem.id);\n  }\n  /*********************************************This below methods are added by jitendra from TimeTable.js***********************************/\n  const generateUID = () => {\n    // I generate the UID from two parts here \n    // to ensure the random number provide enough bits.\n    var firstPart = (Math.random() * 46656) | 0;\n    var secondPart = (Math.random() * 46656) | 0;\n    firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\n    secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\n    return firstPart + secondPart;\n  }\n  const convertToImage = async () => {\n    // alert(\"Time table image sent successfully\")\n    const canvas = await html2canvas(divRef.current);\n    const imgData = canvas.toDataURL();\n    setImage(imgData);\n    /*converting page64 url got as imgData into file Object by using blob below*/\n    const byteString = atob(imgData.split(',')[1]);\n    const mimeString = imgData.split(',')[0].split(':')[1].split(';')[0];\n    const ia = new Uint8Array(byteString.length);\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    const blob = new Blob([ia], { type: mimeString });\n    const imageName = generateUID();\n    const file = new File([blob], imageName + \".jpg\");\n    const fileName = imageName + \".jpg\";\n    const result = await new UploadApi().uplaodFile(file);\n    if (result === \"Success\") {\n      const data = await new UploadApi().getUploadedFile();\n      if (data.Object?.length > 0) {\n        const fileDetail = data.Object.reverse().find(obj => { return obj.Title?.indexOf(imageName) >= 0 });\n        // for (let i = 0; i < numberList.length; i++) {       THIS IS USED WHEN GETWATTSAPPAPI WILL USED SO DONT DELETE THIS LINES\n        try {\n          // const cell = numberList[i];\n          /*CHECK THE DETAILS OF THIS GETWATTSAPPAPI IN UPLOAD.API.JS FILE IN API FOLDER*/\n          // await new UploadApi().getWattsappApi(fileDetail.LongURL, \"time table\", cell, fileName);\n          await new UploadApi().getWattsappGroupApiOthers(fileDetail.LongURL, \"time table\", fileName);\n          // await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\n        } catch (e) {\n          // continue;\n          console.log(\"error\")\n        }\n        try {\n          await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\n        } catch (e) {\n          console.log(\"error\")\n        }\n      }\n    }\n    alert(\"Time table image sent successfully\")\n  }\n\n  const onChangeFromDate = (e) => {\n    setFromDate(e.target.value);\n  }\n  const onChangeToDate = (e) => {\n    setToDate(e.target.value);\n  }\n  const onAddBatch = () => {\n    // setAddBatch(<AddBatch batchList={batchList} />)\n    setShowAddBatchModal(true);\n  }\n  const onDeleteBatch = (batchID) => {\n    const confirmDelete = window.confirm('Are you sure you want to delete this batch?');\n    if (confirmDelete) {\n      const updatedBatches = batchList.filter((each) => each.BatchID !== batchID);\n      setBatchList(updatedBatches);\n    }\n  };\n  const onAddTeacher = () => {\n    setShowAddTeacherModal(true);\n  }\n  const onDeleteTeacher = (facultyID) => {\n    const confirmDelete = window.confirm('Are you sure you want to delete this Faculty?');\n    if (confirmDelete) {\n      const updatedTeachers = teacherList.filter((each) => each.FacultyID !== facultyID);\n      setTeacherList(updatedTeachers);\n    };\n  }\n  const saveTable = async () => {\n    const sentBatchID = batchList.map(item => item.BatchID)\n    console.log(\"xxsent\", sentBatchID,)\n    const result = await new TtApi().saveTt(fromDate, toDate, lectureList, sentBatchID);\n    console.log(\"mmmm\", result);\n    alert(\"time table saved successfully\");\n  };\n\n  const clearAll=(key)=>{\n    // const key = lectureId + '_' + batchId\n    const stateTeacherAssignment = teacherAssignment;\n    delete stateTeacherAssignment[key];\n    setTeacherAssignment({ stateTeacherAssignment });\n  }\n  /**************************************** Template Section *****************************************/\n  return (\n    <>\n      <div className=\"bg-container\">\n        {\n          duplicateTeacherDetectedInRow ? <Alert color=\"warning\">\n            Two same teachers found in the same row\n          </Alert> : <></>\n        }\n        <h1 className='heading-style'>CLASS SCHEDULE</h1>\n        <div className=\"button-group added-style\">\n          <Button className=\"btn \" color=\"info\" onClick={onAddBatch}>\n            Add Batches\n          </Button>\n          {showAddBatchModal && <AddBatch showModal={showAddBatchModal} setShowModal={setShowAddBatchModal} batchList={batchList} />}\n          {addBatch}\n          <Button className=\"btn\" color=\"info\" onClick={onAddTeacher}>\n            Add Teachers\n          </Button>\n          {showAddTeacherModal && <AddTeacher showModal={showAddTeacherModal} setShowModal={setShowAddTeacherModal} />}\n          <Button className=\"btn\" color=\"info\" onClick={saveTable}>\n            Save\n          </Button>\n          <Button className=\"btn\" color=\"info\" onClick={convertToImage}>\n            Post\n          </Button>\n          <Button className=\"btn\" color=\"info\" onClick={clearAll}>\n            Clear ALL\n          </Button>\n        </div>\n        <div>\n          <div ref={divRef}>\n            <br />\n            <Form >\n              <div className='time-table-date-style'>\n                <FormGroup className=\"label-date-allignment\">\n                  <p>From:</p>\n                  <Input\n                    id=\"fromDate\"\n                    name=\"date\"\n                    type=\"date\"\n                    value={fromDate}\n                    onChange={(e) => { onChangeFromDate(e) }}\n                    className='input-size'\n                  />\n                </FormGroup>\n                <FormGroup className=\"label-date-allignment\">\n                  <p>To:</p>\n                  <Input\n                    id=\"toDate\"\n                    name=\"date\"\n                    type=\"date\"\n                    value={toDate}\n                    onChange={(e) => { onChangeToDate(e) }}\n                    className='input-size'\n                  />\n                </FormGroup>\n              </div>\n            </Form>\n            <table className='table-style'>\n              <tbody>\n                <div className=\"for-time\">\n                  <tr>\n                    <td className='F-style time-style'>Time</td>\n                    {batchList.map((each) => {\n                      return (\n                        <td className='F-style batch-style' key={each.BatchID}>{each.Batch}\n                          <button className=\"delete-style\" onClick={() => onDeleteBatch(each.BatchID)}><RxCross2 /></button>\n                        </td>\n                      )\n                    })}\n\n                  </tr>\n                </div>\n                <tr >\n                  {time.map((t) => {\n                    return (\n\n                      <div >\n                        <td className='F-style time-style'>{t.Time_From}-{t.Time_To}</td>\n                        {batchList.map((b) => {\n                          const key = t.LectureID + '_' + b.BatchID\n                          return (\n                            <td\n                              draggable={true}\n                              onDragOver={allowDrop}\n                              onDrop={(e) => handleDrop(e, t, b)}\n                              onDragStart={(e) => handleTableCellDragStart(e, t, b)}\n                              key={key}\n                              id={key}\n                              className={`each-block ${isTeacherDuplicateInLecture(t.LectureID, teacherAssignment[key]?.FacultyID ?? null) ? \"blink\" : \"\"}`}\n                              style={{ backgroundColor: teacherAssignment[key]?.color }}\n                            >\n                              <div className={`teacname-cross-style ${teacherAssignment[key]?.className} `}>\n                                <div className=\"teacher-name\" >\n                                  {teacherAssignment[key]?.Faculty}\n                                </div>\n                                <div className=\"cross-btn-container\">\n                                  {teacherAssignment[key]?.Faculty ? (\n                                    <button\n                                      className=\"cross-style\"\n                                      onClick={() => removeTeacher(t.LectureID, b.BatchID, teacherAssignment[key].FacultyID)}\n                                    >\n                                      <RxCross2 />\n                                    </button>\n                                  ) : <></>}\n                                </div>\n                              </div>\n                            </td>\n                          )\n                        })}\n                      </div>\n                    )\n                  })}\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className='teacher-container'>\n          {teacherList.map((teacher, index) => {\n            const { FacultyID, Faculty } = teacher;\n            teacher.color = COLORS[index]\n            return (\n              <div\n                style={{ backgroundColor: teacher.color }}\n                key={FacultyID}\n                className=\"teacher-item\"\n                draggable={true}\n                onDragStart={(e) => dragStart(e, teacher)}\n                onDragEnd={(e) => onDragEnd(e)}\n                onTouchStart={(e) => dragStart(e, teacher)}\n                onTouchMove={(e) => onTouchMove(e)}\n              >\n                <h3>{Faculty}</h3>\n                {teacherCounter[FacultyID] > 0 && (\n                  <span className={`counter-item `} draggable={false}>\n                    {teacherCounter[FacultyID]}\n                  </span>\n                )}\n                <button className=\"delete-style\" onClick={() => onDeleteTeacher(teacher.FacultyID)}><RxCross2 /></button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  )\n}\nexport default TimeTableV2;"],"sourceRoot":""}