{"version":3,"sources":["pages/TTPages/List/List.js","const/url.js","pages/TTPages/TeacherForm/TeacherForm.js","api/tt.api.js.js","pages/TTPages/AddBatch/AddBatch.js","api/upload.api.js","const/color.const.js","pages/TTPages/EditTimeTable/EditTimeTable.js"],"names":["teachers_list","FacultyID","Faculty","subject","batch","BatchID","Batch","CourseID","time","LectureID","Lecture","Time_From","Time_To","BASE_URL","URL","UPLOAD_FILE","GET_UPLOAD_FILE_URL","GET_SAVE_TIMETABLE_URL","GET_ALL_TT","GET_EDIT_TT","AddTeacher","_ref","showModal","setShowModal","useEffect","fetchApiData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_context","prev","next","fetch","sent","json","setApiData","t0","stop","apply","arguments","_useState","useState","_useState2","_slicedToArray","setFaculties","_useState3","_useState4","apiData","_useState5","_useState6","checkedItems","setCheckedItems","_apiData$Object","Object","responseObject","_responseObject$Facul","FacultyList","_responseObject$UserL","UserList","facultyNameMap","forEach","user","UserID","UserName","handleCheckboxChange","event","_event$target","target","name","checked","_objectSpread","_defineProperty","updatedFacultyList","map","faculty","closeModal","_jsx","children","_jsxs","Modal","isOpen","toggle","style","maxWidth","ModalHeader","ModalBody","className","maxHeight","overflowY","listStyle","facultyUser","bgColor","find","facultyName","type","onChange","ModalFooter","Button","color","onClick","newTeachersList","_loop","facultyID","selectedItem","parseInt","some","teacher","push","alert","TtApi","_createClass","_classCallCheck","getTtList","res","method","abrupt","Error","message","options","getEditTt","_callee2","fromDateEdit","myHeaders","_context2","Headers","append","headers","body","JSON","stringify","FromDate","replaceAll","_x","saveTt","_ref3","_callee3","fromDate","toDate","lectureList","sentBatchID","_context3","TimeTableID","Description","DateType","ToDate","ShiftID","SessionID","Session","IsActive","CreatedByUserID","CreatedOnDate","Date","toLocaleString","LectureList","_x2","_x3","_x4","_x5","saveEditedTt","_ref4","_callee4","_context4","_x6","_x7","_x8","_x9","_x10","_x11","_x12","_x13","_x14","_x15","_x16","AddBatch","batchList","setBatches","_responseObject$Batch","newBatches","batchID","UploadApi","getWattsappApi","url","cell","fileName","console","log","URLSearchParams","number","media_url","filename","instance_id","access_token","getWattsappGroupApiTeachers","group_id","getWattsappGroupApiOthers","uplaodFile","file","formData","FormData","getUploadedFile","_callee5","_context5","COLORS","EditTimeTable","useParams","appenColorTOTeacherList","getEditTimeTable","tableElement","document","querySelector","tableWidth","offsetWidth","setTableWidth","tt","setTt","draggedTeacher","setDraggedTeacher","_useState7","_useState8","setLectureList","_useState9","_useState10","teacherAssignment","setTeacherAssignment","_useState11","_useState12","teacherCounter","setTeacherCounter","_useState13","_useState14","lectureTeacherCounter","setLectureTeacherCounter","_useState15","_useState16","duplicateTeacherDetectedInRow","setDuplicateTeacherDetectedInRow","_useState17","_useState18","draggedCellKey","setDraggedCellKey","_useState19","_useState20","addBatch","_useState21","_useState22","setImage","_useState23","_useState24","showAddBatchModal","setShowAddBatchModal","_useState25","_useState26","showAddTeacherModal","setShowAddTeacherModal","_useState27","_useState28","setFromDate","_useState29","_useState30","setToDate","divRef","useRef","_useState31","_useState32","setBatchList","_useState33","_useState34","teacherList","setTeacherList","_useState35","_useState36","loaded","setLoaded","stateTeacherList","i","concat","_result$Object$Lectur","stateTeacherAssignment","_result$Object$Lectur2","setBatchAndTimeList","_toConsumableArray","length","lec","_lec$Batch","_lec$Lecture","LectureName","_result$Object","_result$Object$BatchI","_lec$Batch2","_result$Object2","_result$Object2$Lectu","lecture","t","_lec$Lecture2","indexOf","_lec$Batch3","key","updateLectureListOnDrop","updateTeacherCounterOnDrop","_tt$Batch","stateBatchList","filter","it","_tt$BatchID","dragStart","e","teacherDragged","allowDrop","ev","classList","contains","parentNode","innerText","trim","preventDefault","stateLectureList","lectureDto","Subject","stateTeacherCounter","handleDrop","selectedTeacher","keyInside","removeTeacher","lectureId","teacherId","stateLectureTeacherCounter","setTimeout","checkDuplicateTeacherInRowOnDrop","batchId","index","findIndex","row","_row$Batch","_row$Lecture","splice","formatDate","date","dateParts","split","dateObject","toISOString","substring","formatedDate","generateUID","firstPart","Math","random","secondPart","toString","slice","convertToImage","canvas","imgData","byteString","mimeString","ia","blob","imageName","_data$Object","data","fileDetail","html2canvas","current","toDataURL","atob","Uint8Array","charCodeAt","Blob","File","reverse","obj","_obj$Title","Title","LongURL","t1","formateDateWithslash","parts","saveTable","item","_Fragment","Alert","ref","Form","FormGroup","Input","id","defaultValue","value","onChangeFromDate","onChangeToDate","window","confirm","updatedBatches","each","onDeleteBatch","RxCross2","b","_teacherAssignment$ke","_teacherAssignment$ke2","_teacherAssignment$ke3","_teacherAssignment$ke4","_teacherAssignment$ke5","_teacherAssignment$ke6","draggable","onDragOver","onDrop","onDragStart","backgroundColor","onDragEnd","onTouchStart","onTouchMove","x","touches","clientX","y","clientY","elem","elementFromPoint","updatedTeachers","onDeleteTeacher"],"mappings":"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","file":"static/js/5.cb5e8357.chunk.js","sourcesContent":["import {v4 as uuidv4} from \"uuid\"\r\nexport const teachers_list = [\r\n        {\r\n            FacultyID: 22,\r\n            Faculty: \"MYK\",\r\n            subject: \"Physics\"\r\n        },\r\n        \r\n        {\r\n            FacultyID: 3038,\r\n            Faculty: \"KPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 2029,\r\n            Faculty: \"MRS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 3051,\r\n            Faculty: \"MAS\",\r\n            subject:\"Physics\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 3050,\r\n            Faculty: \"RSS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 25,\r\n            Faculty: \"NMS\",\r\n            subject:\"Biology\"\r\n        },\r\n        {\r\n            FacultyID: 3037,\r\n            Faculty: \"HDS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3032,\r\n            Faculty: \"MNM\",\r\n            subject: \"Biology\"\r\n        },\r\n        \r\n        {\r\n            FacultyID: 1023,\r\n            Faculty: \"SJ\",\r\n            subject:\"Biology\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 1025,\r\n            Faculty: \"AJ\",\r\n            subject:\"Biology\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 1026,\r\n            Faculty: \"DMPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n\r\n        \r\n       \r\n        \r\n        {\r\n            FacultyID: 1027,\r\n            Faculty: \"PSJ\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 3033,\r\n            Faculty: \"YBS\",\r\n            subject:\"Biology\"\r\n        },\r\n        {\r\n            FacultyID: 3030,\r\n            Faculty: \"AKS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 2028,\r\n            Faculty: \"AMS\",\r\n            subject:\"Maths\"\r\n        },\r\n        {\r\n            FacultyID: 3031,\r\n            Faculty: \"NDS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 3052,\r\n            Faculty: \"HWS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 1029,\r\n            Faculty: \"JRS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3053,\r\n            Faculty: \"HTS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n    ]; \r\n    \r\n\r\nexport const batch= [\r\n    {\r\n        BatchID: 1,\r\n        Batch: \"A1\",\r\n        CourseID: 3\r\n    },\r\n    {\r\n        BatchID: 6,\r\n        Batch: \"A2\",\r\n        CourseID: 3\r\n    },\r\n    {\r\n        BatchID: 10,\r\n        Batch: \"A3\",\r\n        CourseID: 3\r\n    },\r\n    {\r\n        BatchID: 7,\r\n        Batch: \"A4\",\r\n        CourseID: 3\r\n    },\r\n    {\r\n        BatchID: 3,\r\n        Batch: \"C1\",\r\n        CourseID: 1\r\n    },\r\n    {\r\n        BatchID: 15,\r\n        Batch: \"C2\",\r\n        CourseID: 1\r\n    },\r\n    {\r\n        BatchID: 2,\r\n        Batch: \"B1\",\r\n        CourseID: 2\r\n    },\r\n    {\r\n        BatchID: 3049,\r\n        Batch: \"B2\",\r\n        CourseID: 2\r\n    },\r\n    //MORE BATCHES ADDED WITH A FAKE BATCHID AND FAKE COURSEID NEED TO CHANGE LATER\r\n\r\n    {\r\n        BatchID: 20,\r\n        Batch: \"JO1\",\r\n        CourseID: 13\r\n    },\r\n    {\r\n        BatchID: 3042,\r\n        Batch: \"JXI-1\",\r\n        CourseID: 11\r\n    },\r\n    {\r\n        BatchID: 3061,\r\n        Batch: \"JXI-2\",\r\n        CourseID: 11\r\n    },\r\n    {\r\n        BatchID: 22,\r\n        Batch: \"JXII-1\",\r\n        CourseID: 12\r\n    },\r\n    {\r\n        BatchID: 3079,\r\n        Batch: \"JEE XL\",\r\n        CourseID: 1025\r\n    },\r\n    {\r\n        BatchID: 3078,\r\n        Batch: \"JEE adv\",\r\n        CourseID: 13\r\n    }\r\n]\r\n\r\n\r\nexport const time= [\r\n    {\r\n        LectureID: 1,\r\n        Lecture: \"L1\",\r\n        Time_From: \"08:30 AM\",\r\n        Time_To: \"09:45 AM\"\r\n    },\r\n    {\r\n        LectureID: 2,\r\n        Lecture: \"L2\",\r\n        Time_From: \"09:50 AM\",\r\n        Time_To: \"11:05 AM\"\r\n    },\r\n    {\r\n        LectureID: 3,\r\n        Lecture: \"L3\",\r\n        Time_From: \"11:20 AM\",\r\n        Time_To: \"12:35 PM\"\r\n    },\r\n    {\r\n        LectureID: 4,\r\n        Lecture: \"L4\",\r\n        Time_From: \"12:40 PM\",\r\n        Time_To: \"01:55 PM\"\r\n    },\r\n    {\r\n        LectureID: 5,\r\n        Lecture: \"L5\",\r\n        Time_From: \"02:00 PM\",\r\n        Time_To: \"03:15 PM\"\r\n    },\r\n    {\r\n        LectureID: 6,\r\n        Lecture: \"L6\",\r\n        Time_From: \"03:20 PM\",\r\n        Time_To: \"04:35 PM\"\r\n    },\r\n    {\r\n        LectureID: 7,\r\n        Lecture: \"L7\",\r\n        Time_From: \"04:50 PM\",\r\n        Time_To: \"06:05 PM\"\r\n    },\r\n    {\r\n        LectureID: 8,\r\n        Lecture: \"L8\",\r\n        Time_From: \"06:15 PM\",\r\n        Time_To: \"07:30 PM\"\r\n    }\r\n]\r\n","const ENV_URL = 'https://api.aayamcareerinstitute.co.in/api'; // producation fn\r\nconst DEV_URL = 'http://localhost:5001'; // producation fn\r\nconst BASE_URL= ENV_URL\r\n\r\n\r\n\r\nexport const URL = {\r\n    UPLOAD_FILE: BASE_URL + '/UploadFilesAttachment',\r\n    GET_UPLOAD_FILE_URL: BASE_URL + '/GetFiles', \r\n    GET_SAVE_TIMETABLE_URL: BASE_URL+ '/AddUpdateTimeTable',\r\n    GET_ALL_TT: BASE_URL + '/GetTimeTable', \r\n\r\n    GET_EDIT_TT: BASE_URL + '/GetTimeTableByDate',\r\n\r\n\r\n\r\n};  \r\n","import React, { useState, useEffect } from 'react';\r\nimport { batch } from '../List/List';\r\nimport { teachers_list } from '../List/List';\r\n// import { teachers_list } from '../../../const/teacherList';\r\n// import { batch } from '../../../const/batchList';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport \"./TeacherForm.css\";\r\n\r\nconst AddTeacher = ({ showModal, setShowModal }) => {\r\n\r\n  /************************************Use Effect****************************************** */\r\n  useEffect(() => {\r\n    if (showModal) {\r\n      const fetchApiData = async () => {\r\n        try {\r\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\r\n          const result = await response.json();\r\n          setApiData(result);\r\n        } catch (error) {\r\n        }\r\n      };\r\n\r\n      fetchApiData();\r\n    }\r\n  }, [showModal]);\r\n\r\n  /***********************Use State***************************************************** */\r\n  const [faculties, setFaculties] = useState(teachers_list);\r\n  // const [batches, setBatches] = useState(JSON.parse(localStorage.getItem('batches')) || batch);\r\n  const [apiData, setApiData] = useState({});\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n\r\n  /*************************other consts*************************************************** */\r\n  const { Object: responseObject = {} } = apiData;\r\n  const { Batch = [], FacultyList = [], UserList = [] } = responseObject;\r\n  const facultyNameMap = {};\r\n\r\n  UserList.forEach((user) => {\r\n    facultyNameMap[user.UserID] = user.UserName;\r\n  });\r\n  /****************************************methods******************************************* */\r\n  const handleCheckboxChange = (event) => {\r\n    const { name, checked } = event.target;\r\n    setCheckedItems({\r\n      ...checkedItems,\r\n      [name]: checked,\r\n    });\r\n  };\r\n\r\n  const updatedFacultyList = FacultyList.map((faculty) => ({\r\n    ...faculty,\r\n    Faculty: facultyNameMap[faculty.FacultyID] || faculty.Faculty,\r\n  }));\r\n\r\n  const addToFaculty = () => {\r\n    const newTeachersList = teachers_list;\r\n\r\n    for (const facultyID in checkedItems) {\r\n      if (checkedItems[facultyID]) {\r\n        const selectedItem = updatedFacultyList.find(\r\n          (faculty) => faculty.FacultyID === parseInt(facultyID)\r\n        );\r\n\r\n        if (selectedItem) {\r\n          const facultyUser = UserList.find(\r\n            (user) => user.UserID === selectedItem.FacultyID\r\n          );\r\n          const facultyName = facultyUser ? facultyUser.UserName : selectedItem.Faculty;\r\n\r\n          const isTeacherAlreadyAdded = newTeachersList.some(\r\n            (teacher) => teacher.FacultyID === selectedItem.FacultyID\r\n          );\r\n\r\n          if (!isTeacherAlreadyAdded) {\r\n            newTeachersList.push({\r\n              FacultyID: selectedItem.FacultyID,\r\n              Faculty: facultyName,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    setFaculties(newTeachersList);\r\n    alert(\"faculty added successfully\");\r\n\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  /**********************************************Template to return******************************** */\r\n  return (\r\n    <div>\r\n      <Modal isOpen={showModal} toggle={closeModal} style={{ maxWidth: '320px' }}>\r\n        <ModalHeader toggle={closeModal}>Select Teachers from the list</ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\r\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\r\n              {updatedFacultyList.map((faculty) => {\r\n                const { FacultyID, bgColor, className } = faculty;\r\n                const facultyUser = UserList.find((user) => user.UserID === FacultyID);\r\n                const facultyName = facultyUser ? facultyUser.UserName : faculty.Faculty;\r\n                return (\r\n                  <li key={faculty.FacultyID}>\r\n                    <div className=\"add-faculty-style\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        name={faculty.FacultyID}\r\n                        checked={checkedItems[faculty.FacultyID] || false}\r\n                        onChange={handleCheckboxChange}\r\n                        className=\"addfaculty-checkbox-style\"\r\n                      />\r\n                      {facultyName}\r\n                    </div>\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={addToFaculty}>Add</Button>{' '}\r\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default AddTeacher;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { URL } from '../const/url';\r\n\r\nexport default class TtApi {\r\n    getTtList = async () => {\r\n        try {\r\n            const res = await fetch(URL.GET_ALL_TT, {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\ngetEditTt = async (fromDateEdit) => {\r\n    try {\r\n        // const formData = new FormData();\r\n        // formData.append('file', file, file.name);\r\n        const myHeaders = new Headers();\r\n          myHeaders.append(\"Content-Type\", \"application/json\");\r\n        const res = await fetch(URL.GET_EDIT_TT, {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify({\r\n            FromDate: fromDateEdit.replaceAll(\"-\", \"/\"),\r\n        })});\r\n        const result = await res.json();\r\n        return result;\r\n    } catch (e) {\r\n        throw new Error(e.message, e.options);\r\n    }\r\n}\r\n\r\nsaveTt = async (fromDate,toDate,lectureList,sentBatchID) => {\r\n    try {\r\n        const myHeaders = new Headers();\r\n          myHeaders.append(\"Content-Type\", \"application/json\");\r\n        const res = await fetch(URL.GET_SAVE_TIMETABLE_URL, {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify({\r\n                TimeTableID: 0,\r\n                Description: \"time table save\",\r\n                DateType: \"multiple\",\r\n                FromDate: fromDate,\r\n                ToDate: toDate,\r\n                ShiftID: 1,\r\n                SessionID: 5,\r\n                Session: \"string\",\r\n                // BatchID: [\r\n                //   1, 6, 10, 7, 3, 15, 2, 3049, 20, 3042, 3061, 22, 13, 14\r\n                // ],,\r\n                BatchID:sentBatchID,\r\n                LectureID: [\r\n                  1, 2, 3, 4, 5, 6, 7, 8\r\n                ],\r\n                IsActive: true,\r\n                CreatedByUserID: 1,\r\n                CreatedOnDate: new Date().toLocaleString(),\r\n                LectureList: lectureList\r\n        })});\r\n        const result = await res.json();\r\n        return result;\r\n    } catch (e) {\r\n        throw new Error(e.message, e.options);\r\n    }\r\n}\r\n\r\nsaveEditedTt = async (TimeTableID,DateType,fromDate,toDate,ShiftID,SessionID,Session,sentBatchID,LectureID,CreatedByUserID,lectureList) => {\r\n    try {\r\n        const myHeaders = new Headers();\r\n          myHeaders.append(\"Content-Type\", \"application/json\");\r\n        const res = await fetch(URL.GET_SAVE_TIMETABLE_URL, {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify({\r\n            TimeTableID: 0,\r\n            Description: \"time table save\",\r\n            DateType: \"multiple\",\r\n            FromDate: fromDate,\r\n            ToDate: toDate,\r\n            ShiftID: ShiftID,\r\n            SessionID: SessionID,\r\n            Session: Session,\r\n            BatchID: sentBatchID,\r\n            LectureID: LectureID,\r\n            IsActive: true,\r\n            CreatedByUserID: CreatedByUserID,\r\n            CreatedOnDate: new Date().toLocaleString(),\r\n            LectureList: lectureList\r\n        })});\r\n        const result = await res.json();\r\n        return result;\r\n    } catch (e) {\r\n        throw new Error(e.message, e.options);\r\n    }\r\n}\r\n\r\n}","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { batch } from '../List/List';\r\n// import { batch } from '../../../const/batchList';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport \"./AddBatch.css\"\r\n\r\nconst AddBatch = ({ showModal, setShowModal, batchList }) => {\r\n  /******************************************Use Effect********************************************** */\r\n  useEffect(() => {\r\n    if (showModal) {\r\n      const fetchApiData = async () => {\r\n        try {\r\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\r\n          const result = await response.json();\r\n          setApiData(result);\r\n        } catch (error) {\r\n        }\r\n      };\r\n\r\n      fetchApiData();\r\n\r\n    }\r\n  }, [showModal]);\r\n  /********************************************Use State****************************************** */\r\n  const [batches, setBatches] = useState(batchList);\r\n  const [apiData, setApiData] = useState({});\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n\r\n  /*****************************Other consts******************************************************** */\r\n  const { Object: responseObject = {} } = apiData;\r\n  const { Batch = [] } = responseObject;\r\n\r\n  /***************************************Methods*************************************************** */\r\n  const handleCheckboxChange = (event) => {\r\n    const { name, checked } = event.target;\r\n    setCheckedItems({\r\n      ...checkedItems,\r\n      [name]: checked,\r\n    });\r\n  };\r\n\r\n  const addToBatch = () => {\r\n    const newBatches = batchList;\r\n    for (const batchID in checkedItems) {\r\n      if (checkedItems[batchID]) {\r\n        const selectedItem = Batch.find((batch) => batch.BatchID === parseInt(batchID));\r\n        if (selectedItem && !newBatches.find((batch) => batch.BatchID === selectedItem.BatchID)) {\r\n          newBatches.push({\r\n            BatchID: selectedItem.BatchID,\r\n            Batch: selectedItem.Batch,\r\n            CourseID: selectedItem.CourseID,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    setBatches(newBatches);\r\n    alert(\"batches added successfully\");\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  /***************************Template to return******************************************************* */\r\n  return (\r\n    <div>\r\n      <Modal isOpen={showModal} toggle={closeModal} style={{ maxWidth: '320px' }}>\r\n        <ModalHeader toggle={closeModal}>Select Batches from the list</ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\r\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\r\n              {Batch.map((batch) => (\r\n                <li key={batch.BatchID}>\r\n                  <div className=\"add-batch-style\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name={batch.BatchID}\r\n                      checked={checkedItems[batch.BatchID] || false}\r\n                      onChange={handleCheckboxChange}\r\n                      className=\"addbatch-checkbox-style\"\r\n                    />\r\n                    {batch.Batch}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={addToBatch}>Add</Button>{' '}\r\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default AddBatch;\r\n\r\n","import { URL } from '../const/url';\r\n\r\nexport default class UploadApi {\r\n    // getUserWalletBalance = async (userId) => {\r\n    //     try {\r\n    //         GlobalEmitterService.emit(true);\r\n    //         const token = `Bearer ${AuthService.getToken()}`;\r\n    //         const res = await fetch(URL.USER_WALLET_BALANCE + '?' + new URLSearchParams({\r\n    //             userId\r\n    //         }), {\r\n    //             method: 'GET',\r\n    //             headers: { 'Content-Type': 'application/json', 'Authorization': token },\r\n    //         });\r\n    //         const result = await res.json();\r\n    //         GlobalEmitterService.emit(false);\r\n    //         return result;\r\n    //     } catch (e) {\r\n    //         GlobalEmitterService.emit(false);\r\n    //         throw new Error(e.message, e.options);\r\n    //     }\r\n    // }\r\n\r\n\r\n    getWattsappApi = async (url, message, cell, fileName) => {\r\n        try {\r\n            console.log(\"url\", url);\r\n            console.log(\"mesage\", message);\r\n            console.log(\"cel\", cell);\r\n            console.log(\"file\", fileName);\r\n            // https://ziper.io/api/send.php?number=917898118503&type=media&message=test%20message&media_url=https://api.aayamcareerinstitute.co.in//Uploads/Files/File_3431223213168.pdf&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/send.php\" + '?' + new URLSearchParams({\r\n                number: cell,\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"6453479F141A2\",\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n\r\n    getWattsappGroupApiTeachers = async (url, message, fileName) => {\r\n        try {\r\n            console.log(\"url\", url);\r\n            console.log(\"mesage\", message);\r\n            console.log(\"file\", fileName);\r\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\r\n                group_id: \"919977116612-1595572006@g.us\",\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"6453479F141A2\",\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getWattsappGroupApiOthers = async (url, message, fileName) => {\r\n        try {\r\n            console.log(\"url\", url);\r\n            console.log(\"mesage\", message);\r\n            console.log(\"file\", fileName);\r\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\r\n                group_id: \"919826362001-1628170376@g.us\",\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"6453479F141A2\",\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    uplaodFile = async (file) => {\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('file', file, file.name);\r\n            const res = await fetch(URL.UPLOAD_FILE, {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getUploadedFile = async () => {\r\n        try {\r\n            const res = await fetch(URL.GET_UPLOAD_FILE_URL, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({})\r\n\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n}","export const COLORS = [\"#D4E6F1\", \"#E8DAEF\", \"#008080\", \"#808000\", \"#C39BD3\", \"#76D7C4\", \"#3498DB\", \"#358b79\", \"#847f86\", \"rgb(251, 235, 9)\", \"#CA6F1E\", \"#CCCCFF\", \"#F4D03F\", \"rgb(199, 185, 84)\", \"#979A9A\", \"#F0B27A\", \"rgb(117, 98, 179)\", \"#CD5C5C\", \"#40E0D0\", \"#DAF7A6\", \"#008080\", \"#808000\", \"#FADBD8\", \"green\", \"yellow\", \"white\", \"red\", \"pink\"]\r\n","import { useParams } from 'react-router-dom';\r\nimport TtApi from '../../../api/tt.api.js';\r\nimport \"./EditTimeTable.scss\";\r\n/*TAKING THE BELOW IMPORT FROM TIMETABLEV2* */\r\nimport html2canvas from 'html2canvas';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport { Alert } from 'reactstrap';\r\nimport { COLORS } from '../../../const/color.const';\r\nimport AddBatch from '../AddBatch/AddBatch';\r\nimport { teachers_list, time } from '../List/List';\r\n// import \"./TimeTableV2.scss\";\r\nimport { Button, Form, FormGroup, Input } from \"reactstrap\";\r\nimport UploadApi from '../../../api/upload.api';\r\nimport AddTeacher from '../TeacherForm/TeacherForm';\r\n\r\nconst EditTimeTable = () => {\r\n    const { fromDateEdit } = useParams();\r\n\r\n    /**************************************** const Section ************************************/\r\n    /**************************************** Use Effect Section ************************************/\r\n    useEffect(() => {\r\n        appenColorTOTeacherList();\r\n        getEditTimeTable();\r\n        const tableElement = document.querySelector('.table-style');\r\n        if (tableElement) {\r\n            const tableWidth = tableElement.offsetWidth;\r\n            setTableWidth(tableWidth);\r\n        }\r\n    }, []);\r\n\r\n    /**************************************** State Section *****************************************/\r\n    const [tt, setTt] = useState(null);\r\n\r\n    /* taking the below useStates from timetable.v2*/\r\n    const [tableWidth, setTableWidth] = useState(0); // set table width\r\n    const [draggedTeacher, setDraggedTeacher] = useState({}); // Contains dragged teacher\r\n    const [lectureList, setLectureList] = useState([]);\r\n    const [teacherAssignment, setTeacherAssignment] = useState({});\r\n    const [teacherCounter, setTeacherCounter] = useState({}); // key: teacherId, value: counter\r\n    const [lectureTeacherCounter, setLectureTeacherCounter] = useState({}); // key: lectureId_teacherId, value: counter to check duplicate rows\r\n    const [duplicateTeacherDetectedInRow, setDuplicateTeacherDetectedInRow] = useState(false);\r\n    const [draggedCellKey, setDraggedCellKey] = useState(null);\r\n    // contains key of teacher asignment which is grag within the table\r\n    const [addBatch, setAddBatch] = useState(null);\r\n    const [image, setImage] = useState(null);   //  for div to image \r\n    const [showAddBatchModal, setShowAddBatchModal] = useState(false); //for add Batch popup\r\n    const [showAddTeacherModal, setShowAddTeacherModal] = useState(false);\r\n    const [fromDate, setFromDate] = useState();\r\n    const [toDate, setToDate] = useState(\"\");\r\n    const divRef = useRef(null);\r\n    const [batchList, setBatchList] = useState([]);\r\n    const [teacherList, setTeacherList] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    /**************************************** Component Method Section *********************************/\r\n    const appenColorTOTeacherList = () => {\r\n        const stateTeacherList = [];\r\n        teachers_list.forEach((teacher, i) => {\r\n            teacher.color = COLORS[i];\r\n            stateTeacherList.push(teacher);\r\n        });\r\n        setTeacherList([...stateTeacherList]);\r\n    };\r\n\r\n    const getEditTimeTable = async () => {\r\n        const result = await new TtApi().getEditTt(fromDateEdit);\r\n        setTt(result.Object);\r\n        setFromDate(result.Object.FromDate)\r\n        setToDate(result.Object.ToDate);\r\n        setBatchAndTimeList(result.Object);\r\n        setLectureList([...result.Object.LectureList])\r\n        const stateTeacherAssignment = teacherAssignment;\r\n        if (result.Object.LectureList?.length > 0) {\r\n            result.Object.LectureList?.forEach(lec => {\r\n                if (lec?.Batch?.BatchID && lec?.Lecture?.LectureName && lec?.FacultyID) {\r\n                    const lecture = time.find(t => t.Lecture === lec?.Lecture?.LectureName);\r\n                    const teacher = teachers_list.find(t => t.FacultyID === lec.FacultyID);\r\n                    if (lecture?.LectureID && teacher?.FacultyID && result?.Object?.BatchID?.indexOf(lec?.Batch?.BatchID) >= 0 && result?.Object?.LectureID?.indexOf(lecture?.LectureID) >= 0) {\r\n                        const key = lecture.LectureID + '_' + lec?.Batch?.BatchID;\r\n                        if (!teacherAssignment[key]) {\r\n                            stateTeacherAssignment[key] = teacher;\r\n                            setTeacherAssignment({ ...stateTeacherAssignment });\r\n                            updateLectureListOnDrop(lecture, lec?.Batch, teacher);\r\n                            updateTeacherCounterOnDrop(teacher);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        setLoaded(true);\r\n\r\n    }\r\n\r\n    const setBatchAndTimeList = (tt) => {\r\n        if (tt) {\r\n            const stateBatchList = tt?.Batch?.filter(it => tt.BatchID?.indexOf(it.BatchID) >= 0);\r\n            setBatchList([...stateBatchList]);\r\n        }\r\n\r\n    };\r\n\r\n    /* Taking the below code from timetable.v2*/\r\n    const dragStart = (e, teacherDragged) => {\r\n        setDraggedTeacher(teacherDragged);\r\n    };\r\n    const allowDrop = (ev) => {\r\n        let t = ev.target;\r\n        while (t && (!t.classList || !t.classList.contains(\"each-block\"))) {\r\n            t = t.parentNode;\r\n        }\r\n        if (t && t.innerText.trim() !== \"\") {\r\n            // Prevent drop event if cell is not empty\r\n            return false;\r\n        }\r\n        ev.preventDefault();\r\n    };\r\n\r\n    // Prepare lecture list\r\n    const updateLectureListOnDrop = (lecture, batch, teacher) => {\r\n        const stateLectureList = lectureList;\r\n        const lectureDto = {};\r\n        lectureDto.ID = \"0\";\r\n        lectureDto.TimeTableID = \"0\";\r\n        lectureDto.LectureName = \"\";\r\n        lectureDto.Batch = batch;\r\n        lectureDto.Lecture = lecture;\r\n        lectureDto.Subject = teacher.subject;\r\n        lectureDto.FacultyID = teacher.FacultyID;\r\n        lectureDto.IsActive = true;\r\n        lectureDto.CreatedByUserID = \"1\";\r\n        lectureDto.CreatedOnDate = \"02/05/2023\";\r\n        stateLectureList.push(lectureDto);\r\n        setLectureList([...stateLectureList]);\r\n    };\r\n    const updateTeacherCounterOnDrop = (teacher) => {\r\n        const stateTeacherCounter = teacherCounter;\r\n        if (!stateTeacherCounter[teacher.FacultyID]) {\r\n            stateTeacherCounter[teacher.FacultyID] = 1;\r\n        } else {\r\n            stateTeacherCounter[teacher.FacultyID] += 1;\r\n        }\r\n        setTeacherCounter({ ...stateTeacherCounter });\r\n    }\r\n\r\n    const checkDuplicateTeacherInRowOnDrop = (lectureId, teacherId) => {\r\n        const key = lectureId + '_' + teacherId;\r\n        const stateLectureTeacherCounter = lectureTeacherCounter;\r\n        if (!stateLectureTeacherCounter[key]) {\r\n            stateLectureTeacherCounter[key] = 1\r\n        } else {\r\n            stateLectureTeacherCounter[key] += 1\r\n        }\r\n        setLectureTeacherCounter({ ...stateLectureTeacherCounter });\r\n        if (stateLectureTeacherCounter[key] > 1) {\r\n            setDuplicateTeacherDetectedInRow(true);\r\n            setTimeout(() => {\r\n                setDuplicateTeacherDetectedInRow(false);\r\n            }, 3000); // Alert duration \r\n        }\r\n    }\r\n\r\n    /**\r\n     * On Drop\r\n     * Check if drops within the table if yes remove techer from current block by preserving the teacher and proceed for select teacher & if no proceed for select teacher\r\n     * set teacher assignment object\r\n     * set teature lecture list for api call (updateLectureListOnDrop)\r\n     * update teacher drop counter (updateTeacherCounterOnDrop)\r\n     * Check if teacher dropped in same row if yes show alert and set lecture vs teacher counter to use for blink (checkDuplicateTeacherInRowOnDrop)\r\n     * empty teacher state\r\n     * empty state used withing table drag\r\n     */\r\n    const handleDrop = (e, lecture, batch) => {\r\n        let selectedTeacher = draggedTeacher;\r\n        if (draggedCellKey) {\r\n            // if dragged within the table remove source & proceed for drop\r\n            const keyInside = draggedCellKey.lecture.LectureID + '_' + draggedCellKey.batch.BatchID;\r\n            selectedTeacher = teacherAssignment[keyInside];\r\n            removeTeacher(draggedCellKey.lecture.LectureID, draggedCellKey.batch.BatchID, teacherAssignment[keyInside].FacultyID);\r\n        }\r\n        const stateTeacherAssignment = teacherAssignment;\r\n        const key = lecture.LectureID + '_' + batch.BatchID;\r\n        teacherAssignment[key] = selectedTeacher;\r\n        setTeacherAssignment({ ...stateTeacherAssignment });\r\n        updateLectureListOnDrop(lecture, batch, selectedTeacher);\r\n        updateTeacherCounterOnDrop(selectedTeacher);\r\n        checkDuplicateTeacherInRowOnDrop(lecture.LectureID, selectedTeacher.FacultyID);\r\n        setDraggedTeacher({});\r\n        setDraggedCellKey(null);\r\n    }\r\n\r\n    const removeTeacher = (lectureId, batchId, teacherId) => {\r\n        // Remove from teacher assignment\r\n        const key = lectureId + '_' + batchId\r\n        const stateTeacherAssignment = teacherAssignment;\r\n        delete stateTeacherAssignment[key];\r\n        setTeacherAssignment({ ...stateTeacherAssignment });\r\n\r\n        // Remove from lecture list\r\n        const stateLectureList = lectureList;\r\n        const index = stateLectureList?.findIndex(row => row.Batch?.BatchID === batchId && row.Lecture?.LectureID === lectureId);\r\n\r\n        if (index >= 0) {\r\n            stateLectureList.splice(index, 1);\r\n            setLectureList([...stateLectureList]);\r\n\r\n        }\r\n        // stateLectureList.pop(teacherAssignment)\r\n\r\n        // Decrease one from teacher counter\r\n        const stateTeacherCounter = teacherCounter;\r\n        stateTeacherCounter[teacherId] -= 1;\r\n        if (stateTeacherCounter[teacherId] <= 0) {\r\n            delete stateTeacherCounter[teacherId];\r\n        }\r\n        setTeacherCounter(stateTeacherCounter);\r\n    }\r\n\r\n    // Called to provide class name if true set classname blink else empty\r\n    // return true if same teacher counter greater than one with respect to lectureId\r\n    const isTeacherDuplicateInLecture = (lectureId, teacherId) => {\r\n        if (!lectureId || !teacherId) {\r\n            return false;\r\n        }\r\n        const key = lectureId + '_' + teacherId;\r\n        return lectureTeacherCounter[key] > 1;\r\n    };\r\n\r\n    const handleTableCellDragStart = (e, lecture, batch) => {\r\n        setDraggedCellKey({\r\n            lecture, batch\r\n        });\r\n    };\r\n\r\n    const onDragEnd = (e) => {\r\n        setDraggedTeacher({});\r\n    }\r\n\r\n    const onTouchMove = (e) => {\r\n        const x = e.touches[0].clientX;\r\n        const y = e.touches[0].clientY;\r\n        var elem = document.elementFromPoint(x, y);\r\n        alert('xx xx elem ', elem.id);\r\n    }\r\n\r\n    const formatDate = (date) => {\r\n        if (!date) {\r\n            return \"\";\r\n        }\r\n        const dateParts = date.split(\"/\");\r\n\r\n        // month is 0-based, that's why we need dataParts[1] - 1\r\n        const dateObject = new Date(dateParts[2], dateParts[1] - 1, dateParts[0]);\r\n        console.log(\"sss\",dateObject.toISOString().substring(0, 10));\r\n        // return dateObject.toISOString().substring(0, 10);\r\n        const formatedDate= `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;\r\n        console.log(\"xxdateo\",formatedDate);\r\n\r\n        return formatedDate;\r\n\r\n    }\r\n    /*********************************************This below methods are added by jitendra from TimeTable.js***********************************/\r\n    const generateUID = () => {\r\n        // I generate the UID from two parts here \r\n        // to ensure the random number provide enough bits.\r\n        var firstPart = (Math.random() * 46656) | 0;\r\n        var secondPart = (Math.random() * 46656) | 0;\r\n        firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\r\n        secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\r\n        return firstPart + secondPart;\r\n    }\r\n    const convertToImage = async () => {\r\n        // alert(\"Time table image sent successfully\")\r\n        const canvas = await html2canvas(divRef.current);\r\n        const imgData = canvas.toDataURL();\r\n        setImage(imgData);\r\n        /*converting page64 url got as imgData into file Object by using blob below*/\r\n        const byteString = atob(imgData.split(',')[1]);\r\n        const mimeString = imgData.split(',')[0].split(':')[1].split(';')[0];\r\n        const ia = new Uint8Array(byteString.length);\r\n        for (let i = 0; i < byteString.length; i++) {\r\n            ia[i] = byteString.charCodeAt(i);\r\n        }\r\n        const blob = new Blob([ia], { type: mimeString });\r\n        const imageName = generateUID();\r\n        const file = new File([blob], imageName + \".jpg\");\r\n        const fileName = imageName + \".jpg\";\r\n        const result = await new UploadApi().uplaodFile(file);\r\n        if (result === \"Success\") {\r\n            const data = await new UploadApi().getUploadedFile();\r\n            if (data.Object?.length > 0) {\r\n                const fileDetail = data.Object.reverse().find(obj => { return obj.Title?.indexOf(imageName) >= 0 });\r\n                // for (let i = 0; i < numberList.length; i++) {       THIS IS USED WHEN GETWATTSAPPAPI WILL USED SO DONT DELETE THIS LINES\r\n                try {\r\n                    // const cell = numberList[i];\r\n                    /*CHECK THE DETAILS OF THIS GETWATTSAPPAPI IN UPLOAD.API.JS FILE IN API FOLDER*/\r\n                    // await new UploadApi().getWattsappApi(fileDetail.LongURL, \"time table\", cell, fileName);\r\n                    await new UploadApi().getWattsappGroupApiOthers(fileDetail.LongURL, \"time table\", fileName);\r\n                    // await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\r\n                } catch (e) {\r\n                    // continue;\r\n                }\r\n                try {\r\n                    await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\r\n                } catch (e) {\r\n                }\r\n            }\r\n        }\r\n        alert(\"Time table image sent successfully\")\r\n    }\r\n    const formateDateWithslash = (date) => {\r\n        const parts = date.split(\"-\");\r\n        const formatedDate = `${parts[2]}/${parts[1]}/${parts[0]}`;\r\n        return formatedDate;\r\n    }\r\n\r\n    const onChangeFromDate = (e) => {\r\n        const date=e.target.value;\r\n        setFromDate(formateDateWithslash(date));\r\n    }\r\n    const onChangeToDate = (e) => {\r\n        const date=e.target.value;\r\n        setToDate(formateDateWithslash(date));\r\n    }\r\n    const onAddBatch = () => {\r\n        setShowAddBatchModal(true);\r\n    }\r\n    const onDeleteBatch = (batchID) => {\r\n        const confirmDelete = window.confirm('Are you sure you want to delete this batch?');\r\n        if (confirmDelete) {\r\n            const updatedBatches = batchList.filter((each) => each.BatchID !== batchID);\r\n            setBatchList(updatedBatches);\r\n        }\r\n    };\r\n    const onAddTeacher = () => {\r\n        setShowAddTeacherModal(true);\r\n    }\r\n    const onDeleteTeacher = (facultyID) => {\r\n        const confirmDelete = window.confirm('Are you sure you want to delete this Faculty?');\r\n        if (confirmDelete) {\r\n            const updatedTeachers = teacherList.filter((each) => each.FacultyID !== facultyID);\r\n            setTeacherList(updatedTeachers);\r\n        };\r\n    }\r\n\r\n    const saveTable = async () => {\r\n        const sentBatchID = batchList.map(item => item.BatchID)\r\n        const result = await new TtApi().saveEditedTt(tt.TimeTableID, tt.DateType, fromDate, toDate, tt.ShiftID, tt.SessionID, tt.Session, sentBatchID, tt.LectureID, tt.CreatedByUserID, lectureList);\r\n        alert(\"time table saved successfully\");\r\n    };\r\n\r\n    const clearAll = (key) => {\r\n        // const key = lectureId + '_' + batchId\r\n        const stateTeacherAssignment = teacherAssignment;\r\n        delete stateTeacherAssignment[key];\r\n        setTeacherAssignment({ stateTeacherAssignment });\r\n    }\r\n\r\n    /**************************************** Template Section *****************************************/\r\n    return (\r\n        <>\r\n            {\r\n                loaded ? <div>\r\n                    <div className=\"bg-container\">\r\n                        {\r\n                            duplicateTeacherDetectedInRow ? <Alert color=\"warning\">\r\n                                Two same teachers found in the same row\r\n                            </Alert> : <></>\r\n                        }\r\n                        <h1 className='heading-style'>CLASS SCHEDULE</h1>\r\n                        <div className=\"button-group added-style\">\r\n                            <Button className=\"btn \" color=\"info\" onClick={onAddBatch}>\r\n                                Add Batches\r\n                            </Button>\r\n                            {showAddBatchModal && <AddBatch showModal={showAddBatchModal} setShowModal={setShowAddBatchModal} batchList={batchList} />}\r\n                            {addBatch}\r\n                            <Button className=\"btn\" color=\"info\" onClick={onAddTeacher}>\r\n                                Add Teachers\r\n                            </Button>\r\n                            {showAddTeacherModal && <AddTeacher showModal={showAddTeacherModal} setShowModal={setShowAddTeacherModal} />}\r\n                            <Button className=\"btn\" color=\"info\" onClick={saveTable}>\r\n                                Save\r\n                            </Button>\r\n                            <Button className=\"btn\" color=\"info\" onClick={convertToImage}>\r\n                                Post\r\n                            </Button>\r\n                            <Button className=\"btn\" color=\"info\" onClick={clearAll}>\r\n                                Clear ALL\r\n                            </Button>\r\n                        </div>\r\n                        <div>\r\n                            <div ref={divRef}>\r\n                                <br />\r\n                                <Form >\r\n                                    <div className='time-table-date-style'>\r\n                                        <FormGroup className=\"label-date-allignment\">\r\n                                            <p>From:</p>\r\n                                            <Input\r\n                                                id=\"fromDate\"\r\n                                                name=\"fromDate\"\r\n                                                type=\"date\"\r\n\r\n                                                defaultValue={formatDate(fromDate)}\r\n                                                onChange={(e) => { onChangeFromDate(e) }}\r\n                                                className='input-size'\r\n                                            />\r\n                                        </FormGroup>\r\n                                        <FormGroup className=\"label-date-allignment\">\r\n                                            <p>To:</p>\r\n                                            <Input\r\n                                                id=\"toDate\"\r\n                                                name=\"toDate\"\r\n                                                type=\"date\"\r\n                                                defaultValue={formatDate(toDate)}\r\n\r\n                                                onChange={(e) => { onChangeToDate(e) }}\r\n                                                className='input-size'\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </Form>\r\n\r\n                                <table className='table-style'>\r\n                                    <tbody>\r\n                                        <div className=\"for-time\">\r\n                                            <tr>\r\n                                                <td className='F-style time-style'>Time</td>\r\n                                                {batchList && batchList.map((batch) => {\r\n                                                    return (\r\n                                                        <td className='F-style batch-style' key={batch.BatchID}>{batch.Batch}\r\n                                                            <button className=\"delete-style\" onClick={() => onDeleteBatch(batch.BatchID)}><RxCross2 /></button>\r\n                                                        </td>\r\n                                                    )\r\n                                                })}\r\n\r\n                                            </tr>\r\n                                        </div>\r\n                                        <tr >\r\n                                            {time.map((t) => {\r\n                                                return (\r\n                                                    <div >\r\n                                                        <td className='F-style time-style'>{t.Time_From}-{t.Time_To}</td>\r\n                                                        {batchList && batchList.map((b) => {\r\n                                                            const key = t.LectureID + '_' + b.BatchID\r\n                                                            return (\r\n                                                                <td\r\n                                                                    draggable={true}\r\n                                                                    onDragOver={allowDrop}\r\n                                                                    onDrop={(e) => handleDrop(e, t, b)}\r\n                                                                    onDragStart={(e) => handleTableCellDragStart(e, t, b)}\r\n                                                                    key={key}\r\n                                                                    id={key}\r\n                                                                    className={`each-block ${isTeacherDuplicateInLecture(t.LectureID, teacherAssignment[key]?.FacultyID ?? null) ? \"blink\" : \"\"}`}\r\n                                                                    style={{ backgroundColor: teacherAssignment[key]?.color }}\r\n                                                                >\r\n                                                                    <div className={`teacname-cross-style ${teacherAssignment[key]?.className} `}>\r\n                                                                        <div className=\"teacher-name\" >\r\n                                                                            {teacherAssignment[key]?.Faculty}\r\n                                                                        </div>\r\n                                                                        <div className=\"cross-btn-container\">\r\n                                                                            {teacherAssignment[key]?.Faculty ? (\r\n                                                                                <button\r\n                                                                                    className=\"cross-style\"\r\n                                                                                    onClick={() => removeTeacher(t.LectureID, b.BatchID, teacherAssignment[key].FacultyID)}\r\n                                                                                >\r\n                                                                                    <RxCross2 />\r\n                                                                                </button>\r\n                                                                            ) : <></>}\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                            )\r\n                                                        })}\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <div className='teacher-container'>\r\n                            {teacherList.map((teacher, index) => {\r\n                                const { FacultyID, Faculty } = teacher;\r\n                                return (\r\n                                    <div\r\n                                        style={{ backgroundColor: teacher.color }}\r\n                                        key={FacultyID}\r\n                                        className=\"teacher-item\"\r\n                                        draggable={true}\r\n                                        onDragStart={(e) => dragStart(e, teacher)}\r\n                                        onDragEnd={(e) => onDragEnd(e)}\r\n                                        onTouchStart={(e) => dragStart(e, teacher)}\r\n                                        onTouchMove={(e) => onTouchMove(e)}\r\n                                    >\r\n                                        <h3>{Faculty}</h3>\r\n                                        {teacherCounter[FacultyID] > 0 && (\r\n                                            <span className={`counter-item `} draggable={false}>\r\n                                                {teacherCounter[FacultyID]}\r\n                                            </span>\r\n                                        )}\r\n                                        <button className=\"delete-style\" onClick={() => onDeleteTeacher(teacher.FacultyID)}><RxCross2 /></button>\r\n\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div> : <div></div>\r\n            }\r\n            {/* {editTimeTable} */}\r\n        </>\r\n    )\r\n}\r\nexport default EditTimeTable\r\n"],"sourceRoot":""}