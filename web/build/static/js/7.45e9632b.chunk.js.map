{"version":3,"sources":["pages/TTPages/List/List.js","service/GlobalEmitterService.js","const/url.js","pages/TTPages/TeacherForm/TeacherForm.js","api/tt.api.js","pages/TTPages/AddBatch/AddBatch.js","api/upload.api.js","pages/TTPages/TimeTable2/TimeTable2.js"],"names":["teachers_list","FacultyID","Faculty","subject","batch","BatchID","Batch","CourseID","time","LectureID","Lecture","Time_From","Time_To","GlobalEmitterService","_createClass","_classCallCheck","emit","status","event","CustomEvent","detail","window","dispatchEvent","BASE_URL","URL","UPLOAD_FILE","GET_UPLOAD_FILE_URL","GET_SAVE_TIMETABLE_URL","GET_ALL_TT","GET_EDIT_TT","REMOVE_TT","AddTeacher","_ref","showModal","setShowModal","teacherList","useEffect","fetchApiData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_context","prev","next","fetch","sent","json","setApiData","t0","stop","apply","arguments","_useState","useState","_useState2","_slicedToArray","setFaculties","_useState3","_useState4","apiData","_useState5","_useState6","checkedItems","setCheckedItems","_useState7","_useState8","showAlert","setShowAlert","_useState9","_useState10","timeOfAlert","setTimeOfAlert","_apiData$Object","Object","responseObject","_responseObject$Facul","FacultyList","_responseObject$UserL","UserList","facultyNameMap","forEach","user","UserID","UserName","handleCheckboxChange","_event$target","target","name","checked","_objectSpread","_defineProperty","updatedFacultyList","map","faculty","closeModal","_jsx","children","_jsxs","Modal","isOpen","toggle","centered","ModalHeader","ModalBody","className","style","maxHeight","overflowY","maxWidth","listStyle","facultyUser","bgColor","find","facultyName","type","onChange","ModalFooter","Button","color","onClick","newTeachersList","_loop","facultyID","selectedItem","parseInt","some","teacher","push","UncontrolledAlert","fade","setTimeout","TtApi","getTtList","res","method","abrupt","Error","message","options","getEditTt","_callee2","fromDateEdit","myHeaders","_context2","Headers","append","headers","body","JSON","stringify","FromDate","replaceAll","_x","addUpdateTt","_ref3","_callee3","ttRequestBody","_context3","_x2","removeTtById","_ref4","_callee4","timeTableID","_context4","_x3","AddBatch","batchList","setBatches","_responseObject$Batch","newBatches","batchID","UploadApi","getWattsappApi","url","cell","fileName","URLSearchParams","number","media_url","filename","instance_id","access_token","_x4","getWattsappGroupApiTeachers","group_id","_x5","_x6","_x7","getWattsappGroupApiOthers","_x8","_x9","_x10","uplaodFile","file","formData","FormData","_x11","getUploadedFile","_callee5","_context5","TimeTable2","tableWidth","setTableWidth","draggedCellKey","setDraggedCellKey","duplicateElements","setDuplicateElements","duplicateDetected","setDuplicateDetected","setTeacher","_useState11","_useState12","teacherCounter","setTeacherCounter","_useState13","_useState14","teacherAssignment","setTeacherAssignment","_useState15","_useState16","lectureList","setLectureList","_useState17","_useState18","addBatch","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","setImage","_useState25","_useState26","showAddBatchModal","setShowAddBatchModal","_useState27","_useState28","showAddTeacherModal","setShowAddTeacherModal","_useState29","_useState30","fromDate","setFromDate","_useState31","_useState32","toDate","setToDate","tableElement","document","querySelector","offsetWidth","alert","divRef","useRef","generateUID","firstPart","Math","random","secondPart","toString","slice","convertToImage","canvas","imgData","byteString","mimeString","ia","i","blob","imageName","_data$Object","data","fileDetail","html2canvas","current","toDataURL","atob","split","Uint8Array","length","charCodeAt","Blob","File","reverse","obj","_obj$Title","Title","indexOf","LongURL","console","log","t1","dragItem","handleDrop","e","key","_objectSpread2","sourceAssignment","targetAssignment","teacher_assignment","teacherCount","rowId","teacherInCurrentRow","cellKey","startsWith","duplicates","reduce","acc","item","newDuplicateKeys","values","filter","keys","flat","includes","checkForDuplicateInRow","batchId","lectureId","teacherName","batchVo","it","lectureVo","teacherVo","lecture","Subject","IsActive","CreatedByUserID","CreatedOnDate","lecture_list","_toConsumableArray","allowDrop","ev","t","classList","contains","parentNode","innerText","trim","preventDefault","saveTable","saveTt","_Fragment","ref","Form","FormGroup","Input","id","value","onChangeFromDate","onChangeToDate","each","b","_teacherAssignment$ke","_teacherAssignment$ke2","_teacherAssignment$ke3","_teacherAssignment$ke4","draggable","onDragOver","onDrop","onDragStart","handleTableCellDragStart","concat","backgroundColor","removeTeacher","RxCross2","index","teacherInfo"],"mappings":"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","file":"static/js/7.45e9632b.chunk.js","sourcesContent":["import {v4 as uuidv4} from \"uuid\"\r\nexport const teachers_list = [\r\n        {\r\n            FacultyID: 22,\r\n            Faculty: \"MYK\",\r\n            subject: \"Physics\"\r\n        },\r\n        \r\n        {\r\n            FacultyID: 3038,\r\n            Faculty: \"KPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n\r\n        // {\r\n        //     FacultyID: 2029,\r\n        //     Faculty: \"MRS\",\r\n        //     subject:\"Chemistry\"\r\n        // },\r\n\r\n        {\r\n            FacultyID: 3051,\r\n            Faculty: \"MAS\",\r\n            subject:\"Physics\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 3050,\r\n            Faculty: \"RSS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 25,\r\n            Faculty: \"NMS\",\r\n            subject:\"Biology\"\r\n        },\r\n        {\r\n            FacultyID: 3037,\r\n            Faculty: \"HDS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3032,\r\n            Faculty: \"MNM\",\r\n            subject: \"Biology\"\r\n        },\r\n        \r\n        {\r\n            FacultyID: 1023,\r\n            Faculty: \"SJ\",\r\n            subject:\"Biology\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 1025,\r\n            Faculty: \"AJ\",\r\n            subject:\"Biology\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 1026,\r\n            Faculty: \"DMPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n\r\n        \r\n       \r\n        \r\n        {\r\n            FacultyID: 1027,\r\n            Faculty: \"PSJ\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 3033,\r\n            Faculty: \"YBS\",\r\n            subject:\"Biology\"\r\n        },\r\n        {\r\n            FacultyID: 3030,\r\n            Faculty: \"AKS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 2028,\r\n            Faculty: \"AMS\",\r\n            subject:\"Maths\"\r\n        },\r\n        {\r\n            FacultyID: 3031,\r\n            Faculty: \"NDS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 3052,\r\n            Faculty: \"HWS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 1029,\r\n            Faculty: \"JRS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3053,\r\n            Faculty: \"HTS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3054,\r\n            Faculty: \"NPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3055,\r\n            Faculty: \"SKS\",\r\n            subject:\"Maths\"\r\n        },\r\n        // newly added faculty on 12/08/23\r\n        {\r\n            FacultyID: 3056,\r\n            Faculty: \"AMK\",\r\n            subject: \"Biology\"\r\n        },\r\n        {\r\n            FacultyID: 3057,\r\n            Faculty: \"PKS\",\r\n            subject: \"Chemistry\"\r\n        }\r\n        \r\n\r\n    ]; \r\n    \r\n\r\nexport const batch= [\r\n    {\r\n        BatchID: 1,\r\n        Batch: \"A1\",\r\n        CourseID: 3\r\n    },\r\n    {\r\n        BatchID: 2,\r\n        Batch: \"B1\",\r\n        CourseID: 2\r\n    },\r\n    {\r\n        BatchID: 3,\r\n        Batch: \"C1\",\r\n        CourseID: 1\r\n    },\r\n    {\r\n        BatchID: 6,\r\n        Batch: \"A2\",\r\n        CourseID: 3\r\n    },\r\n    \r\n    {\r\n        BatchID: 7,\r\n        Batch: \"A4\",\r\n        CourseID: 3\r\n    },\r\n    {\r\n        BatchID: 10,\r\n        Batch: \"A3\",\r\n        CourseID: 3\r\n    },\r\n    \r\n    {\r\n        BatchID: 15,\r\n        Batch: \"C2\",\r\n        CourseID: 1\r\n    },\r\n    \r\n    \r\n    //MORE BATCHES ADDED WITH A FAKE BATCHID AND FAKE COURSEID NEED TO CHANGE LATER\r\n\r\n    {\r\n        BatchID: 20,\r\n        Batch: \"JO1\",\r\n        CourseID: 13\r\n    },\r\n    {\r\n        BatchID: 22,\r\n        Batch: \"JXII-1\",\r\n        CourseID: 12\r\n    },\r\n    {\r\n        BatchID: 3042,\r\n        Batch: \"JXI-1\",\r\n        CourseID: 11\r\n    },\r\n    {\r\n        BatchID: 3049,\r\n        Batch: \"B2\",\r\n        CourseID: 2\r\n    },\r\n    {\r\n        BatchID: 3061,\r\n        Batch: \"JXI-2\",\r\n        CourseID: 11\r\n    },\r\n    {\r\n        BatchID: 3078,\r\n        Batch: \"JEE adv\",\r\n        CourseID: 13\r\n    },\r\n    \r\n    {\r\n        BatchID: 3079,\r\n        Batch: \"JEE XL\",\r\n        CourseID: 1025\r\n    }\r\n    \r\n]\r\n\r\n\r\nexport const time= [\r\n    {\r\n        LectureID: 1,\r\n        Lecture: \"L1\",\r\n        Time_From: \"08:30 AM\",\r\n        Time_To: \"09:45 AM\"\r\n    },\r\n    {\r\n        LectureID: 2,\r\n        Lecture: \"L2\",\r\n        Time_From: \"09:50 AM\",\r\n        Time_To: \"11:05 AM\"\r\n    },\r\n    {\r\n        LectureID: 3,\r\n        Lecture: \"L3\",\r\n        Time_From: \"11:20 AM\",\r\n        Time_To: \"12:35 PM\"\r\n    },\r\n    {\r\n        LectureID: 4,\r\n        Lecture: \"L4\",\r\n        Time_From: \"12:40 PM\",\r\n        Time_To: \"01:55 PM\"\r\n    },\r\n    {\r\n        LectureID: 5,\r\n        Lecture: \"L5\",\r\n        Time_From: \"02:00 PM\",\r\n        Time_To: \"03:15 PM\"\r\n    },\r\n    {\r\n        LectureID: 6,\r\n        Lecture: \"L6\",\r\n        Time_From: \"03:20 PM\",\r\n        Time_To: \"04:35 PM\"\r\n    },\r\n    {\r\n        LectureID: 7,\r\n        Lecture: \"L7\",\r\n        Time_From: \"04:50 PM\",\r\n        Time_To: \"06:05 PM\"\r\n    },\r\n    {\r\n        LectureID: 8,\r\n        Lecture: \"L8\",\r\n        Time_From: \"06:15 PM\",\r\n        Time_To: \"07:30 PM\"\r\n    }\r\n]\r\n","export default class GlobalEmitterService {\r\n    static emit = (status) => {\r\n        const event = new CustomEvent('spinner-load', { detail: status });\r\n        window.dispatchEvent(event);\r\n    }\r\n\r\n    // static loggedInEmitter = (loggedIn) => {\r\n    //     const event = new CustomEvent('auth-changed', { detail: loggedIn });\r\n    //     window.dispatchEvent(event);\r\n    // }\r\n}","const ENV_URL = 'https://api.aayamcareerinstitute.co.in/api'; // producation fn\r\nconst DEV_URL = 'http://localhost:5001'; // producation fn\r\nconst BASE_URL= ENV_URL\r\n\r\n\r\n\r\nexport const URL = {\r\n    UPLOAD_FILE: BASE_URL + '/UploadFilesAttachment',\r\n    GET_UPLOAD_FILE_URL: BASE_URL + '/GetFiles', \r\n    GET_SAVE_TIMETABLE_URL: BASE_URL+ '/AddUpdateTimeTable',\r\n    GET_ALL_TT: BASE_URL + '/GetTimeTable', \r\n\r\n    GET_EDIT_TT: BASE_URL + '/GetTimeTableByDate',\r\n    REMOVE_TT: BASE_URL + '/DeleteTimeTable',\r\n\r\n\r\n\r\n\r\n};  \r\n","import React, { useState, useEffect } from 'react';\r\nimport { batch } from '../List/List';\r\nimport { teachers_list } from '../List/List';\r\n// import { teachers_list } from '../../../const/teacherList';\r\n// import { batch } from '../../../const/batchList';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledAlert } from 'reactstrap';\r\nimport \"./TeacherForm.css\";\r\n\r\nconst AddTeacher = ({ showModal, setShowModal, teacherList }) => {\r\n\r\n  /************************************Use Effect****************************************** */\r\n  useEffect(() => {\r\n    if (showModal) {\r\n      const fetchApiData = async () => {\r\n        try {\r\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\r\n          const result = await response.json();\r\n          setApiData(result);\r\n        } catch (error) {\r\n        }\r\n      };\r\n\r\n      fetchApiData();\r\n    }\r\n  }, [showModal]);\r\n\r\n  /***********************Use State***************************************************** */\r\n  const [faculties, setFaculties] = useState(teacherList);\r\n  // const [batches, setBatches] = useState(JSON.parse(localStorage.getItem('batches')) || batch);\r\n  const [apiData, setApiData] = useState({});\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n  const [showAlert, setShowAlert] = useState(\"\");\r\n  const [timeOfAlert, setTimeOfAlert] = useState(false);\r\n\r\n  /*************************other consts*************************************************** */\r\n  const { Object: responseObject = {} } = apiData;\r\n  const { Batch = [], FacultyList = [], UserList = [] } = responseObject;\r\n  const facultyNameMap = {};\r\n\r\n  UserList.forEach((user) => {\r\n    facultyNameMap[user.UserID] = user.UserName;\r\n  });\r\n  /****************************************methods******************************************* */\r\n  const handleCheckboxChange = (event) => {\r\n    const { name, checked } = event.target;\r\n    setCheckedItems({\r\n      ...checkedItems,\r\n      [name]: checked,\r\n    });\r\n  };\r\n\r\n  const updatedFacultyList = FacultyList.map((faculty) => ({\r\n    ...faculty,\r\n    Faculty: facultyNameMap[faculty.FacultyID] || faculty.Faculty,\r\n  }));\r\n\r\n  const addToFaculty = () => {\r\n    const newTeachersList = teacherList;\r\n\r\n    for (const facultyID in checkedItems) {\r\n      if (checkedItems[facultyID]) {\r\n        const selectedItem = updatedFacultyList.find(\r\n          (faculty) => faculty.FacultyID === parseInt(facultyID)\r\n        );\r\n\r\n        if (selectedItem) {\r\n          const facultyUser = UserList.find(\r\n            (user) => user.UserID === selectedItem.FacultyID\r\n          );\r\n          const facultyName = facultyUser ? facultyUser.UserName : selectedItem.Faculty;\r\n\r\n          const isTeacherAlreadyAdded = newTeachersList.some(\r\n            (teacher) => teacher.FacultyID === selectedItem.FacultyID\r\n          );\r\n\r\n          if (!isTeacherAlreadyAdded) {\r\n            newTeachersList.push({\r\n              FacultyID: selectedItem.FacultyID,\r\n              Faculty: facultyName,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setFaculties(newTeachersList);\r\n    if (!timeOfAlert) {\r\n      setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\r\n        Teachers added successfully\r\n      </UncontrolledAlert>);\r\n      setTimeout(() => {\r\n        setTimeOfAlert(false);\r\n        setShowAlert(\"\");\r\n      }, 3000);\r\n    };\r\n    closeModal();\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  /**********************************************Template to return******************************** */\r\n  return (\r\n    <div>\r\n      <Modal isOpen={showModal} toggle={closeModal} centered={true}>\r\n        <ModalHeader toggle={closeModal}>Select Teachers from the list</ModalHeader>\r\n        <ModalBody>\r\n          {showAlert}\r\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\r\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\r\n              {updatedFacultyList.map((faculty) => {\r\n                const { FacultyID, bgColor, className } = faculty;\r\n                const facultyUser = UserList.find((user) => user.UserID === FacultyID);\r\n                const facultyName = facultyUser ? facultyUser.UserName : faculty.Faculty;\r\n                return (\r\n                  <li key={faculty.FacultyID}>\r\n                    <div className=\"add-faculty-style\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        name={faculty.FacultyID}\r\n                        checked={checkedItems[faculty.FacultyID] || false}\r\n                        onChange={handleCheckboxChange}\r\n                        className=\"addfaculty-checkbox-style\"\r\n                      />\r\n                      {facultyName}\r\n                    </div>\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={addToFaculty}>Add</Button>{' '}\r\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default AddTeacher;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import GlobalEmitterService from '../service/GlobalEmitterService';\r\nimport { URL } from '../const/url';\r\n\r\nexport default class TtApi {\r\n    getTtList = async () => {\r\n        try {\r\n            GlobalEmitterService.emit(true);           // GlobalEmitterService.emit is made true for adding spinner untill api is completed\r\n            const res = await fetch(URL.GET_ALL_TT, {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getEditTt = async (fromDateEdit) => {\r\n        try {\r\n            // const formData = new FormData();\r\n            // formData.append('file', file, file.name);\r\n            GlobalEmitterService.emit(true);\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.GET_EDIT_TT, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: JSON.stringify({\r\n                    FromDate: fromDateEdit.replaceAll(\"-\", \"/\"),\r\n                })\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n\r\n    addUpdateTt = async (ttRequestBody) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.GET_SAVE_TIMETABLE_URL, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: JSON.stringify(ttRequestBody)\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    removeTtById = async (timeTableID) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            // const formData = new FormData();\r\n            // formData.append('file', file, file.name);\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.REMOVE_TT, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: timeTableID\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n}","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { batch } from '../List/List';\r\n// import { batch } from '../../../const/batchList';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledAlert } from 'reactstrap';\r\nimport \"./AddBatch.css\"\r\n\r\nconst AddBatch = ({ showModal, setShowModal, batchList }) => {\r\n  /******************************************Use Effect********************************************** */\r\n  useEffect(() => {\r\n    if (showModal) {\r\n      const fetchApiData = async () => {\r\n        try {\r\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\r\n          const result = await response.json();\r\n          setApiData(result);\r\n        } catch (error) {\r\n        }\r\n      };\r\n      fetchApiData();\r\n    }\r\n  }, [showModal]);\r\n  /********************************************Use State****************************************** */\r\n  const [batches, setBatches] = useState(batchList);\r\n  const [apiData, setApiData] = useState({});\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n  const [showAlert, setShowAlert] = useState(\"\");\r\n  const [timeOfAlert, setTimeOfAlert] = useState(false);\r\n\r\n\r\n  /*****************************Other consts******************************************************** */\r\n  const { Object: responseObject = {} } = apiData;\r\n  const { Batch = [] } = responseObject;\r\n\r\n  /***************************************Methods*************************************************** */\r\n  const handleCheckboxChange = (event) => {\r\n    const { name, checked } = event.target;\r\n    setCheckedItems({\r\n      ...checkedItems,\r\n      [name]: checked,\r\n    });\r\n  };\r\n\r\n  const addToBatch = () => {\r\n    const newBatches = batchList;\r\n    for (const batchID in checkedItems) {\r\n      if (checkedItems[batchID]) {\r\n        const selectedItem = Batch.find((batch) => batch.BatchID === parseInt(batchID));\r\n        if (selectedItem && !newBatches.find((batch) => batch.BatchID === selectedItem.BatchID)) {\r\n          newBatches.push({\r\n            BatchID: selectedItem.BatchID,\r\n            Batch: selectedItem.Batch,\r\n            CourseID: selectedItem.CourseID,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    setBatches(newBatches);\r\n    if (!timeOfAlert) {\r\n      setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\r\n        Batches added successfully\r\n      </UncontrolledAlert>);\r\n\r\n      setTimeout(() => {\r\n        setTimeOfAlert(false);\r\n        setShowAlert(\"\");\r\n      }, 3000);\r\n\r\n    };\r\n    closeModal();\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  /***************************Template to return******************************************************* */\r\n  return (\r\n    <div>\r\n      <Modal centered={true} isOpen={showModal} toggle={closeModal}>\r\n        <ModalHeader toggle={closeModal}>Select Batches from the list</ModalHeader>\r\n        <ModalBody>\r\n          {showAlert}\r\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\r\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\r\n              {Batch.map((batch) => (\r\n                <li key={batch.BatchID}>\r\n                  <div className=\"add-batch-style\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name={batch.BatchID}\r\n                      checked={checkedItems[batch.BatchID] || false}\r\n                      onChange={handleCheckboxChange}\r\n                      className=\"addbatch-checkbox-style\"\r\n                    />\r\n                    {batch.Batch}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={addToBatch}>Add</Button>{' '}\r\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default AddBatch;\r\n\r\n","import GlobalEmitterService from '../service/GlobalEmitterService';\r\nimport { URL } from '../const/url';\r\n\r\nexport default class UploadApi {\r\n    // getUserWalletBalance = async (userId) => {\r\n    //     try {\r\n    //         GlobalEmitterService.emit(true);\r\n    //         const token = `Bearer ${AuthService.getToken()}`;\r\n    //         const res = await fetch(URL.USER_WALLET_BALANCE + '?' + new URLSearchParams({\r\n    //             userId\r\n    //         }), {\r\n    //             method: 'GET',\r\n    //             headers: { 'Content-Type': 'application/json', 'Authorization': token },\r\n    //         });\r\n    //         const result = await res.json();\r\n    //         GlobalEmitterService.emit(false);\r\n    //         return result;\r\n    //     } catch (e) {\r\n    //         GlobalEmitterService.emit(false);\r\n    //         throw new Error(e.message, e.options);\r\n    //     }\r\n    // }\r\n\r\n\r\n    getWattsappApi = async (url, message, cell, fileName) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            //  https://ziper.io/api/send.php?number=917898118503&type=media&message=test%20message&media_url=https://api.aayamcareerinstitute.co.in//Uploads/Files/File_3431223213168.pdf&filename=file_test.jpg&instance_id=647B3C9AA8D0A&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/send.php\" + '?' + new URLSearchParams({\r\n                number: cell,\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"647B3C9AA8D0A\",\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n\r\n    getWattsappGroupApiTeachers = async (url, message, fileName) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\r\n                // group_id: \"919977116612-1595572006@g.us\",\r\n                group_id: \"919977116612-1595572006@g.us\",\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"647B3C9AA8D0A\",\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getWattsappGroupApiOthers = async (url, message, fileName) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\r\n                group_id: \"919826362001-1628170376@g.us\",\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"647B3C9AA8D0A\", \r\n\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    uplaodFile = async (file) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            const formData = new FormData();\r\n            formData.append('file', file, file.name);\r\n            const res = await fetch(URL.UPLOAD_FILE, {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getUploadedFile = async () => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            const res = await fetch(URL.GET_UPLOAD_FILE_URL, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({})\r\n\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport { batch, teachers_list, time } from '../List/List';\r\n// import { teachers_list } from '../../../const/teacherList';\r\n// import { batch } from '../../../const/batchList';\r\n// import { time } from '../../../const/time';\r\nimport \"./TimeTable2.scss\";\r\n// import { RiDeleteBin2Line } from \"react-icons/ri\";\r\n// import htmlToCanvas from 'html-to-canvas';\r\nimport html2canvas from 'html2canvas';\r\nimport { Card, Row, Col, CardTitle, CardBody, Button, Form, FormGroup, Label, Input, FormText, } from \"reactstrap\";\r\nimport AddBatch from '../AddBatch/AddBatch';\r\nimport UploadApi from '../../../api/upload.api';\r\nimport AddTeacher from '../TeacherForm/TeacherForm';\r\nimport TtApi from '../../../api/tt.api.js';\r\n\r\nconst TimeTable2 = () => {\r\n  /**************************************** Use Effect Section ************************************/\r\n  /**************************************** State Section *****************************************/\r\n  const [tableWidth, setTableWidth] = useState(0);\r\n  const [draggedCellKey, setDraggedCellKey] = useState(null);\r\n  const [duplicateElements, setDuplicateElements] = useState({});\r\n  const [duplicateDetected, setDuplicateDetected] = useState(false);\r\n  const [teacher, setTeacher] = useState({});\r\n  const [teacherCounter, setTeacherCounter] = useState({}); // key: teacherId, value: counter\r\n  const [teacherAssignment, setTeacherAssignment] = useState({});\r\n  const [lectureList, setLectureList] = useState([]);\r\n  const [addBatch, setAddBatch] = useState(null);\r\n  // const [numberList, setNumberList] = useState([918989529107, 917898118503, 918871688429, 918349215747,919826362001,918349215747,917314058393,917869597239,919977116612,918085390900,918302184021,918358810742,919893640561,919713519598,919713030834,919827274005,919691938832,917043127836,919977711607,917298519996,919713191848,918871841238,917007794323,919669889020,918770153381]);\r\n  const [numberList, setNumberList] = useState([917898118503]);\r\n  const [batchList, setBatchList] = useState(batch);\r\n  const [image, setImage] = useState(null);   //  for div to image conversion\r\n  const [showAddBatchModal, setShowAddBatchModal] = useState(false); //for add Batch popup\r\n  const [showAddTeacherModal, setShowAddTeacherModal] = useState(false);\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n\r\n  /**************************************** Use Effect Section ************************************/\r\n  useEffect(() => {\r\n    const tableElement = document.querySelector('.table-style');\r\n    if (tableElement) {\r\n      const tableWidth = tableElement.offsetWidth;\r\n      setTableWidth(tableWidth);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (duplicateDetected) {\r\n      alert('Two same teachers found in the same row');\r\n      setDuplicateDetected(false);\r\n      setTimeout(() => {\r\n        setDuplicateElements({});\r\n      }, 3000); // Blink duration\r\n    }\r\n  }, [duplicateDetected]);\r\n\r\n  useEffect(() => {\r\n    if (duplicateDetected) {\r\n      // alert('Two same teachers found in the same row');   \r\n      setDuplicateDetected(false);\r\n    }\r\n  }, [duplicateDetected]);\r\n  /***************************************other const section*********************************** */\r\n  const divRef = useRef(null);\r\n  const color = [\"#D4E6F1\", \"#E8DAEF\", \"#008080\", \"#808000\", \"#C39BD3\", \"#76D7C4\", \"#3498DB\", \"#358b79\", \"#847f86\", \"rgb(251, 235, 9)\", \"#CA6F1E\", \"#CCCCFF\", \"#F4D03F\", \"rgb(199, 185, 84)\", \"#979A9A\", \"#F0B27A\", \"rgb(117, 98, 179)\", \"#CD5C5C\", \"#40E0D0\", \"#DAF7A6\", \"#008080\", \"#808000\", \"#FADBD8\", \"green\", \"yellow\", \"white\", \"red\", \"pink\"]\r\n  /**************************************** Component Method Section *********************************/\r\n\r\n  const generateUID = () => {\r\n    // I generate the UID from two parts here \r\n    // to ensure the random number provide enough bits.\r\n    var firstPart = (Math.random() * 46656) | 0;\r\n    var secondPart = (Math.random() * 46656) | 0;\r\n    firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\r\n    secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\r\n    return firstPart + secondPart;\r\n  }\r\n  const convertToImage = async () => {\r\n    // alert(\"Time table image sent successfully\")\r\n    const canvas = await html2canvas(divRef.current);\r\n    const imgData = canvas.toDataURL();\r\n    setImage(imgData);\r\n    /*converting page64 url got as imgData into file Object by using blob below*/\r\n    const byteString = atob(imgData.split(',')[1]);\r\n    const mimeString = imgData.split(',')[0].split(':')[1].split(';')[0];\r\n    const ia = new Uint8Array(byteString.length);\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n    }\r\n    const blob = new Blob([ia], { type: mimeString });\r\n    const imageName = generateUID();\r\n    const file = new File([blob], imageName + \".jpg\");\r\n    const fileName = imageName + \".jpg\";\r\n    const result = await new UploadApi().uplaodFile(file);\r\n    if (result === \"Success\") {\r\n      const data = await new UploadApi().getUploadedFile();\r\n      if (data.Object?.length > 0) {\r\n        const fileDetail = data.Object.reverse().find(obj => { return obj.Title?.indexOf(imageName) >= 0 });\r\n        // for (let i = 0; i < numberList.length; i++) {       THIS IS USED WHEN GETWATTSAPPAPI WILL USED SO DONT DELETE THIS LINES\r\n        try {\r\n          // const cell = numberList[i];\r\n          /*CHECK THE DETAILS OF THIS GETWATTSAPPAPI IN UPLOAD.API.JS FILE IN API FOLDER*/\r\n          // await new UploadApi().getWattsappApi(fileDetail.LongURL, \"time table\", cell, fileName);\r\n          await new UploadApi().getWattsappGroupApiOthers(fileDetail.LongURL, \"time table\", fileName);\r\n          // await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\r\n        } catch (e) {\r\n          // continue;\r\n          console.log(\"error\")\r\n        }\r\n        try {\r\n          await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\r\n        } catch (e) {\r\n          console.log(\"error\")\r\n        }\r\n      }\r\n    }\r\n    alert(\"Time table image sent successfully\")\r\n  }\r\n  const dragItem = teacher;\r\n  const dragStart = (e, teacherInfo) => {\r\n    dragItem.current = teacherInfo;\r\n    console.log(teacherInfo)\r\n  };\r\n  const handleTableCellDragStart = (e, key) => {\r\n    setDraggedCellKey(key);\r\n  };\r\n  const checkForDuplicateInRow = (key) => {\r\n    const rowId = key.split('_')[0];\r\n    const teacherInCurrentRow = [];\r\n    for (const cellKey in teacherAssignment) {\r\n      if (cellKey.startsWith(rowId)) {\r\n        teacherInCurrentRow.push({\r\n          key: cellKey,\r\n          teacher: teacherAssignment[cellKey].teacher,\r\n        });\r\n      }\r\n    }\r\n    const duplicates = teacherInCurrentRow.reduce((acc, item) => {\r\n      if (acc[item.teacher]) {\r\n        acc[item.teacher].push(item.key);\r\n      } else {\r\n        acc[item.teacher] = [item.key];\r\n      }\r\n      return acc;\r\n    }, {});\r\n    const newDuplicateKeys = Object.values(duplicates)\r\n      .filter((keys) => keys.length > 1)\r\n      .flat();\r\n    const oldDuplicateKeys = Object.keys(duplicateElements);\r\n    const isNewDuplicate = !oldDuplicateKeys.includes(key) && newDuplicateKeys.includes(key);\r\n    if (isNewDuplicate) {\r\n      setDuplicateDetected(true);\r\n      setDuplicateElements(\r\n        newDuplicateKeys.reduce((acc, key) => {\r\n          acc[key] = true;\r\n          return acc;\r\n        }, {})\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e, key) => {\r\n    console.log(key)\r\n    console.log(\"jjjjj\", teacherAssignment)\r\n    console.log(\"drag cell key\", draggedCellKey);\r\n    if (draggedCellKey) {\r\n      // Move table item\r\n      const sourceAssignment = teacherAssignment[draggedCellKey];\r\n      const targetAssignment = teacherAssignment[key];\r\n      setTeacherAssignment({\r\n        ...teacherAssignment,\r\n        [draggedCellKey]: targetAssignment,\r\n        [key]: sourceAssignment,\r\n      });\r\n      setDraggedCellKey(null);\r\n    } else {\r\n      // Assign teacher to the cell\r\n      const teacher_assignment = teacherAssignment;\r\n      teacherAssignment[key] = dragItem.current;\r\n      setTeacherAssignment({ ...teacher_assignment });\r\n      setTeacher({});\r\n      const teacherCount = teacherCounter;\r\n      if (!teacherCount[dragItem.current.teacher]) {\r\n        teacherCount[dragItem.current.teacher] = 1;\r\n      } else {\r\n        teacherCount[dragItem.current.teacher] += 1;\r\n      }\r\n      setTeacherCounter({ ...teacherCount });\r\n      checkForDuplicateInRow(key);\r\n\r\n      const teacher = teacherAssignment[key];\r\n      const batchId = key.split(\"_\")[1];\r\n      const lectureId = key.split(\"_\")[0];\r\n      const teacherName = teacher.teacher;\r\n\r\n      const batchVo = batch.find(it => it.BatchID == batchId);\r\n      console.log('xxxx xx xx teacher ', teacher);\r\n      console.log('xxxx xx xx batchId ', batchId);\r\n      console.log('xxxx xx xx lectureId', lectureId);\r\n      console.log('xxxx xx xx teacherAssignment', teacherAssignment);\r\n      // making lectureVO \r\n      const lectureVo = time.find(it => it.LectureID == lectureId);\r\n      const teacherVo = teachers_list.find(it => it.Faculty == teacherName)\r\n      console.log(\"iiii\", teacherVo)\r\n\r\n      const lecture = {};\r\n      lecture.ID = \"0\"\r\n      lecture.TimeTableID = \"0\";\r\n      lecture.LectureName = \"\";\r\n      lecture.Batch = batchVo;\r\n      lecture.Lecture = lectureVo;\r\n      lecture.Subject = teacherVo.subject;\r\n      lecture.FacultyID = teacherVo.FacultyID;\r\n      lecture.IsActive = true;\r\n      lecture.CreatedByUserID = \"1\";\r\n      lecture.CreatedOnDate = \"02/05/2023\";\r\n      console.log(\"fff\", lecture);\r\n      console.log(\"zzzz\", teacher)\r\n\r\n      const lecture_list = lectureList;\r\n      lecture_list.push(lecture);\r\n      setLectureList([...lecture_list])\r\n      /* THIS LECTURE LIST WILL BE USED BELOW IN THE CONST SAVETABLE() METHOD FROM WHERE WE SEND IT TO DATABASE THROUGH API WRITTEN IN SAVETABLE() METHOD*/\r\n    }\r\n  }\r\n\r\n  const allowDrop = (ev) => {\r\n    let t = ev.target;\r\n    while (t && (!t.classList || !t.classList.contains(\"each-block\"))) {\r\n      t = t.parentNode;\r\n    }\r\n    if (t && t.innerText.trim() !== \"\") {\r\n      // Prevent drop event if cell is not empty\r\n      return false;\r\n    }\r\n    ev.preventDefault();\r\n  };\r\n\r\n  const removeTeacher = (key) => {\r\n    const teacher_assignment = teacherAssignment;\r\n    setTeacherAssignment({ ...teacher_assignment });\r\n    setTeacher({});\r\n    const teacherCount = teacherCounter;\r\n    if ([teacherAssignment[key].teacher]) {\r\n      teacherCount[teacherAssignment[key].teacher] -= 1;\r\n    }\r\n    delete teacherAssignment[key].teacher;\r\n    delete teacherAssignment[key].color;\r\n    setTeacherCounter(teacherCount);\r\n  }\r\n\r\n  const onChangeFromDate = (e) => {\r\n    setFromDate(e.target.value);\r\n  }\r\n\r\n  const onChangeToDate = (e) => {\r\n    setToDate(e.target.value);\r\n  }\r\n\r\n  const onAddBatch = () => {\r\n    // setAddBatch(<AddBatch batchList={batchList} />)\r\n    setShowAddBatchModal(true);\r\n  }\r\n  \r\n  const onAddTeacher = () => {\r\n    setShowAddTeacherModal(true);\r\n  }\r\n\r\n  const saveTable = async() => {\r\n    const result = await new TtApi().saveTt(fromDate,toDate,lectureList);\r\n    alert(\"time table saved successfully\");\r\n  };\r\n  \r\n  /**************************************** Template Section *****************************************/\r\n  return (\r\n    <>\r\n      <div className=\"bg-container\">\r\n        <h1 className='heading-style'>CLASS SCHEDULE</h1>\r\n        <div className=\"button-group added-style\">\r\n          <Button className=\"btn \" color=\"info\" onClick={onAddBatch}>\r\n            Add Batches\r\n          </Button>\r\n          {showAddBatchModal && <AddBatch showModal={showAddBatchModal} setShowModal={setShowAddBatchModal} />}\r\n          {addBatch}\r\n          <Button className=\"btn\" color=\"info\" onClick={onAddTeacher}>\r\n            Add Teachers\r\n          </Button>\r\n          {showAddTeacherModal && <AddTeacher showModal={showAddTeacherModal} setShowModal={setShowAddTeacherModal} />}\r\n          <Button className=\"btn\" color=\"info\" onClick={saveTable}>\r\n            Save\r\n          </Button>\r\n          <Button className=\"btn\" color=\"info\" onClick={convertToImage}>\r\n            Post\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <div ref={divRef}>\r\n            <br />\r\n            <Form >\r\n              <div className='time-table-date-style'>\r\n                <FormGroup className=\"label-date-allignment\">\r\n                  <p>From:</p>\r\n                  <Input\r\n                    id=\"fromDate\"\r\n                    name=\"date\"\r\n                    type=\"date\"\r\n                    onChange={(e) => { onChangeFromDate(e) }}\r\n                    className='input-size'\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"label-date-allignment\">\r\n                  <p>To:</p>\r\n                  <Input\r\n                    id=\"toDate\"\r\n                    name=\"date\"\r\n                    type=\"date\"\r\n                    onChange={(e) => { onChangeToDate(e) }}\r\n                    className='input-size'\r\n\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </Form>\r\n            <table className='table-style'>\r\n              <tbody>\r\n                <div className=\"for-time\">\r\n                  <tr>\r\n                    <td className='F-style time-style'>Time</td>\r\n                    {batch.map((each) => {\r\n                      return (\r\n                        <td className='F-style batch-style' key={batch.BatchID}>{each.Batch}</td>\r\n                      )\r\n                    })}\r\n                  </tr>\r\n                </div>\r\n                <tr >\r\n                  {time.map((t) => {\r\n                    return (\r\n                      <div >\r\n                        <td className='F-style time-style'>{t.Time_From}-{t.Time_To}</td>\r\n                        {batchList.map((b) => {\r\n                          const key = t.LectureID + '_' + b.BatchID\r\n                          return (\r\n                            <td\r\n                              draggable={true}\r\n                              onDragOver={allowDrop}\r\n                              onDrop={(e) => handleDrop(e, key)}\r\n                              onDragStart={(e) => teacherAssignment[key] && handleTableCellDragStart(e, key)}\r\n                              key={key}\r\n                              id={key}\r\n                              className={`each-block ${duplicateElements[key] ? \"blink\" : \"\"}`}\r\n                              style={{ backgroundColor: teacherAssignment[key]?.color }}\r\n                            // className={`each-block ${duplicateElements[key]}`}\r\n                            >\r\n                              {teacherAssignment[key] && (\r\n                                <div className={`teacname-cross-style ${teacherAssignment[key]?.className} `}>\r\n                                  <div className=\"teacher-name\" >\r\n                                    {teacherAssignment[key]?.teacher}\r\n                                  </div>\r\n                                  <div className=\"cross-btn-container\">\r\n                                    {teacherAssignment[key]?.teacher ? (\r\n                                      <button\r\n                                        className=\"cross-style\"\r\n                                        onClick={() => removeTeacher(key)}\r\n                                      >\r\n                                        {/* <RiDeleteBin2Line /> */}\r\n                                        <RxCross2 />\r\n                                      </button>\r\n                                    ) : (\r\n                                      ''\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </td>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <br />\r\n            {/* <button onClick={onAddBatch}>+</button>\r\n            {addBatch} */}\r\n          </div>\r\n\r\n          {/* {image && <img src={image} alt=\"table\" style={{ maxWidth: tableWidth }} />} */}\r\n          {/* <button onClick={saveTable}>Save</button> */}\r\n        </div>\r\n        <div className='teacher-container' style={{ maxWidth: tableWidth }}>\r\n          {teachers_list.map((teacher, index) => {\r\n            const { FacultyID, Faculty } = teacher;\r\n            return (\r\n              <div\r\n                style={{ maxWidth: tableWidth, backgroundColor: color[index % color.length] }}\r\n                key={FacultyID}\r\n                className=\"teacher-item\"\r\n                draggable={true}\r\n                onDragStart={(e) => dragStart(e, { teacher: Faculty, color: color[index % color.length] })}\r\n              >\r\n                <h3>{Faculty}</h3>\r\n                {teacherCounter[Faculty] > 0 && (\r\n                  <span className={`counter-item `} draggable={false}>\r\n                    {teacherCounter[Faculty]}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default TimeTable2;"],"sourceRoot":""}