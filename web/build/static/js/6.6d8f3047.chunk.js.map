{"version":3,"sources":["pages/TTPages/List/List.js","service/GlobalEmitterService.js","const/url.js","pages/TTPages/TeacherForm/TeacherForm.js","api/tt.api.js","pages/TTPages/AddBatch/AddBatch.js","api/upload.api.js","pages/TTPages/TimeTable2/TimeTable2.js"],"names":["teachers_list","FacultyID","Faculty","subject","batch","BatchID","Batch","CourseID","time","LectureID","Lecture","Time_From","Time_To","GlobalEmitterService","emit","status","event","CustomEvent","detail","window","dispatchEvent","BASE_URL","URL","UPLOAD_FILE","GET_UPLOAD_FILE_URL","GET_SAVE_TIMETABLE_URL","GET_ALL_TT","GET_EDIT_TT","REMOVE_TT","AddTeacher","_ref","showModal","setShowModal","teacherList","useEffect","async","response","fetch","result","json","setApiData","error","fetchApiData","faculties","setFaculties","useState","apiData","checkedItems","setCheckedItems","showAlert","setShowAlert","timeOfAlert","setTimeOfAlert","Object","responseObject","FacultyList","UserList","facultyNameMap","forEach","user","UserID","UserName","handleCheckboxChange","name","checked","target","updatedFacultyList","map","faculty","closeModal","_jsx","children","_jsxs","Modal","isOpen","toggle","centered","ModalHeader","ModalBody","className","style","maxHeight","overflowY","maxWidth","listStyle","bgColor","facultyUser","find","facultyName","type","onChange","ModalFooter","Button","color","onClick","addToFaculty","newTeachersList","facultyID","selectedItem","parseInt","some","teacher","push","UncontrolledAlert","fade","setTimeout","TtApi","constructor","getTtList","res","method","e","Error","message","options","getEditTt","myHeaders","Headers","append","headers","body","JSON","stringify","FromDate","fromDateEdit","replaceAll","addUpdateTt","ttRequestBody","removeTtById","timeTableID","AddBatch","batchList","batches","setBatches","addToBatch","newBatches","batchID","UploadApi","getWattsappApi","url","cell","fileName","URLSearchParams","number","media_url","filename","instance_id","access_token","getWattsappGroupApiTeachers","group_id","getWattsappGroupApiOthers","uplaodFile","formData","FormData","file","getUploadedFile","TimeTable2","tableWidth","setTableWidth","draggedCellKey","setDraggedCellKey","duplicateElements","setDuplicateElements","duplicateDetected","setDuplicateDetected","setTeacher","teacherCounter","setTeacherCounter","teacherAssignment","setTeacherAssignment","lectureList","setLectureList","addBatch","setAddBatch","numberList","setNumberList","setBatchList","image","setImage","showAddBatchModal","setShowAddBatchModal","showAddTeacherModal","setShowAddTeacherModal","fromDate","setFromDate","toDate","setToDate","tableElement","document","querySelector","offsetWidth","alert","divRef","useRef","dragItem","handleDrop","key","console","log","sourceAssignment","targetAssignment","teacher_assignment","current","teacherCount","rowId","split","teacherInCurrentRow","cellKey","startsWith","duplicates","reduce","acc","item","newDuplicateKeys","values","filter","keys","length","flat","includes","checkForDuplicateInRow","batchId","lectureId","teacherName","batchVo","it","lectureVo","teacherVo","lecture","Subject","IsActive","CreatedByUserID","CreatedOnDate","lecture_list","allowDrop","ev","t","classList","contains","parentNode","innerText","trim","preventDefault","_Fragment","onAddBatch","onAddTeacher","saveTt","imgData","html2canvas","toDataURL","byteString","atob","mimeString","ia","Uint8Array","i","charCodeAt","blob","Blob","imageName","generateUID","firstPart","Math","random","secondPart","toString","slice","File","_data$Object","data","fileDetail","reverse","obj","_obj$Title","Title","indexOf","LongURL","ref","Form","FormGroup","Input","id","value","onChangeFromDate","onChangeToDate","each","b","_teacherAssignment$ke","_teacherAssignment$ke2","_teacherAssignment$ke3","_teacherAssignment$ke4","draggable","onDragOver","onDrop","onDragStart","handleTableCellDragStart","concat","backgroundColor","removeTeacher","RxCross2","index","dragStart","teacherInfo"],"mappings":"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","file":"static/js/6.6d8f3047.chunk.js","sourcesContent":["import {v4 as uuidv4} from \"uuid\"\r\nexport const teachers_list = [\r\n        {\r\n            FacultyID: 22,\r\n            Faculty: \"MYK\",\r\n            subject: \"Physics\"\r\n        },\r\n        \r\n        {\r\n            FacultyID: 3038,\r\n            Faculty: \"KPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n\r\n        // {\r\n        //     FacultyID: 2029,\r\n        //     Faculty: \"MRS\",\r\n        //     subject:\"Chemistry\"\r\n        // },\r\n\r\n        {\r\n            FacultyID: 3051,\r\n            Faculty: \"MAS\",\r\n            subject:\"Physics\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 3050,\r\n            Faculty: \"RSS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 25,\r\n            Faculty: \"NMS\",\r\n            subject:\"Biology\"\r\n        },\r\n        {\r\n            FacultyID: 3037,\r\n            Faculty: \"HDS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3032,\r\n            Faculty: \"MNM\",\r\n            subject: \"Biology\"\r\n        },\r\n        \r\n        {\r\n            FacultyID: 1023,\r\n            Faculty: \"SJ\",\r\n            subject:\"Biology\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 1025,\r\n            Faculty: \"AJ\",\r\n            subject:\"Biology\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 1026,\r\n            Faculty: \"DMPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n\r\n        \r\n       \r\n        \r\n        {\r\n            FacultyID: 1027,\r\n            Faculty: \"PSJ\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 3033,\r\n            Faculty: \"YBS\",\r\n            subject:\"Biology\"\r\n        },\r\n        {\r\n            FacultyID: 3030,\r\n            Faculty: \"AKS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 2028,\r\n            Faculty: \"AMS\",\r\n            subject:\"Maths\"\r\n        },\r\n        {\r\n            FacultyID: 3031,\r\n            Faculty: \"NDS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 3052,\r\n            Faculty: \"HWS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 1029,\r\n            Faculty: \"JRS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3053,\r\n            Faculty: \"HTS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3054,\r\n            Faculty: \"NPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3059,\r\n            Faculty: \"SKS\",\r\n            subject:\"Biology\"\r\n        },\r\n        // newly added faculty on 12/08/23\r\n        {\r\n            FacultyID: 3056,\r\n            Faculty: \"AMK\",\r\n            subject: \"Biology\"\r\n        },\r\n        {\r\n            FacultyID: 3058,\r\n            Faculty: \"DPS\",\r\n            subject: \"Chemistry\"\r\n        }\r\n        \r\n\r\n    ]; \r\n    \r\n\r\nexport const batch= [\r\n    {\r\n        BatchID: 1,\r\n        Batch: \"A1\",\r\n        CourseID: 3\r\n    },\r\n    {\r\n        BatchID: 2,\r\n        Batch: \"B1\",\r\n        CourseID: 2\r\n    },\r\n    {\r\n        BatchID: 3,\r\n        Batch: \"C1\",\r\n        CourseID: 1\r\n    },\r\n    {\r\n        BatchID: 6,\r\n        Batch: \"A2\",\r\n        CourseID: 3\r\n    },\r\n    \r\n    {\r\n        BatchID: 7,\r\n        Batch: \"A4\",\r\n        CourseID: 3\r\n    },\r\n    {\r\n        BatchID: 10,\r\n        Batch: \"A3\",\r\n        CourseID: 3\r\n    },\r\n    \r\n    {\r\n        BatchID: 15,\r\n        Batch: \"C2\",\r\n        CourseID: 1\r\n    },\r\n    \r\n    \r\n    //MORE BATCHES ADDED WITH A FAKE BATCHID AND FAKE COURSEID NEED TO CHANGE LATER\r\n\r\n    {\r\n        BatchID: 20,\r\n        Batch: \"JO1\",\r\n        CourseID: 13\r\n    },\r\n    {\r\n        BatchID: 22,\r\n        Batch: \"JXII-1\",\r\n        CourseID: 12\r\n    },\r\n    {\r\n        BatchID: 3042,\r\n        Batch: \"JXI-1\",\r\n        CourseID: 11\r\n    },\r\n    {\r\n        BatchID: 3049,\r\n        Batch: \"B2\",\r\n        CourseID: 2\r\n    },\r\n    {\r\n        BatchID: 3061,\r\n        Batch: \"JXI-2\",\r\n        CourseID: 11\r\n    },\r\n    {\r\n        BatchID: 3078,\r\n        Batch: \"JEE adv\",\r\n        CourseID: 13\r\n    },\r\n    \r\n    {\r\n        BatchID: 3079,\r\n        Batch: \"JEE XL\",\r\n        CourseID: 1025\r\n    }\r\n    \r\n]\r\n\r\n\r\nexport const time= [\r\n    {\r\n        LectureID: 1,\r\n        Lecture: \"L1\",\r\n        Time_From: \"08:30 AM\",\r\n        Time_To: \"09:45 AM\"\r\n    },\r\n    {\r\n        LectureID: 2,\r\n        Lecture: \"L2\",\r\n        Time_From: \"09:50 AM\",\r\n        Time_To: \"11:05 AM\"\r\n    },\r\n    {\r\n        LectureID: 3,\r\n        Lecture: \"L3\",\r\n        Time_From: \"11:20 AM\",\r\n        Time_To: \"12:35 PM\"\r\n    },\r\n    {\r\n        LectureID: 4,\r\n        Lecture: \"L4\",\r\n        Time_From: \"12:40 PM\",\r\n        Time_To: \"01:55 PM\"\r\n    },\r\n    {\r\n        LectureID: 5,\r\n        Lecture: \"L5\",\r\n        Time_From: \"02:00 PM\",\r\n        Time_To: \"03:15 PM\"\r\n    },\r\n    {\r\n        LectureID: 6,\r\n        Lecture: \"L6\",\r\n        Time_From: \"03:20 PM\",\r\n        Time_To: \"04:35 PM\"\r\n    },\r\n    {\r\n        LectureID: 7,\r\n        Lecture: \"L7\",\r\n        Time_From: \"04:50 PM\",\r\n        Time_To: \"06:05 PM\"\r\n    },\r\n    {\r\n        LectureID: 8,\r\n        Lecture: \"L8\",\r\n        Time_From: \"06:15 PM\",\r\n        Time_To: \"07:30 PM\"\r\n    }\r\n]\r\n","export default class GlobalEmitterService {\r\n    static emit = (status) => {\r\n        const event = new CustomEvent('spinner-load', { detail: status });\r\n        window.dispatchEvent(event);\r\n    }\r\n\r\n    // static loggedInEmitter = (loggedIn) => {\r\n    //     const event = new CustomEvent('auth-changed', { detail: loggedIn });\r\n    //     window.dispatchEvent(event);\r\n    // }\r\n}","const ENV_URL = 'https://api.aayamcareerinstitute.co.in/api'; // producation fn\r\nconst DEV_URL = 'http://localhost:5001'; // producation fn\r\nconst BASE_URL= ENV_URL\r\n\r\n\r\n\r\nexport const URL = {\r\n    UPLOAD_FILE: BASE_URL + '/UploadFilesAttachment',\r\n    GET_UPLOAD_FILE_URL: BASE_URL + '/GetFiles', \r\n    GET_SAVE_TIMETABLE_URL: BASE_URL+ '/AddUpdateTimeTable',\r\n    GET_ALL_TT: BASE_URL + '/GetTimeTable', \r\n\r\n    GET_EDIT_TT: BASE_URL + '/GetTimeTableByDate',\r\n    REMOVE_TT: BASE_URL + '/DeleteTimeTable',\r\n\r\n\r\n\r\n\r\n};  \r\n","import React, { useState, useEffect } from 'react';\r\nimport { batch } from '../List/List';\r\nimport { teachers_list } from '../List/List';\r\n// import { teachers_list } from '../../../const/teacherList';\r\n// import { batch } from '../../../const/batchList';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledAlert } from 'reactstrap';\r\nimport \"./TeacherForm.css\";\r\n\r\nconst AddTeacher = ({ showModal, setShowModal, teacherList }) => {\r\n\r\n  /************************************Use Effect****************************************** */\r\n  useEffect(() => {\r\n    if (showModal) {\r\n      const fetchApiData = async () => {\r\n        try {\r\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\r\n          const result = await response.json();\r\n          setApiData(result);\r\n        } catch (error) {\r\n        }\r\n      };\r\n\r\n      fetchApiData();\r\n    }\r\n  }, [showModal]);\r\n\r\n  /***********************Use State***************************************************** */\r\n  const [faculties, setFaculties] = useState(teacherList);\r\n  // const [batches, setBatches] = useState(JSON.parse(localStorage.getItem('batches')) || batch);\r\n  const [apiData, setApiData] = useState({});\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n  const [showAlert, setShowAlert] = useState(\"\");\r\n  const [timeOfAlert, setTimeOfAlert] = useState(false);\r\n\r\n  /*************************other consts*************************************************** */\r\n  const { Object: responseObject = {} } = apiData;\r\n  const { Batch = [], FacultyList = [], UserList = [] } = responseObject;\r\n  const facultyNameMap = {};\r\n\r\n  UserList.forEach((user) => {\r\n    facultyNameMap[user.UserID] = user.UserName;\r\n  });\r\n  /****************************************methods******************************************* */\r\n  const handleCheckboxChange = (event) => {\r\n    const { name, checked } = event.target;\r\n    setCheckedItems({\r\n      ...checkedItems,\r\n      [name]: checked,\r\n    });\r\n  };\r\n\r\n  const updatedFacultyList = FacultyList.map((faculty) => ({\r\n    ...faculty,\r\n    Faculty: facultyNameMap[faculty.FacultyID] || faculty.Faculty,\r\n  }));\r\n\r\n  const addToFaculty = () => {\r\n    const newTeachersList = teacherList;\r\n\r\n    for (const facultyID in checkedItems) {\r\n      if (checkedItems[facultyID]) {\r\n        const selectedItem = updatedFacultyList.find(\r\n          (faculty) => faculty.FacultyID === parseInt(facultyID)\r\n        );\r\n\r\n        if (selectedItem) {\r\n          const facultyUser = UserList.find(\r\n            (user) => user.UserID === selectedItem.FacultyID\r\n          );\r\n          const facultyName = facultyUser ? facultyUser.UserName : selectedItem.Faculty;\r\n\r\n          const isTeacherAlreadyAdded = newTeachersList.some(\r\n            (teacher) => teacher.FacultyID === selectedItem.FacultyID\r\n          );\r\n\r\n          if (!isTeacherAlreadyAdded) {\r\n            newTeachersList.push({\r\n              FacultyID: selectedItem.FacultyID,\r\n              Faculty: facultyName,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setFaculties(newTeachersList);\r\n    if (!timeOfAlert) {\r\n      setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\r\n        Teachers added successfully\r\n      </UncontrolledAlert>);\r\n      setTimeout(() => {\r\n        setTimeOfAlert(false);\r\n        setShowAlert(\"\");\r\n      }, 3000);\r\n    };\r\n    closeModal();\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  /**********************************************Template to return******************************** */\r\n  return (\r\n    <div>\r\n      <Modal isOpen={showModal} toggle={closeModal} centered={true}>\r\n        <ModalHeader toggle={closeModal}>Select Teachers from the list</ModalHeader>\r\n        <ModalBody>\r\n          {showAlert}\r\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\r\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\r\n              {updatedFacultyList.map((faculty) => {\r\n                const { FacultyID, bgColor, className } = faculty;\r\n                const facultyUser = UserList.find((user) => user.UserID === FacultyID);\r\n                const facultyName = facultyUser ? facultyUser.UserName : faculty.Faculty;\r\n                return (\r\n                  <li key={faculty.FacultyID}>\r\n                    <div className=\"add-faculty-style\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        name={faculty.FacultyID}\r\n                        checked={checkedItems[faculty.FacultyID] || false}\r\n                        onChange={handleCheckboxChange}\r\n                        className=\"addfaculty-checkbox-style\"\r\n                      />\r\n                      {facultyName}\r\n                    </div>\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={addToFaculty}>Add</Button>{' '}\r\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default AddTeacher;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import GlobalEmitterService from '../service/GlobalEmitterService';\r\nimport { URL } from '../const/url';\r\n\r\nexport default class TtApi {\r\n    getTtList = async () => {\r\n        try {\r\n            GlobalEmitterService.emit(true);           // GlobalEmitterService.emit is made true for adding spinner untill api is completed\r\n            const res = await fetch(URL.GET_ALL_TT, {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getEditTt = async (fromDateEdit) => {\r\n        try {\r\n            // const formData = new FormData();\r\n            // formData.append('file', file, file.name);\r\n            GlobalEmitterService.emit(true);\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.GET_EDIT_TT, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: JSON.stringify({\r\n                    FromDate: fromDateEdit.replaceAll(\"-\", \"/\"),\r\n                })\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n\r\n    addUpdateTt = async (ttRequestBody) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.GET_SAVE_TIMETABLE_URL, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: JSON.stringify(ttRequestBody)\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    removeTtById = async (timeTableID) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            // const formData = new FormData();\r\n            // formData.append('file', file, file.name);\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.REMOVE_TT, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: timeTableID\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n}","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { batch } from '../List/List';\r\n// import { batch } from '../../../const/batchList';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledAlert } from 'reactstrap';\r\nimport \"./AddBatch.css\"\r\n\r\nconst AddBatch = ({ showModal, setShowModal, batchList }) => {\r\n  /******************************************Use Effect********************************************** */\r\n  useEffect(() => {\r\n    if (showModal) {\r\n      const fetchApiData = async () => {\r\n        try {\r\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\r\n          const result = await response.json();\r\n          setApiData(result);\r\n        } catch (error) {\r\n        }\r\n      };\r\n      fetchApiData();\r\n    }\r\n  }, [showModal]);\r\n  /********************************************Use State****************************************** */\r\n  const [batches, setBatches] = useState(batchList);\r\n  const [apiData, setApiData] = useState({});\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n  const [showAlert, setShowAlert] = useState(\"\");\r\n  const [timeOfAlert, setTimeOfAlert] = useState(false);\r\n\r\n\r\n  /*****************************Other consts******************************************************** */\r\n  const { Object: responseObject = {} } = apiData;\r\n  const { Batch = [] } = responseObject;\r\n\r\n  /***************************************Methods*************************************************** */\r\n  const handleCheckboxChange = (event) => {\r\n    const { name, checked } = event.target;\r\n    setCheckedItems({\r\n      ...checkedItems,\r\n      [name]: checked,\r\n    });\r\n  };\r\n\r\n  const addToBatch = () => {\r\n    const newBatches = batchList;\r\n    for (const batchID in checkedItems) {\r\n      if (checkedItems[batchID]) {\r\n        const selectedItem = Batch.find((batch) => batch.BatchID === parseInt(batchID));\r\n        if (selectedItem && !newBatches.find((batch) => batch.BatchID === selectedItem.BatchID)) {\r\n          newBatches.push({\r\n            BatchID: selectedItem.BatchID,\r\n            Batch: selectedItem.Batch,\r\n            CourseID: selectedItem.CourseID,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    setBatches(newBatches);\r\n    if (!timeOfAlert) {\r\n      setShowAlert(<UncontrolledAlert color=\"success\" fade={false}>\r\n        Batches added successfully\r\n      </UncontrolledAlert>);\r\n\r\n      setTimeout(() => {\r\n        setTimeOfAlert(false);\r\n        setShowAlert(\"\");\r\n      }, 3000);\r\n\r\n    };\r\n    closeModal();\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  /***************************Template to return******************************************************* */\r\n  return (\r\n    <div>\r\n      <Modal centered={true} isOpen={showModal} toggle={closeModal}>\r\n        <ModalHeader toggle={closeModal}>Select Batches from the list</ModalHeader>\r\n        <ModalBody>\r\n          {showAlert}\r\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\r\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\r\n              {Batch.map((batch) => (\r\n                <li key={batch.BatchID}>\r\n                  <div className=\"add-batch-style\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name={batch.BatchID}\r\n                      checked={checkedItems[batch.BatchID] || false}\r\n                      onChange={handleCheckboxChange}\r\n                      className=\"addbatch-checkbox-style\"\r\n                    />\r\n                    {batch.Batch}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={addToBatch}>Add</Button>{' '}\r\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default AddBatch;\r\n\r\n","import GlobalEmitterService from '../service/GlobalEmitterService';\r\nimport { URL } from '../const/url';\r\n\r\nexport default class UploadApi {\r\n    // getUserWalletBalance = async (userId) => {\r\n    //     try {\r\n    //         GlobalEmitterService.emit(true);\r\n    //         const token = `Bearer ${AuthService.getToken()}`;\r\n    //         const res = await fetch(URL.USER_WALLET_BALANCE + '?' + new URLSearchParams({\r\n    //             userId\r\n    //         }), {\r\n    //             method: 'GET',\r\n    //             headers: { 'Content-Type': 'application/json', 'Authorization': token },\r\n    //         });\r\n    //         const result = await res.json();\r\n    //         GlobalEmitterService.emit(false);\r\n    //         return result;\r\n    //     } catch (e) {\r\n    //         GlobalEmitterService.emit(false);\r\n    //         throw new Error(e.message, e.options);\r\n    //     }\r\n    // }\r\n\r\n\r\n    getWattsappApi = async (url, message, cell, fileName) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            //  https://ziper.io/api/send.php?number=917898118503&type=media&message=test%20message&media_url=https://api.aayamcareerinstitute.co.in//Uploads/Files/File_3431223213168.pdf&filename=file_test.jpg&instance_id=647B3C9AA8D0A&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/send.php\" + '?' + new URLSearchParams({\r\n                number: cell,\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"647B3C9AA8D0A\",\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n\r\n    getWattsappGroupApiTeachers = async (url, message, fileName) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\r\n                // group_id: \"919977116612-1595572006@g.us\",\r\n                group_id: \"919977116612-1595572006@g.us\",\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"647B3C9AA8D0A\",\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getWattsappGroupApiOthers = async (url, message, fileName) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\r\n                group_id: \"919826362001-1628170376@g.us\",\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"647B3C9AA8D0A\", \r\n\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    uplaodFile = async (file) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            const formData = new FormData();\r\n            formData.append('file', file, file.name);\r\n            const res = await fetch(URL.UPLOAD_FILE, {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getUploadedFile = async () => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            const res = await fetch(URL.GET_UPLOAD_FILE_URL, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({})\r\n\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport { batch, teachers_list, time } from '../List/List';\r\n// import { teachers_list } from '../../../const/teacherList';\r\n// import { batch } from '../../../const/batchList';\r\n// import { time } from '../../../const/time';\r\nimport \"./TimeTable2.scss\";\r\n// import { RiDeleteBin2Line } from \"react-icons/ri\";\r\n// import htmlToCanvas from 'html-to-canvas';\r\nimport html2canvas from 'html2canvas';\r\nimport { Card, Row, Col, CardTitle, CardBody, Button, Form, FormGroup, Label, Input, FormText, } from \"reactstrap\";\r\nimport AddBatch from '../AddBatch/AddBatch';\r\nimport UploadApi from '../../../api/upload.api';\r\nimport AddTeacher from '../TeacherForm/TeacherForm';\r\nimport TtApi from '../../../api/tt.api.js';\r\n\r\nconst TimeTable2 = () => {\r\n  /**************************************** Use Effect Section ************************************/\r\n  /**************************************** State Section *****************************************/\r\n  const [tableWidth, setTableWidth] = useState(0);\r\n  const [draggedCellKey, setDraggedCellKey] = useState(null);\r\n  const [duplicateElements, setDuplicateElements] = useState({});\r\n  const [duplicateDetected, setDuplicateDetected] = useState(false);\r\n  const [teacher, setTeacher] = useState({});\r\n  const [teacherCounter, setTeacherCounter] = useState({}); // key: teacherId, value: counter\r\n  const [teacherAssignment, setTeacherAssignment] = useState({});\r\n  const [lectureList, setLectureList] = useState([]);\r\n  const [addBatch, setAddBatch] = useState(null);\r\n  // const [numberList, setNumberList] = useState([918989529107, 917898118503, 918871688429, 918349215747,919826362001,918349215747,917314058393,917869597239,919977116612,918085390900,918302184021,918358810742,919893640561,919713519598,919713030834,919827274005,919691938832,917043127836,919977711607,917298519996,919713191848,918871841238,917007794323,919669889020,918770153381]);\r\n  const [numberList, setNumberList] = useState([917898118503]);\r\n  const [batchList, setBatchList] = useState(batch);\r\n  const [image, setImage] = useState(null);   //  for div to image conversion\r\n  const [showAddBatchModal, setShowAddBatchModal] = useState(false); //for add Batch popup\r\n  const [showAddTeacherModal, setShowAddTeacherModal] = useState(false);\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n\r\n  /**************************************** Use Effect Section ************************************/\r\n  useEffect(() => {\r\n    const tableElement = document.querySelector('.table-style');\r\n    if (tableElement) {\r\n      const tableWidth = tableElement.offsetWidth;\r\n      setTableWidth(tableWidth);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (duplicateDetected) {\r\n      alert('Two same teachers found in the same row');\r\n      setDuplicateDetected(false);\r\n      setTimeout(() => {\r\n        setDuplicateElements({});\r\n      }, 3000); // Blink duration\r\n    }\r\n  }, [duplicateDetected]);\r\n\r\n  useEffect(() => {\r\n    if (duplicateDetected) {\r\n      // alert('Two same teachers found in the same row');   \r\n      setDuplicateDetected(false);\r\n    }\r\n  }, [duplicateDetected]);\r\n  /***************************************other const section*********************************** */\r\n  const divRef = useRef(null);\r\n  const color = [\"#D4E6F1\", \"#E8DAEF\", \"#008080\", \"#808000\", \"#C39BD3\", \"#76D7C4\", \"#3498DB\", \"#358b79\", \"#847f86\", \"rgb(251, 235, 9)\", \"#CA6F1E\", \"#CCCCFF\", \"#F4D03F\", \"rgb(199, 185, 84)\", \"#979A9A\", \"#F0B27A\", \"rgb(117, 98, 179)\", \"#CD5C5C\", \"#40E0D0\", \"#DAF7A6\", \"#008080\", \"#808000\", \"#FADBD8\", \"green\", \"yellow\", \"white\", \"red\", \"pink\"]\r\n  /**************************************** Component Method Section *********************************/\r\n\r\n  const generateUID = () => {\r\n    // I generate the UID from two parts here \r\n    // to ensure the random number provide enough bits.\r\n    var firstPart = (Math.random() * 46656) | 0;\r\n    var secondPart = (Math.random() * 46656) | 0;\r\n    firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\r\n    secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\r\n    return firstPart + secondPart;\r\n  }\r\n  const convertToImage = async () => {\r\n    // alert(\"Time table image sent successfully\")\r\n    const canvas = await html2canvas(divRef.current);\r\n    const imgData = canvas.toDataURL();\r\n    setImage(imgData);\r\n    /*converting page64 url got as imgData into file Object by using blob below*/\r\n    const byteString = atob(imgData.split(',')[1]);\r\n    const mimeString = imgData.split(',')[0].split(':')[1].split(';')[0];\r\n    const ia = new Uint8Array(byteString.length);\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n    }\r\n    const blob = new Blob([ia], { type: mimeString });\r\n    const imageName = generateUID();\r\n    const file = new File([blob], imageName + \".jpg\");\r\n    const fileName = imageName + \".jpg\";\r\n    const result = await new UploadApi().uplaodFile(file);\r\n    if (result === \"Success\") {\r\n      const data = await new UploadApi().getUploadedFile();\r\n      if (data.Object?.length > 0) {\r\n        const fileDetail = data.Object.reverse().find(obj => { return obj.Title?.indexOf(imageName) >= 0 });\r\n        // for (let i = 0; i < numberList.length; i++) {       THIS IS USED WHEN GETWATTSAPPAPI WILL USED SO DONT DELETE THIS LINES\r\n        try {\r\n          // const cell = numberList[i];\r\n          /*CHECK THE DETAILS OF THIS GETWATTSAPPAPI IN UPLOAD.API.JS FILE IN API FOLDER*/\r\n          // await new UploadApi().getWattsappApi(fileDetail.LongURL, \"time table\", cell, fileName);\r\n          await new UploadApi().getWattsappGroupApiOthers(fileDetail.LongURL, \"time table\", fileName);\r\n          // await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\r\n        } catch (e) {\r\n          // continue;\r\n          console.log(\"error\")\r\n        }\r\n        try {\r\n          await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\r\n        } catch (e) {\r\n          console.log(\"error\")\r\n        }\r\n      }\r\n    }\r\n    alert(\"Time table image sent successfully\")\r\n  }\r\n  const dragItem = teacher;\r\n  const dragStart = (e, teacherInfo) => {\r\n    dragItem.current = teacherInfo;\r\n    console.log(teacherInfo)\r\n  };\r\n  const handleTableCellDragStart = (e, key) => {\r\n    setDraggedCellKey(key);\r\n  };\r\n  const checkForDuplicateInRow = (key) => {\r\n    const rowId = key.split('_')[0];\r\n    const teacherInCurrentRow = [];\r\n    for (const cellKey in teacherAssignment) {\r\n      if (cellKey.startsWith(rowId)) {\r\n        teacherInCurrentRow.push({\r\n          key: cellKey,\r\n          teacher: teacherAssignment[cellKey].teacher,\r\n        });\r\n      }\r\n    }\r\n    const duplicates = teacherInCurrentRow.reduce((acc, item) => {\r\n      if (acc[item.teacher]) {\r\n        acc[item.teacher].push(item.key);\r\n      } else {\r\n        acc[item.teacher] = [item.key];\r\n      }\r\n      return acc;\r\n    }, {});\r\n    const newDuplicateKeys = Object.values(duplicates)\r\n      .filter((keys) => keys.length > 1)\r\n      .flat();\r\n    const oldDuplicateKeys = Object.keys(duplicateElements);\r\n    const isNewDuplicate = !oldDuplicateKeys.includes(key) && newDuplicateKeys.includes(key);\r\n    if (isNewDuplicate) {\r\n      setDuplicateDetected(true);\r\n      setDuplicateElements(\r\n        newDuplicateKeys.reduce((acc, key) => {\r\n          acc[key] = true;\r\n          return acc;\r\n        }, {})\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e, key) => {\r\n    console.log(key)\r\n    console.log(\"jjjjj\", teacherAssignment)\r\n    console.log(\"drag cell key\", draggedCellKey);\r\n    if (draggedCellKey) {\r\n      // Move table item\r\n      const sourceAssignment = teacherAssignment[draggedCellKey];\r\n      const targetAssignment = teacherAssignment[key];\r\n      setTeacherAssignment({\r\n        ...teacherAssignment,\r\n        [draggedCellKey]: targetAssignment,\r\n        [key]: sourceAssignment,\r\n      });\r\n      setDraggedCellKey(null);\r\n    } else {\r\n      // Assign teacher to the cell\r\n      const teacher_assignment = teacherAssignment;\r\n      teacherAssignment[key] = dragItem.current;\r\n      setTeacherAssignment({ ...teacher_assignment });\r\n      setTeacher({});\r\n      const teacherCount = teacherCounter;\r\n      if (!teacherCount[dragItem.current.teacher]) {\r\n        teacherCount[dragItem.current.teacher] = 1;\r\n      } else {\r\n        teacherCount[dragItem.current.teacher] += 1;\r\n      }\r\n      setTeacherCounter({ ...teacherCount });\r\n      checkForDuplicateInRow(key);\r\n\r\n      const teacher = teacherAssignment[key];\r\n      const batchId = key.split(\"_\")[1];\r\n      const lectureId = key.split(\"_\")[0];\r\n      const teacherName = teacher.teacher;\r\n\r\n      const batchVo = batch.find(it => it.BatchID == batchId);\r\n      console.log('xxxx xx xx teacher ', teacher);\r\n      console.log('xxxx xx xx batchId ', batchId);\r\n      console.log('xxxx xx xx lectureId', lectureId);\r\n      console.log('xxxx xx xx teacherAssignment', teacherAssignment);\r\n      // making lectureVO \r\n      const lectureVo = time.find(it => it.LectureID == lectureId);\r\n      const teacherVo = teachers_list.find(it => it.Faculty == teacherName)\r\n      console.log(\"iiii\", teacherVo)\r\n\r\n      const lecture = {};\r\n      lecture.ID = \"0\"\r\n      lecture.TimeTableID = \"0\";\r\n      lecture.LectureName = \"\";\r\n      lecture.Batch = batchVo;\r\n      lecture.Lecture = lectureVo;\r\n      lecture.Subject = teacherVo.subject;\r\n      lecture.FacultyID = teacherVo.FacultyID;\r\n      lecture.IsActive = true;\r\n      lecture.CreatedByUserID = \"1\";\r\n      lecture.CreatedOnDate = \"02/05/2023\";\r\n      console.log(\"fff\", lecture);\r\n      console.log(\"zzzz\", teacher)\r\n\r\n      const lecture_list = lectureList;\r\n      lecture_list.push(lecture);\r\n      setLectureList([...lecture_list])\r\n      /* THIS LECTURE LIST WILL BE USED BELOW IN THE CONST SAVETABLE() METHOD FROM WHERE WE SEND IT TO DATABASE THROUGH API WRITTEN IN SAVETABLE() METHOD*/\r\n    }\r\n  }\r\n\r\n  const allowDrop = (ev) => {\r\n    let t = ev.target;\r\n    while (t && (!t.classList || !t.classList.contains(\"each-block\"))) {\r\n      t = t.parentNode;\r\n    }\r\n    if (t && t.innerText.trim() !== \"\") {\r\n      // Prevent drop event if cell is not empty\r\n      return false;\r\n    }\r\n    ev.preventDefault();\r\n  };\r\n\r\n  const removeTeacher = (key) => {\r\n    const teacher_assignment = teacherAssignment;\r\n    setTeacherAssignment({ ...teacher_assignment });\r\n    setTeacher({});\r\n    const teacherCount = teacherCounter;\r\n    if ([teacherAssignment[key].teacher]) {\r\n      teacherCount[teacherAssignment[key].teacher] -= 1;\r\n    }\r\n    delete teacherAssignment[key].teacher;\r\n    delete teacherAssignment[key].color;\r\n    setTeacherCounter(teacherCount);\r\n  }\r\n\r\n  const onChangeFromDate = (e) => {\r\n    setFromDate(e.target.value);\r\n  }\r\n\r\n  const onChangeToDate = (e) => {\r\n    setToDate(e.target.value);\r\n  }\r\n\r\n  const onAddBatch = () => {\r\n    // setAddBatch(<AddBatch batchList={batchList} />)\r\n    setShowAddBatchModal(true);\r\n  }\r\n  \r\n  const onAddTeacher = () => {\r\n    setShowAddTeacherModal(true);\r\n  }\r\n\r\n  const saveTable = async() => {\r\n    const result = await new TtApi().saveTt(fromDate,toDate,lectureList);\r\n    alert(\"time table saved successfully\");\r\n  };\r\n  \r\n  /**************************************** Template Section *****************************************/\r\n  return (\r\n    <>\r\n      <div className=\"bg-container\">\r\n        <h1 className='heading-style'>CLASS SCHEDULE</h1>\r\n        <div className=\"button-group added-style\">\r\n          <Button className=\"btn \" color=\"info\" onClick={onAddBatch}>\r\n            Add Batches\r\n          </Button>\r\n          {showAddBatchModal && <AddBatch showModal={showAddBatchModal} setShowModal={setShowAddBatchModal} />}\r\n          {addBatch}\r\n          <Button className=\"btn\" color=\"info\" onClick={onAddTeacher}>\r\n            Add Teachers\r\n          </Button>\r\n          {showAddTeacherModal && <AddTeacher showModal={showAddTeacherModal} setShowModal={setShowAddTeacherModal} />}\r\n          <Button className=\"btn\" color=\"info\" onClick={saveTable}>\r\n            Save\r\n          </Button>\r\n          <Button className=\"btn\" color=\"info\" onClick={convertToImage}>\r\n            Post\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <div ref={divRef}>\r\n            <br />\r\n            <Form >\r\n              <div className='time-table-date-style'>\r\n                <FormGroup className=\"label-date-allignment\">\r\n                  <p>From:</p>\r\n                  <Input\r\n                    id=\"fromDate\"\r\n                    name=\"date\"\r\n                    type=\"date\"\r\n                    onChange={(e) => { onChangeFromDate(e) }}\r\n                    className='input-size'\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"label-date-allignment\">\r\n                  <p>To:</p>\r\n                  <Input\r\n                    id=\"toDate\"\r\n                    name=\"date\"\r\n                    type=\"date\"\r\n                    onChange={(e) => { onChangeToDate(e) }}\r\n                    className='input-size'\r\n\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </Form>\r\n            <table className='table-style'>\r\n              <tbody>\r\n                <div className=\"for-time\">\r\n                  <tr>\r\n                    <td className='F-style time-style'>Time</td>\r\n                    {batch.map((each) => {\r\n                      return (\r\n                        <td className='F-style batch-style' key={batch.BatchID}>{each.Batch}</td>\r\n                      )\r\n                    })}\r\n                  </tr>\r\n                </div>\r\n                <tr >\r\n                  {time.map((t) => {\r\n                    return (\r\n                      <div >\r\n                        <td className='F-style time-style'>{t.Time_From}-{t.Time_To}</td>\r\n                        {batchList.map((b) => {\r\n                          const key = t.LectureID + '_' + b.BatchID\r\n                          return (\r\n                            <td\r\n                              draggable={true}\r\n                              onDragOver={allowDrop}\r\n                              onDrop={(e) => handleDrop(e, key)}\r\n                              onDragStart={(e) => teacherAssignment[key] && handleTableCellDragStart(e, key)}\r\n                              key={key}\r\n                              id={key}\r\n                              className={`each-block ${duplicateElements[key] ? \"blink\" : \"\"}`}\r\n                              style={{ backgroundColor: teacherAssignment[key]?.color }}\r\n                            // className={`each-block ${duplicateElements[key]}`}\r\n                            >\r\n                              {teacherAssignment[key] && (\r\n                                <div className={`teacname-cross-style ${teacherAssignment[key]?.className} `}>\r\n                                  <div className=\"teacher-name\" >\r\n                                    {teacherAssignment[key]?.teacher}\r\n                                  </div>\r\n                                  <div className=\"cross-btn-container\">\r\n                                    {teacherAssignment[key]?.teacher ? (\r\n                                      <button\r\n                                        className=\"cross-style\"\r\n                                        onClick={() => removeTeacher(key)}\r\n                                      >\r\n                                        {/* <RiDeleteBin2Line /> */}\r\n                                        <RxCross2 />\r\n                                      </button>\r\n                                    ) : (\r\n                                      ''\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </td>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <br />\r\n            {/* <button onClick={onAddBatch}>+</button>\r\n            {addBatch} */}\r\n          </div>\r\n\r\n          {/* {image && <img src={image} alt=\"table\" style={{ maxWidth: tableWidth }} />} */}\r\n          {/* <button onClick={saveTable}>Save</button> */}\r\n        </div>\r\n        <div className='teacher-container' style={{ maxWidth: tableWidth }}>\r\n          {teachers_list.map((teacher, index) => {\r\n            const { FacultyID, Faculty } = teacher;\r\n            return (\r\n              <div\r\n                style={{ maxWidth: tableWidth, backgroundColor: color[index % color.length] }}\r\n                key={FacultyID}\r\n                className=\"teacher-item\"\r\n                draggable={true}\r\n                onDragStart={(e) => dragStart(e, { teacher: Faculty, color: color[index % color.length] })}\r\n              >\r\n                <h3>{Faculty}</h3>\r\n                {teacherCounter[Faculty] > 0 && (\r\n                  <span className={`counter-item `} draggable={false}>\r\n                    {teacherCounter[Faculty]}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default TimeTable2;"],"sourceRoot":""}