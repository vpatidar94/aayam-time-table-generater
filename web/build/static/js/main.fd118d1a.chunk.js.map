{"version":3,"sources":["routes/Router.js","layouts/loader/Loader.js","App.js","reportWebVitals.js","index.js"],"names":["FullLayout","lazy","Starter","About","Alerts","Badges","Buttons","Cards","Grid","Tables","Forms","Breadcrumbs","TimeTable","Students","Teachers","Admin","PreviousTimeTable","AddBatch","Mobile","CloneTimeTable","ThemeRoutes","path","element","_jsx","children","Navigate","to","exact","Loader","useEffect","subscribeToLoaderEvent","_useState","useState","_useState2","_slicedToArray","show","setShow","window","addEventListener","e","detail","className","style","display","Spinner","color","height","width","App","routing","useRoutes","Themeroutes","_jsxs","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Suspense","fallback","HashRouter","document","getElementById"],"mappings":"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","file":"static/js/main.fd118d1a.chunk.js","sourcesContent":["import { lazy } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n/****Layouts*****/\r\nconst FullLayout = lazy(() => import(\"../layouts/FullLayout.js\"));\r\n\r\n/***** Pages ****/\r\n\r\nconst Starter = lazy(() => import(\"../views/Starter.js\"));\r\nconst About = lazy(() => import(\"../views/About.js\"));\r\nconst Alerts = lazy(() => import(\"../views/ui/Alerts\"));\r\nconst Badges = lazy(() => import(\"../views/ui/Badges\"));\r\nconst Buttons = lazy(() => import(\"../views/ui/Buttons\"));\r\nconst Cards = lazy(() => import(\"../views/ui/Cards\"));\r\nconst Grid = lazy(() => import(\"../views/ui/Grid\"));\r\nconst Tables = lazy(() => import(\"../views/ui/Tables\"));\r\nconst Forms = lazy(() => import(\"../views/ui/Forms\"));\r\nconst Breadcrumbs = lazy(() => import(\"../views/ui/Breadcrumbs\"));\r\nconst TimeTable2 = lazy(() => import(\"../pages/TTPages/TimeTable2/TimeTable2.js\"));\r\nconst TimeTable = lazy(() => import(\"../pages/TTPages/TimeTable/TimeTable.js\"));\r\nconst Students = lazy(() => import(\"../pages/TTPages/Students/Students.js\"));\r\nconst Teachers = lazy(() => import(\"../pages/TTPages/Teachers/Teachers.js\"));\r\nconst Admin = lazy(() => import(\"../pages/TTPages/Admin/Admin.js\"));\r\nconst PreviousTimeTable = lazy(() => import(\"../pages/TTPages/PreviousTimeTable/PreviousTimeTable.js\"));\r\nconst AddBatch = lazy(() => import(\"../pages/TTPages/AddBatch/AddBatch.js\"));\r\nconst Mobile = lazy(() => import(\"../pages/TTPages/Mobile/Mobile.js\"));\r\nconst CloneTimeTable = lazy(() => import(\"../pages/TTPages/CloneTimeTable/CloneTimeTable.js\"));\r\n\r\n\r\n\r\n\r\n/*****Routes******/\r\n\r\nconst ThemeRoutes = [\r\n  {\r\n    path: \"/\",\r\n    element: <FullLayout />,\r\n    children: [\r\n      { path: \"/\", element: <Navigate to=\"/starter\" /> },\r\n      { path: \"/starter\", exact: true, element: <Starter /> },\r\n      { path: \"/about\", exact: true, element: <About /> },\r\n      { path: \"/alerts\", exact: true, element: <Alerts /> },\r\n      { path: \"/badges\", exact: true, element: <Badges /> },\r\n      { path: \"/buttons\", exact: true, element: <Buttons /> },\r\n      { path: \"/cards\", exact: true, element: <Cards /> },\r\n      { path: \"/grid\", exact: true, element: <Grid /> },\r\n      { path: \"/table\", exact: true, element: <Tables /> },\r\n      { path: \"/forms\", exact: true, element: <Forms /> },\r\n      { path: \"/breadcrumbs\", exact: true, element: <Breadcrumbs /> },\r\n\r\n\r\n      // { path: \"/tt\", exact: true, element: <TimeTable2 /> },\r\n      { path: \"/tt\", exact: true, element: <TimeTable/> },\r\n\r\n      { path: \"/students\", exact: true, element: <Students /> },\r\n      { path: \"/teachers\", exact: true, element: <Teachers /> },\r\n      { path: \"/admin\", exact: true, element: <Admin /> },\r\n      { path: \"/previoustimetable\", exact: true, element: <PreviousTimeTable /> },\r\n      { path: \"/addbatch\", exact: true, element: <AddBatch /> },\r\n      { path: \"/mobile\", exact: true, element: <Mobile /> },\r\n      { path: \"/clone/:timeTableId/:fromDateEdit\", exact: true, element: <CloneTimeTable /> }\r\n\r\n    ],\r\n  },\r\n];\r\n\r\nexport default ThemeRoutes;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport \"./loader.scss\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst Loader = () => {\r\n\r\n  /**************************************** Use Effect Section ************************************/\r\n  useEffect(() => {\r\n    subscribeToLoaderEvent();\r\n  }, []);\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n\r\n  const subscribeToLoaderEvent = () => {\r\n    window.addEventListener('spinner-load', (e) => {\r\n      setShow(e.detail);\r\n    });\r\n  };\r\n  return (<div>\r\n    <div className=\"fallback-spinner\" style={{ display: show ? 'flex' : 'none' }}>\r\n      <div className=\"loading\">\r\n        <Spinner color=\"primary\" style={{\r\n          height: '3rem',\r\n          width: '3rem'\r\n        }}\r\n />\r\n      </div>\r\n    </div >\r\n  </div>);\r\n};\r\nexport default Loader;\r\n","import { useRoutes } from \"react-router-dom\";\r\nimport Themeroutes from \"./routes/Router\";\r\nimport Loader from \"./layouts/loader/Loader\";\r\n\r\nconst App = () => {\r\n  const routing = useRoutes(Themeroutes);\r\n\r\n  return <div className=\"dark\">\r\n    <Loader />\r\n    {routing}\r\n  </div>;\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/scss/style.scss\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport Loader from \"./layouts/loader/Loader\";\r\n\r\nReactDOM.render(\r\n  <Suspense fallback={<Loader />}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Suspense>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}