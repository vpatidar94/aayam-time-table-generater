{"version":3,"sources":["pages/TTPages/List/List.js","const/url.js","pages/TTPages/TeacherForm/TeacherForm.js","api/tt.api.js.js","pages/TTPages/AddBatch/AddBatch.js","api/upload.api.js","pages/TTPages/TimeTable/TimeTable.js"],"names":["teachers_list","FacultyID","Faculty","subject","batch","BatchID","Batch","CourseID","time","LectureID","Lecture","Time_From","Time_To","BASE_URL","URL","UPLOAD_FILE","GET_UPLOAD_FILE_URL","GET_SAVE_TIMETABLE_URL","GET_ALL_TT","GET_EDIT_TT","AddTeacher","_ref","showModal","setShowModal","console","log","useEffect","fetchApiData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_context","prev","next","fetch","sent","json","setApiData","t0","stop","apply","arguments","_useState","useState","_useState2","_slicedToArray","setFaculties","_useState3","_useState4","apiData","_useState5","_useState6","checkedItems","setCheckedItems","_apiData$Object","Object","responseObject","_responseObject$Facul","FacultyList","_responseObject$UserL","UserList","facultyNameMap","forEach","user","UserID","UserName","handleCheckboxChange","event","_event$target","target","name","checked","_objectSpread","_defineProperty","updatedFacultyList","map","faculty","closeModal","_jsxs","children","_jsx","Modal","isOpen","toggle","style","maxWidth","ModalHeader","ModalBody","className","maxHeight","overflowY","listStyle","facultyUser","bgColor","find","facultyName","type","onChange","ModalFooter","Button","color","onClick","newTeachersList","_loop","facultyID","selectedItem","parseInt","some","teacher","push","alert","TtApi","_createClass","_classCallCheck","getTtList","res","method","abrupt","Error","message","options","getEditTt","_callee2","fromDateEdit","myHeaders","_context2","Headers","append","headers","body","JSON","stringify","FromDate","replaceAll","_x","saveTt","_ref3","_callee3","fromDate","toDate","lectureList","sentBatchID","_context3","TimeTableID","Description","DateType","ToDate","ShiftID","SessionID","Session","IsActive","CreatedByUserID","CreatedOnDate","Date","toLocaleString","LectureList","_x2","_x3","_x4","_x5","AddBatch","batchList","setBatches","_responseObject$Batch","newBatches","batchID","UploadApi","getWattsappApi","url","cell","fileName","URLSearchParams","number","media_url","filename","instance_id","access_token","getWattsappGroupApiTeachers","group_id","_x6","_x7","getWattsappGroupApiOthers","_x8","_x9","_x10","uplaodFile","_ref4","_callee4","file","formData","_context4","FormData","_x11","getUploadedFile","_callee5","_context5","TimeTable","tableWidth","setTableWidth","draggedCellKey","setDraggedCellKey","duplicateElements","setDuplicateElements","_useState7","_useState8","duplicateDetected","setDuplicateDetected","_useState9","_useState10","setTeacher","_useState11","_useState12","teacherCounter","setTeacherCounter","_useState13","_useState14","teacherAssignment","setTeacherAssignment","_useState15","_useState16","setLectureList","_useState17","_useState18","addBatch","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","setImage","_useState25","_useState26","showAddBatchModal","setShowAddBatchModal","_useState27","_useState28","showAddTeacherModal","setShowAddTeacherModal","_useState29","_useState30","setFromDate","_useState31","_useState32","setToDate","tableElement","document","querySelector","offsetWidth","setTimeout","divRef","useRef","generateUID","firstPart","Math","random","secondPart","toString","slice","convertToImage","canvas","imgData","byteString","mimeString","ia","i","blob","imageName","_data$Object","data","fileDetail","html2canvas","current","toDataURL","atob","split","Uint8Array","length","charCodeAt","Blob","File","reverse","obj","_obj$Title","Title","indexOf","LongURL","t1","dragItem","handleDrop","e","key","_objectSpread2","sourceAssignment","targetAssignment","teacher_assignment","teacherCount","rowId","teacherInCurrentRow","cellKey","startsWith","duplicates","reduce","acc","item","newDuplicateKeys","values","filter","keys","flat","includes","checkForDuplicateInRow","batchId","lectureId","teacherName","batchVo","it","lectureVo","teacherVo","lecture","Subject","lecture_list","_toConsumableArray","allowDrop","ev","t","classList","contains","parentNode","innerText","trim","preventDefault","saveTable","_Fragment","ref","Form","FormGroup","Input","id","value","onChangeFromDate","onChangeToDate","each","b","_teacherAssignment$ke","_teacherAssignment$ke2","_teacherAssignment$ke3","_teacherAssignment$ke4","draggable","onDragOver","onDrop","onDragStart","handleTableCellDragStart","concat","backgroundColor","removeTeacher","RxCross2","index","teacherInfo"],"mappings":"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","file":"static/js/7.e44346b8.chunk.js","sourcesContent":["import {v4 as uuidv4} from \"uuid\"\nexport const teachers_list = [\n        {\n            FacultyID: 22,\n            Faculty: \"MYK\",\n            subject: \"Physics\"\n        },\n        \n        {\n            FacultyID: 3038,\n            Faculty: \"KPS\",\n            subject:\"Chemistry\"\n        },\n\n        {\n            FacultyID: 2029,\n            Faculty: \"MRS\",\n            subject:\"Chemistry\"\n        },\n\n        {\n            FacultyID: 3051,\n            Faculty: \"MAS\",\n            subject:\"Physics\"\n        },\n\n        {\n            FacultyID: 3050,\n            Faculty: \"RSS\",\n            subject:\"Physics\"\n        },\n        {\n            FacultyID: 25,\n            Faculty: \"NMS\",\n            subject:\"Biology\"\n        },\n        {\n            FacultyID: 3037,\n            Faculty: \"HDS\",\n            subject:\"Chemistry\"\n        },\n        {\n            FacultyID: 3032,\n            Faculty: \"MNM\",\n            subject: \"Biology\"\n        },\n        \n        {\n            FacultyID: 1023,\n            Faculty: \"SJ\",\n            subject:\"Biology\"\n        },\n\n        {\n            FacultyID: 1025,\n            Faculty: \"AJ\",\n            subject:\"Biology\"\n        },\n\n        {\n            FacultyID: 1026,\n            Faculty: \"DMPS\",\n            subject:\"Chemistry\"\n        },\n\n        \n       \n        \n        {\n            FacultyID: 1027,\n            Faculty: \"PSJ\",\n            subject:\"Physics\"\n        },\n        {\n            FacultyID: 3033,\n            Faculty: \"YBS\",\n            subject:\"Biology\"\n        },\n        {\n            FacultyID: 3030,\n            Faculty: \"AKS\",\n            subject:\"Chemistry\"\n        },\n        {\n            FacultyID: 2028,\n            Faculty: \"AMS\",\n            subject:\"Maths\"\n        },\n        {\n            FacultyID: 3031,\n            Faculty: \"NDS\",\n            subject:\"Physics\"\n        },\n        {\n            FacultyID: 3052,\n            Faculty: \"HWS\",\n            subject:\"Physics\"\n        },\n        {\n            FacultyID: 1029,\n            Faculty: \"JRS\",\n            subject:\"Chemistry\"\n        },\n        {\n            FacultyID: 3053,\n            Faculty: \"HTS\",\n            subject:\"Chemistry\"\n        },\n    ]; \n    \n\nexport const batch= [\n    {\n        BatchID: 1,\n        Batch: \"A1\",\n        CourseID: 3\n    },\n    {\n        BatchID: 6,\n        Batch: \"A2\",\n        CourseID: 3\n    },\n    {\n        BatchID: 10,\n        Batch: \"A3\",\n        CourseID: 3\n    },\n    {\n        BatchID: 7,\n        Batch: \"A4\",\n        CourseID: 3\n    },\n    {\n        BatchID: 3,\n        Batch: \"C1\",\n        CourseID: 1\n    },\n    {\n        BatchID: 15,\n        Batch: \"C2\",\n        CourseID: 1\n    },\n    {\n        BatchID: 2,\n        Batch: \"B1\",\n        CourseID: 2\n    },\n    {\n        BatchID: 3049,\n        Batch: \"B2\",\n        CourseID: 2\n    },\n    //MORE BATCHES ADDED WITH A FAKE BATCHID AND FAKE COURSEID NEED TO CHANGE LATER\n\n    {\n        BatchID: 20,\n        Batch: \"JO1\",\n        CourseID: 13\n    },\n    {\n        BatchID: 3042,\n        Batch: \"JXI-1\",\n        CourseID: 11\n    },\n    {\n        BatchID: 3061,\n        Batch: \"JXI-2\",\n        CourseID: 11\n    },\n    {\n        BatchID: 22,\n        Batch: \"JXII-1\",\n        CourseID: 12\n    },\n    {\n        BatchID: 3079,\n        Batch: \"JEE XL\",\n        CourseID: 1025\n    },\n    {\n        BatchID: 3078,\n        Batch: \"JEE adv\",\n        CourseID: 13\n    }\n]\n\n\nexport const time= [\n    {\n        LectureID: 1,\n        Lecture: \"L1\",\n        Time_From: \"08:30 AM\",\n        Time_To: \"09:45 AM\"\n    },\n    {\n        LectureID: 2,\n        Lecture: \"L2\",\n        Time_From: \"09:50 AM\",\n        Time_To: \"11:05 AM\"\n    },\n    {\n        LectureID: 3,\n        Lecture: \"L3\",\n        Time_From: \"11:20 AM\",\n        Time_To: \"12:35 PM\"\n    },\n    {\n        LectureID: 4,\n        Lecture: \"L4\",\n        Time_From: \"12:40 PM\",\n        Time_To: \"01:55 PM\"\n    },\n    {\n        LectureID: 5,\n        Lecture: \"L5\",\n        Time_From: \"02:00 PM\",\n        Time_To: \"03:15 PM\"\n    },\n    {\n        LectureID: 6,\n        Lecture: \"L6\",\n        Time_From: \"03:20 PM\",\n        Time_To: \"04:35 PM\"\n    },\n    {\n        LectureID: 7,\n        Lecture: \"L7\",\n        Time_From: \"04:50 PM\",\n        Time_To: \"06:05 PM\"\n    },\n    {\n        LectureID: 8,\n        Lecture: \"L8\",\n        Time_From: \"06:15 PM\",\n        Time_To: \"07:30 PM\"\n    }\n]\n","const ENV_URL = 'https://api.aayamcareerinstitute.co.in/api'; // producation fn\nconst DEV_URL = 'http://localhost:5001'; // producation fn\nconst BASE_URL= ENV_URL\n\n\n\nexport const URL = {\n    UPLOAD_FILE: BASE_URL + '/UploadFilesAttachment',\n    GET_UPLOAD_FILE_URL: BASE_URL + '/GetFiles', \n    GET_SAVE_TIMETABLE_URL: BASE_URL+ '/AddUpdateTimeTable',\n    GET_ALL_TT: BASE_URL + '/GetTimeTable', \n\n    GET_EDIT_TT: BASE_URL + '/GetTimeTableByDate',\n\n\n\n};  \n","import React, { useState, useEffect } from 'react';\nimport { batch } from '../List/List';\nimport { teachers_list } from '../List/List';\n// import { teachers_list } from '../../../const/teacherList';\n// import { batch } from '../../../const/batchList';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport \"./TeacherForm.css\";\n\nconst AddTeacher = ({ showModal, setShowModal }) => {\n  console.log(\",,tt\", teachers_list);\n\n  /************************************Use Effect****************************************** */\n  useEffect(() => {\n    if (showModal) {\n      const fetchApiData = async () => {\n        try {\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\n          const result = await response.json();\n          setApiData(result);\n        } catch (error) {\n          console.log('Error fetching API data:', error);\n        }\n      };\n\n      fetchApiData();\n    }\n  }, [showModal]);\n\n  /***********************Use State***************************************************** */\n  const [faculties, setFaculties] = useState(teachers_list);\n  // const [batches, setBatches] = useState(JSON.parse(localStorage.getItem('batches')) || batch);\n  const [apiData, setApiData] = useState({});\n  const [checkedItems, setCheckedItems] = useState({});\n\n  /*************************other consts*************************************************** */\n  const { Object: responseObject = {} } = apiData;\n  const { Batch = [], FacultyList = [], UserList = [] } = responseObject;\n  const facultyNameMap = {};\n\n  UserList.forEach((user) => {\n    facultyNameMap[user.UserID] = user.UserName;\n  });\n  /****************************************methods******************************************* */\n  const handleCheckboxChange = (event) => {\n    const { name, checked } = event.target;\n    setCheckedItems({\n      ...checkedItems,\n      [name]: checked,\n    });\n  };\n\n  const updatedFacultyList = FacultyList.map((faculty) => ({\n    ...faculty,\n    Faculty: facultyNameMap[faculty.FacultyID] || faculty.Faculty,\n  }));\n\n  const addToFaculty = () => {\n    const newTeachersList = teachers_list;\n\n    for (const facultyID in checkedItems) {\n      if (checkedItems[facultyID]) {\n        const selectedItem = updatedFacultyList.find(\n          (faculty) => faculty.FacultyID === parseInt(facultyID)\n        );\n\n        if (selectedItem) {\n          const facultyUser = UserList.find(\n            (user) => user.UserID === selectedItem.FacultyID\n          );\n          const facultyName = facultyUser ? facultyUser.UserName : selectedItem.Faculty;\n\n          const isTeacherAlreadyAdded = newTeachersList.some(\n            (teacher) => teacher.FacultyID === selectedItem.FacultyID\n          );\n\n          if (!isTeacherAlreadyAdded) {\n            newTeachersList.push({\n              FacultyID: selectedItem.FacultyID,\n              Faculty: facultyName,\n            });\n          }\n        }\n      }\n    }\n\n    console.log(newTeachersList);\n    setFaculties(newTeachersList);\n    alert(\"faculty added successfully\");\n\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  /**********************************************Template to return******************************** */\n  return (\n    <div>\n      <h1>Add New Teacher</h1>\n      <Modal isOpen={showModal} toggle={closeModal} style={{maxWidth:'320px'}}>\n        <ModalHeader toggle={closeModal}>Select Teachers from the list</ModalHeader>\n        <ModalBody>\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll',maxWidth:'300px'}}>\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\n              {updatedFacultyList.map((faculty) => {\n                const { FacultyID, bgColor, className } = faculty;\n                const facultyUser = UserList.find((user) => user.UserID === FacultyID);\n                const facultyName = facultyUser ? facultyUser.UserName : faculty.Faculty;\n                return (\n                  <li key={faculty.FacultyID}>\n                  <div className=\"add-faculty-style\">\n                      <input\n                        type=\"checkbox\"\n                        name={faculty.FacultyID}\n                        checked={checkedItems[faculty.FacultyID] || false}\n                        onChange={handleCheckboxChange}\n                        className=\"addfaculty-checkbox-style\"\n                      />\n                      {facultyName}\n                    </div>\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={addToFaculty}>Add</Button>{' '}\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\nexport default AddTeacher;\n\n\n\n\n\n\n","import { URL } from '../const/url';\n\nexport default class TtApi {\n    getTtList = async () => {\n        try {\n            const res = await fetch(URL.GET_ALL_TT, {\n                method: 'GET',\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\ngetEditTt = async (fromDateEdit) => {\n    try {\n        // const formData = new FormData();\n        // formData.append('file', file, file.name);\n        const myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n        const res = await fetch(URL.GET_EDIT_TT, {\n            method: 'POST',\n            headers: myHeaders,\n            body: JSON.stringify({\n            FromDate: fromDateEdit.replaceAll(\"-\", \"/\"),\n        })});\n        const result = await res.json();\n        return result;\n    } catch (e) {\n        throw new Error(e.message, e.options);\n    }\n}\n\nsaveTt = async (fromDate,toDate,lectureList,sentBatchID) => {\n    try {\n        const myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n        const res = await fetch(URL.GET_SAVE_TIMETABLE_URL, {\n            method: 'POST',\n            headers: myHeaders,\n            body: JSON.stringify({\n                TimeTableID: 0,\n                Description: \"time table save\",\n                DateType: \"single\",\n                FromDate: fromDate,\n                ToDate: toDate,\n                ShiftID: 1,\n                SessionID: 5,\n                Session: \"string\",\n                // BatchID: [\n                //   1, 6, 10, 7, 3, 15, 2, 3049, 20, 3042, 3061, 22, 13, 14\n                // ],,\n                BatchID:sentBatchID,\n                LectureID: [\n                  1, 2, 3, 4, 5, 6, 7, 8\n                ],\n                IsActive: true,\n                CreatedByUserID: 1,\n                CreatedOnDate: new Date().toLocaleString(),\n                LectureList: lectureList\n        })});\n        const result = await res.json();\n        return result;\n    } catch (e) {\n        throw new Error(e.message, e.options);\n    }\n}\n\n\n\n}","\nimport React, { useState, useEffect } from 'react';\nimport { batch } from '../List/List';\n// import { batch } from '../../../const/batchList';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport \"./AddBatch.css\"\n\nconst AddBatch = ({ showModal, setShowModal, batchList }) => {\n  console.log(\",,bb\", batch);\n  /******************************************Use Effect********************************************** */\n  useEffect(() => {\n    if (showModal) {\n      const fetchApiData = async () => {\n        try {\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\n          const result = await response.json();\n          setApiData(result);\n        } catch (error) {\n          console.log('Error fetching API data:', error);\n        }\n      };\n\n      fetchApiData();\n\n    }\n  }, [showModal]);\n  /********************************************Use State****************************************** */\n  const [batches, setBatches] = useState(batchList);\n  const [apiData, setApiData] = useState({});\n  const [checkedItems, setCheckedItems] = useState({});\n\n  /*****************************Other consts******************************************************** */\n  const { Object: responseObject = {} } = apiData;\n  const { Batch = [] } = responseObject;\n\n  /***************************************Methods*************************************************** */\n  const handleCheckboxChange = (event) => {\n    const { name, checked } = event.target;\n    setCheckedItems({\n      ...checkedItems,\n      [name]: checked,\n    });\n  };\n\n  const addToBatch = () => {\n    const newBatches = batchList;\n    for (const batchID in checkedItems) {\n      if (checkedItems[batchID]) {\n        const selectedItem = Batch.find((batch) => batch.BatchID === parseInt(batchID));\n        if (selectedItem && !newBatches.find((batch) => batch.BatchID === selectedItem.BatchID)) {\n          newBatches.push({\n            BatchID: selectedItem.BatchID,\n            Batch: selectedItem.Batch,\n            CourseID: selectedItem.CourseID,\n          });\n        }\n      }\n    }\n    console.log(newBatches)\n    setBatches(newBatches);\n    alert(\"batches added successfully\");\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  /***************************Template to return******************************************************* */\n  return (\n    <div>\n      <Modal isOpen={showModal} toggle={closeModal} style={{ maxWidth: '320px' }}>\n        <ModalHeader toggle={closeModal}>Select Batches from the list</ModalHeader>\n        <ModalBody>\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\n              {Batch.map((batch) => (\n                <li key={batch.BatchID}>\n                  <div className=\"add-batch-style\">\n                    <input\n                      type=\"checkbox\"\n                      name={batch.BatchID}\n                      checked={checkedItems[batch.BatchID] || false}\n                      onChange={handleCheckboxChange}\n                      className=\"addbatch-checkbox-style\"\n                    />\n                    {batch.Batch}\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={addToBatch}>Add</Button>{' '}\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\nexport default AddBatch;\n\n","import { URL } from '../const/url';\n\nexport default class UploadApi {\n    // getUserWalletBalance = async (userId) => {\n    //     try {\n    //         GlobalEmitterService.emit(true);\n    //         const token = `Bearer ${AuthService.getToken()}`;\n    //         const res = await fetch(URL.USER_WALLET_BALANCE + '?' + new URLSearchParams({\n    //             userId\n    //         }), {\n    //             method: 'GET',\n    //             headers: { 'Content-Type': 'application/json', 'Authorization': token },\n    //         });\n    //         const result = await res.json();\n    //         GlobalEmitterService.emit(false);\n    //         return result;\n    //     } catch (e) {\n    //         GlobalEmitterService.emit(false);\n    //         throw new Error(e.message, e.options);\n    //     }\n    // }\n\n\n    getWattsappApi = async (url, message, cell, fileName) => {\n        try {\n            console.log(\"url\", url);\n            console.log(\"mesage\", message);\n            console.log(\"cel\", cell);\n            console.log(\"file\", fileName);\n            // https://ziper.io/api/send.php?number=917898118503&type=media&message=test%20message&media_url=https://api.aayamcareerinstitute.co.in//Uploads/Files/File_3431223213168.pdf&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\n            const res = await fetch(\"https://ziper.io/api/send.php\" + '?' + new URLSearchParams({\n                number: cell,\n                type: \"media\",\n                message: message,\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\n                filename: fileName,\n                instance_id: \"6453479F141A2\",\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\n            }), {\n                method: 'GET',\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n\n    getWattsappGroupApiTeachers = async (url, message, fileName) => {\n        try {\n            console.log(\"url\", url);\n            console.log(\"mesage\", message);\n            console.log(\"file\", fileName);\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\n                group_id: \"919977116612-1595572006@g.us\",\n                type: \"media\",\n                message: message,\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\n                filename: fileName,\n                instance_id: \"6453479F141A2\",\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\n            }), {\n                method: 'GET',\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n    getWattsappGroupApiOthers = async (url, message, fileName) => {\n        try {\n            console.log(\"url\", url);\n            console.log(\"mesage\", message);\n            console.log(\"file\", fileName);\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\n                group_id: \"919826362001-1628170376@g.us\",\n                type: \"media\",\n                message: message,\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\n                filename: fileName,\n                instance_id: \"6453479F141A2\",\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\n\n            }), {\n                method: 'GET',\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n    uplaodFile = async (file) => {\n        try {\n            const formData = new FormData();\n            formData.append('file', file, file.name);\n            const res = await fetch(URL.UPLOAD_FILE, {\n                method: 'POST',\n                body: formData,\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n\n    getUploadedFile = async () => {\n        try {\n            const res = await fetch(URL.GET_UPLOAD_FILE_URL, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({})\n\n            });\n            const result = await res.json();\n            return result;\n        } catch (e) {\n            throw new Error(e.message, e.options);\n        }\n    }\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { RxCross2 } from \"react-icons/rx\";\nimport { batch, teachers_list, time } from '../List/List';\n// import { teachers_list } from '../../../const/teacherList';\n// import { batch } from '../../../const/batchList';\n// import { time } from '../../../const/time';\nimport \"./TimeTable.scss\";\n// import { RiDeleteBin2Line } from \"react-icons/ri\";\n// import htmlToCanvas from 'html-to-canvas';\nimport html2canvas from 'html2canvas';\nimport { Card, Row, Col, CardTitle, CardBody, Button, Form, FormGroup, Label, Input, FormText, } from \"reactstrap\";\nimport AddBatch from '../AddBatch/AddBatch';\nimport UploadApi from '../../../api/upload.api';\nimport AddTeacher from '../TeacherForm/TeacherForm';\nimport TtApi from '../../../api/tt.api.js';\n\nconst TimeTable = () => {\n  /**************************************** Use Effect Section ************************************/\n  /**************************************** State Section *****************************************/\n  const [tableWidth, setTableWidth] = useState(0);\n  const [draggedCellKey, setDraggedCellKey] = useState(null);\n  const [duplicateElements, setDuplicateElements] = useState({});\n  const [duplicateDetected, setDuplicateDetected] = useState(false);\n  const [teacher, setTeacher] = useState({});\n  const [teacherCounter, setTeacherCounter] = useState({}); // key: teacherId, value: counter\n  const [teacherAssignment, setTeacherAssignment] = useState({});\n  const [lectureList, setLectureList] = useState([]);\n  const [addBatch, setAddBatch] = useState(null);\n  // const [numberList, setNumberList] = useState([918989529107, 917898118503, 918871688429, 918349215747,919826362001,918349215747,917314058393,917869597239,919977116612,918085390900,918302184021,918358810742,919893640561,919713519598,919713030834,919827274005,919691938832,917043127836,919977711607,917298519996,919713191848,918871841238,917007794323,919669889020,918770153381]);\n  const [numberList, setNumberList] = useState([917898118503]);\n  const [batchList, setBatchList] = useState(batch);\n  const [image, setImage] = useState(null);   //  for div to image conversion\n  const [showAddBatchModal, setShowAddBatchModal] = useState(false); //for add Batch popup\n  const [showAddTeacherModal, setShowAddTeacherModal] = useState(false);\n  const [fromDate, setFromDate] = useState(\"\");\n  const [toDate, setToDate] = useState(\"\");\n\n  /**************************************** Use Effect Section ************************************/\n  useEffect(() => {\n    const tableElement = document.querySelector('.table-style');\n    if (tableElement) {\n      const tableWidth = tableElement.offsetWidth;\n      setTableWidth(tableWidth);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (duplicateDetected) {\n      alert('Two same teachers found in the same row');\n      setDuplicateDetected(false);\n      setTimeout(() => {\n        setDuplicateElements({});\n      }, 3000); // Blink duration\n    }\n  }, [duplicateDetected]);\n\n  useEffect(() => {\n    if (duplicateDetected) {\n      // alert('Two same teachers found in the same row');   \n      setDuplicateDetected(false);\n    }\n  }, [duplicateDetected]);\n  /***************************************other const section*********************************** */\n  const divRef = useRef(null);\n  const color = [\"#D4E6F1\", \"#E8DAEF\", \"#008080\", \"#808000\", \"#C39BD3\", \"#76D7C4\", \"#3498DB\", \"#358b79\", \"#847f86\", \"rgb(251, 235, 9)\", \"#CA6F1E\", \"#CCCCFF\", \"#F4D03F\", \"rgb(199, 185, 84)\", \"#979A9A\", \"#F0B27A\", \"rgb(117, 98, 179)\", \"#CD5C5C\", \"#40E0D0\", \"#DAF7A6\", \"#008080\", \"#808000\", \"#FADBD8\", \"green\", \"yellow\", \"white\", \"red\", \"pink\"]\n  /**************************************** Component Method Section *********************************/\n\n  const generateUID = () => {\n    // I generate the UID from two parts here \n    // to ensure the random number provide enough bits.\n    var firstPart = (Math.random() * 46656) | 0;\n    var secondPart = (Math.random() * 46656) | 0;\n    firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\n    secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\n    return firstPart + secondPart;\n  }\n  const convertToImage = async () => {\n    // alert(\"Time table image sent successfully\")\n    const canvas = await html2canvas(divRef.current);\n    const imgData = canvas.toDataURL();\n    setImage(imgData);\n    /*converting page64 url got as imgData into file Object by using blob below*/\n    const byteString = atob(imgData.split(',')[1]);\n    const mimeString = imgData.split(',')[0].split(':')[1].split(';')[0];\n    const ia = new Uint8Array(byteString.length);\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    const blob = new Blob([ia], { type: mimeString });\n    const imageName = generateUID();\n    const file = new File([blob], imageName + \".jpg\");\n    const fileName = imageName + \".jpg\";\n    const result = await new UploadApi().uplaodFile(file);\n    if (result === \"Success\") {\n      const data = await new UploadApi().getUploadedFile();\n      if (data.Object?.length > 0) {\n        const fileDetail = data.Object.reverse().find(obj => { return obj.Title?.indexOf(imageName) >= 0 });\n        // for (let i = 0; i < numberList.length; i++) {       THIS IS USED WHEN GETWATTSAPPAPI WILL USED SO DONT DELETE THIS LINES\n        try {\n          // const cell = numberList[i];\n          /*CHECK THE DETAILS OF THIS GETWATTSAPPAPI IN UPLOAD.API.JS FILE IN API FOLDER*/\n          // await new UploadApi().getWattsappApi(fileDetail.LongURL, \"time table\", cell, fileName);\n          await new UploadApi().getWattsappGroupApiOthers(fileDetail.LongURL, \"time table\", fileName);\n          // await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\n        } catch (e) {\n          // continue;\n          console.log(\"error\")\n        }\n        try {\n          await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\n        } catch (e) {\n          console.log(\"error\")\n        }\n      }\n    }\n    alert(\"Time table image sent successfully\")\n  }\n  const dragItem = teacher;\n  const dragStart = (e, teacherInfo) => {\n    dragItem.current = teacherInfo;\n    console.log(teacherInfo)\n  };\n  const handleTableCellDragStart = (e, key) => {\n    setDraggedCellKey(key);\n  };\n  const checkForDuplicateInRow = (key) => {\n    const rowId = key.split('_')[0];\n    const teacherInCurrentRow = [];\n    for (const cellKey in teacherAssignment) {\n      if (cellKey.startsWith(rowId)) {\n        teacherInCurrentRow.push({\n          key: cellKey,\n          teacher: teacherAssignment[cellKey].teacher,\n        });\n      }\n    }\n    const duplicates = teacherInCurrentRow.reduce((acc, item) => {\n      if (acc[item.teacher]) {\n        acc[item.teacher].push(item.key);\n      } else {\n        acc[item.teacher] = [item.key];\n      }\n      return acc;\n    }, {});\n    const newDuplicateKeys = Object.values(duplicates)\n      .filter((keys) => keys.length > 1)\n      .flat();\n    const oldDuplicateKeys = Object.keys(duplicateElements);\n    const isNewDuplicate = !oldDuplicateKeys.includes(key) && newDuplicateKeys.includes(key);\n    if (isNewDuplicate) {\n      setDuplicateDetected(true);\n      setDuplicateElements(\n        newDuplicateKeys.reduce((acc, key) => {\n          acc[key] = true;\n          return acc;\n        }, {})\n      );\n    }\n  };\n\n  const handleDrop = (e, key) => {\n    console.log(key)\n    console.log(\"jjjjj\", teacherAssignment)\n    console.log(\"drag cell key\", draggedCellKey);\n    if (draggedCellKey) {\n      // Move table item\n      const sourceAssignment = teacherAssignment[draggedCellKey];\n      const targetAssignment = teacherAssignment[key];\n      setTeacherAssignment({\n        ...teacherAssignment,\n        [draggedCellKey]: targetAssignment,\n        [key]: sourceAssignment,\n      });\n      setDraggedCellKey(null);\n    } else {\n      // Assign teacher to the cell\n      const teacher_assignment = teacherAssignment;\n      teacherAssignment[key] = dragItem.current;\n      setTeacherAssignment({ ...teacher_assignment });\n      setTeacher({});\n      const teacherCount = teacherCounter;\n      if (!teacherCount[dragItem.current.teacher]) {\n        teacherCount[dragItem.current.teacher] = 1;\n      } else {\n        teacherCount[dragItem.current.teacher] += 1;\n      }\n      setTeacherCounter({ ...teacherCount });\n      checkForDuplicateInRow(key);\n\n      const teacher = teacherAssignment[key];\n      const batchId = key.split(\"_\")[1];\n      const lectureId = key.split(\"_\")[0];\n      const teacherName = teacher.teacher;\n\n      const batchVo = batch.find(it => it.BatchID == batchId);\n      console.log('xxxx xx xx teacher ', teacher);\n      console.log('xxxx xx xx batchId ', batchId);\n      console.log('xxxx xx xx lectureId', lectureId);\n      console.log('xxxx xx xx teacherAssignment', teacherAssignment);\n      // making lectureVO \n      const lectureVo = time.find(it => it.LectureID == lectureId);\n      const teacherVo = teachers_list.find(it => it.Faculty == teacherName)\n      console.log(\"iiii\", teacherVo)\n\n      const lecture = {};\n      lecture.ID = \"0\"\n      lecture.TimeTableID = \"0\";\n      lecture.LectureName = \"\";\n      lecture.Batch = batchVo;\n      lecture.Lecture = lectureVo;\n      lecture.Subject = teacherVo.subject;\n      lecture.FacultyID = teacherVo.FacultyID;\n      lecture.IsActive = true;\n      lecture.CreatedByUserID = \"1\";\n      lecture.CreatedOnDate = \"02/05/2023\";\n      console.log(\"fff\", lecture);\n      console.log(\"zzzz\", teacher)\n\n      const lecture_list = lectureList;\n      lecture_list.push(lecture);\n      setLectureList([...lecture_list])\n      /* THIS LECTURE LIST WILL BE USED BELOW IN THE CONST SAVETABLE() METHOD FROM WHERE WE SEND IT TO DATABASE THROUGH API WRITTEN IN SAVETABLE() METHOD*/\n    }\n  }\n  const allowDrop = (ev) => {\n    let t = ev.target;\n    while (t && (!t.classList || !t.classList.contains(\"each-block\"))) {\n      t = t.parentNode;\n    }\n    if (t && t.innerText.trim() !== \"\") {\n      // Prevent drop event if cell is not empty\n      return false;\n    }\n    ev.preventDefault();\n  };\n  const removeTeacher = (key) => {\n    const teacher_assignment = teacherAssignment;\n    setTeacherAssignment({ ...teacher_assignment });\n    setTeacher({});\n    const teacherCount = teacherCounter;\n    if ([teacherAssignment[key].teacher]) {\n      teacherCount[teacherAssignment[key].teacher] -= 1;\n    }\n    delete teacherAssignment[key].teacher;\n    delete teacherAssignment[key].color;\n    setTeacherCounter(teacherCount);\n  }\n  const onChangeFromDate = (e) => {\n    setFromDate(e.target.value);\n  }\n  const onChangeToDate = (e) => {\n    setToDate(e.target.value);\n  }\n  const onAddBatch = () => {\n    // setAddBatch(<AddBatch batchList={batchList} />)\n    setShowAddBatchModal(true);\n  }\n  \n  const onAddTeacher = () => {\n    setShowAddTeacherModal(true);\n  }\n  const saveTable = async() => {\n    const result = await new TtApi().saveTt(fromDate,toDate,lectureList);\n    console.log(\"mmmm\",result);\n    alert(\"time table saved successfully\");\n  };\n  /**************************************** Template Section *****************************************/\n  return (\n    <>\n      <div className=\"bg-container\">\n        <h1 className='heading-style'>CLASS SCHEDULE</h1>\n        <div className=\"button-group added-style\">\n          <Button className=\"btn \" color=\"info\" onClick={onAddBatch}>\n            Add Batches\n          </Button>\n          {showAddBatchModal && <AddBatch showModal={showAddBatchModal} setShowModal={setShowAddBatchModal} />}\n          {addBatch}\n          <Button className=\"btn\" color=\"info\" onClick={onAddTeacher}>\n            Add Teachers\n          </Button>\n          {showAddTeacherModal && <AddTeacher showModal={showAddTeacherModal} setShowModal={setShowAddTeacherModal} />}\n          <Button className=\"btn\" color=\"info\" onClick={saveTable}>\n            Save\n          </Button>\n          <Button className=\"btn\" color=\"info\" onClick={convertToImage}>\n            Post\n          </Button>\n        </div>\n        <div>\n          <div ref={divRef}>\n            <br />\n            <Form >\n              <div className='time-table-date-style'>\n                <FormGroup className=\"label-date-allignment\">\n                  <p>From:</p>\n                  <Input\n                    id=\"fromDate\"\n                    name=\"date\"\n                    type=\"date\"\n                    onChange={(e) => { onChangeFromDate(e) }}\n                    className='input-size'\n                  />\n                </FormGroup>\n                <FormGroup className=\"label-date-allignment\">\n                  <p>To:</p>\n                  <Input\n                    id=\"toDate\"\n                    name=\"date\"\n                    type=\"date\"\n                    onChange={(e) => { onChangeToDate(e) }}\n                    className='input-size'\n\n                  />\n                </FormGroup>\n              </div>\n            </Form>\n            <table className='table-style'>\n              <tbody>\n                <div className=\"for-time\">\n                  <tr>\n                    <td className='F-style time-style'>Time</td>\n                    {batch.map((each) => {\n                      return (\n                        <td className='F-style batch-style' key={batch.BatchID}>{each.Batch}</td>\n                      )\n                    })}\n                  </tr>\n                </div>\n                <tr >\n                  {time.map((t) => {\n                    return (\n                      <div >\n                        <td className='F-style time-style'>{t.Time_From}-{t.Time_To}</td>\n                        {batchList.map((b) => {\n                          const key = t.LectureID + '_' + b.BatchID\n                          return (\n                            <td\n                              draggable={true}\n                              onDragOver={allowDrop}\n                              onDrop={(e) => handleDrop(e, key)}\n                              onDragStart={(e) => teacherAssignment[key] && handleTableCellDragStart(e, key)}\n                              key={key}\n                              id={key}\n                              className={`each-block ${duplicateElements[key] ? \"blink\" : \"\"}`}\n                              style={{ backgroundColor: teacherAssignment[key]?.color }}\n                            // className={`each-block ${duplicateElements[key]}`}\n                            >\n                              {teacherAssignment[key] && (\n                                <div className={`teacname-cross-style ${teacherAssignment[key]?.className} `}>\n                                  <div className=\"teacher-name\" >\n                                    {teacherAssignment[key]?.teacher}\n                                  </div>\n                                  <div className=\"cross-btn-container\">\n                                    {teacherAssignment[key]?.teacher ? (\n                                      <button\n                                        className=\"cross-style\"\n                                        onClick={() => removeTeacher(key)}\n                                      >\n                                        {/* <RiDeleteBin2Line /> */}\n                                        <RxCross2 />\n                                      </button>\n                                    ) : (\n                                      ''\n                                    )}\n                                  </div>\n                                </div>\n                              )}\n                            </td>\n                          )\n                        })}\n                      </div>\n                    )\n                  })}\n                </tr>\n              </tbody>\n            </table>\n            <br />\n            {/* <button onClick={onAddBatch}>+</button>\n            {addBatch} */}\n          </div>\n\n          {/* {image && <img src={image} alt=\"table\" style={{ maxWidth: tableWidth }} />} */}\n          {/* <button onClick={saveTable}>Save</button> */}\n        </div>\n        <div className='teacher-container' style={{ maxWidth: tableWidth }}>\n          {teachers_list.map((teacher, index) => {\n            const { FacultyID, Faculty } = teacher;\n            return (\n              <div\n                style={{ maxWidth: tableWidth, backgroundColor: color[index % color.length] }}\n                key={FacultyID}\n                className=\"teacher-item\"\n                draggable={true}\n                onDragStart={(e) => dragStart(e, { teacher: Faculty, color: color[index % color.length] })}\n              >\n                <h3>{Faculty}</h3>\n                {teacherCounter[Faculty] > 0 && (\n                  <span className={`counter-item `} draggable={false}>\n                    {teacherCounter[Faculty]}\n                  </span>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  )\n}\nexport default TimeTable;"],"sourceRoot":""}