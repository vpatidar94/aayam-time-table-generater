{"version":3,"sources":["pages/TTPages/Mobile/Mobile.js"],"names":["Mobile","_useState","useState","x","y","_useState2","_slicedToArray","position","setPosition","_useState3","_useState4","initialPos","setInitialPos","draggableElement","useRef","useEffect","element","current","dragStart","event","dataTransfer","setData","target","id","dragOver","preventDefault","drop","getData","document","getElementById","appendChild","addEventListener","touchStart","touches","clientX","clientY","touchMove","touchEnd","removeEventListener","_jsxs","_Fragment","children","_jsx","ref","draggable","style","transform","concat","touchAction"],"mappings":"kJAkFeA,UAhFA,WACX,IAAAC,EAAgCC,mBAAS,CAAEC,EAAG,EAAGC,EAAG,IAAIC,EAAAC,YAAAL,EAAA,GAAjDM,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,EAAoCP,mBAAS,CAAEC,EAAG,EAAGC,EAAG,IAAIM,EAAAJ,YAAAG,EAAA,GAArDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAC1BG,EAAmBC,iBAAO,MAsDhC,OApDAC,qBAAU,WACN,IAAMC,EAAUH,EAAiBI,QAG3BC,EAAY,SAACC,GACfA,EAAMC,aAAaC,QAAQ,aAAcF,EAAMG,OAAOC,GAC1D,EACMC,EAAW,SAACL,GACdA,EAAMM,gBACV,EACMC,EAAO,SAACP,GACVA,EAAMM,iBACN,IAAMF,EAAKJ,EAAMC,aAAaO,QAAQ,QAChCd,EAAmBe,SAASC,eAAeN,GACjDJ,EAAMG,OAAOQ,YAAYjB,EAC7B,EACAG,EAAQe,iBAAiB,YAAab,GACtCF,EAAQe,iBAAiB,WAAYP,GACrCR,EAAQe,iBAAiB,OAAQL,GAGjC,IAAMM,EAAa,SAACb,GAChBP,EAAc,CACVT,EAAGgB,EAAMc,QAAQ,GAAGC,QAAU3B,EAASJ,EACvCC,EAAGe,EAAMc,QAAQ,GAAGE,QAAU5B,EAASH,GAE/C,EACMgC,EAAY,SAACjB,GACfA,EAAMM,iBACNjB,EAAY,CACRL,EAAGgB,EAAMc,QAAQ,GAAGC,QAAUvB,EAAWR,EACzCC,EAAGe,EAAMc,QAAQ,GAAGE,QAAUxB,EAAWP,GAEjD,EACMiC,EAAW,WACbzB,EAAcL,EAClB,EAMA,OALAS,EAAQe,iBAAiB,aAAcC,GACvChB,EAAQe,iBAAiB,YAAaK,GACtCpB,EAAQe,iBAAiB,WAAYM,GAG9B,WACHrB,EAAQsB,oBAAoB,YAAapB,GACzCF,EAAQsB,oBAAoB,WAAYd,GACxCR,EAAQsB,oBAAoB,OAAQZ,GACpCV,EAAQsB,oBAAoB,aAAcN,GAC1ChB,EAAQsB,oBAAoB,YAAaF,GACzCpB,EAAQsB,oBAAoB,WAAYD,EAC5C,CACJ,GAAG,CAAC1B,EAAYJ,IAGZgC,eAAAC,WAAA,CAAAC,SAAA,CACIC,cAAA,OACInB,GAAG,YACHoB,IAAK9B,EACL+B,WAAS,EACTC,MAAO,CACHC,UAAU,aAADC,OAAexC,EAASJ,EAAC,QAAA4C,OAAOxC,EAASH,EAAC,OACnD4C,YAAa,QACfP,SACL,YAGDC,cAAA,OAAAD,SACIC,cAAA,KAAAD,SAAG,YAOnB,C","file":"static/js/18.27734a57.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst Mobile = () => {\n    const [position, setPosition] = useState({ x: 0, y: 0 });\n    const [initialPos, setInitialPos] = useState({ x: 0, y: 0 });\n    const draggableElement = useRef(null);\n\n    useEffect(() => {\n        const element = draggableElement.current;\n\n        // Drag events\n        const dragStart = (event) => {\n            event.dataTransfer.setData('text/plain', event.target.id);\n        };\n        const dragOver = (event) => {\n            event.preventDefault();\n        };\n        const drop = (event) => {\n            event.preventDefault();\n            const id = event.dataTransfer.getData('text');\n            const draggableElement = document.getElementById(id);\n            event.target.appendChild(draggableElement);\n        };\n        element.addEventListener('dragstart', dragStart);\n        element.addEventListener('dragover', dragOver);\n        element.addEventListener('drop', drop);\n\n        // Touch events\n        const touchStart = (event) => {\n            setInitialPos({\n                x: event.touches[0].clientX - position.x,\n                y: event.touches[0].clientY - position.y,\n            });\n        };\n        const touchMove = (event) => {\n            event.preventDefault();\n            setPosition({\n                x: event.touches[0].clientX - initialPos.x,\n                y: event.touches[0].clientY - initialPos.y,\n            });\n        };\n        const touchEnd = () => {\n            setInitialPos(position);\n        };\n        element.addEventListener('touchstart', touchStart);\n        element.addEventListener('touchmove', touchMove);\n        element.addEventListener('touchend', touchEnd);\n\n        // Clean up event listeners on component unmount\n        return () => {\n            element.removeEventListener('dragstart', dragStart);\n            element.removeEventListener('dragover', dragOver);\n            element.removeEventListener('drop', drop);\n            element.removeEventListener('touchstart', touchStart);\n            element.removeEventListener('touchmove', touchMove);\n            element.removeEventListener('touchend', touchEnd);\n        };\n    }, [initialPos, position]);\n\n    return (\n        <>\n            <div\n                id='draggable'\n                ref={draggableElement}\n                draggable\n                style={{\n                    transform: `translate(${position.x}px, ${position.y}px)`,\n                    touchAction: 'none',\n                }}\n            >\n                Drag Me\n            </div>\n            <div>\n                <p>HEY</p>\n            </div> \n            \n            \n        \n        </>\n    );\n};\n\nexport default Mobile;\n"],"sourceRoot":""}