{"version":3,"sources":["pages/TTPages/List/List.js","const/url.js","pages/TTPages/TeacherForm/TeacherForm.js","api/tt.api.js.js","pages/TTPages/AddBatch/AddBatch.js","api/upload.api.js","pages/TTPages/TimeTable/TimeTable.js"],"names":["teachers_list","FacultyID","Faculty","subject","batch","BatchID","Batch","CourseID","time","LectureID","Lecture","Time_From","Time_To","BASE_URL","URL","UPLOAD_FILE","GET_UPLOAD_FILE_URL","GET_SAVE_TIMETABLE_URL","GET_ALL_TT","GET_EDIT_TT","AddTeacher","_ref","showModal","setShowModal","useEffect","fetchApiData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_context","prev","next","fetch","sent","json","setApiData","t0","stop","apply","arguments","_useState","useState","_useState2","_slicedToArray","setFaculties","_useState3","_useState4","apiData","_useState5","_useState6","checkedItems","setCheckedItems","_apiData$Object","Object","responseObject","_responseObject$Facul","FacultyList","_responseObject$UserL","UserList","facultyNameMap","forEach","user","UserID","UserName","handleCheckboxChange","event","_event$target","target","name","checked","_objectSpread","_defineProperty","updatedFacultyList","map","faculty","closeModal","_jsx","children","_jsxs","Modal","isOpen","toggle","style","maxWidth","ModalHeader","ModalBody","className","maxHeight","overflowY","listStyle","facultyUser","bgColor","find","facultyName","type","onChange","ModalFooter","Button","color","onClick","newTeachersList","_loop","facultyID","selectedItem","parseInt","some","teacher","push","alert","TtApi","_createClass","_classCallCheck","getTtList","res","method","abrupt","Error","message","options","getEditTt","_callee2","fromDateEdit","myHeaders","_context2","Headers","append","headers","body","JSON","stringify","FromDate","replaceAll","_x","saveTt","_ref3","_callee3","fromDate","toDate","lectureList","sentBatchID","_context3","TimeTableID","Description","DateType","ToDate","ShiftID","SessionID","Session","IsActive","CreatedByUserID","CreatedOnDate","Date","toLocaleString","LectureList","_x2","_x3","_x4","_x5","saveEditedTt","_ref4","_callee4","_context4","_x6","_x7","_x8","_x9","_x10","_x11","_x12","_x13","_x14","_x15","_x16","AddBatch","batchList","setBatches","_responseObject$Batch","newBatches","batchID","UploadApi","getWattsappApi","url","cell","fileName","console","log","URLSearchParams","number","media_url","filename","instance_id","access_token","getWattsappGroupApiTeachers","group_id","getWattsappGroupApiOthers","uplaodFile","file","formData","FormData","getUploadedFile","_callee5","_context5","TimeTable","tableWidth","setTableWidth","draggedCellKey","setDraggedCellKey","duplicateElements","setDuplicateElements","_useState7","_useState8","duplicateDetected","setDuplicateDetected","_useState9","_useState10","setTeacher","_useState11","_useState12","teacherCounter","setTeacherCounter","_useState13","_useState14","teacherAssignment","setTeacherAssignment","_useState15","_useState16","setLectureList","_useState17","_useState18","addBatch","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","setImage","_useState25","_useState26","showAddBatchModal","setShowAddBatchModal","_useState27","_useState28","showAddTeacherModal","setShowAddTeacherModal","_useState29","_useState30","setFromDate","_useState31","_useState32","setToDate","tableElement","document","querySelector","offsetWidth","setTimeout","divRef","useRef","generateUID","firstPart","Math","random","secondPart","toString","slice","convertToImage","canvas","imgData","byteString","mimeString","ia","i","blob","imageName","_data$Object","data","fileDetail","html2canvas","current","toDataURL","atob","split","Uint8Array","length","charCodeAt","Blob","File","reverse","obj","_obj$Title","Title","indexOf","LongURL","t1","dragItem","handleDrop","e","key","_objectSpread2","sourceAssignment","targetAssignment","teacher_assignment","teacherCount","rowId","teacherInCurrentRow","cellKey","startsWith","duplicates","reduce","acc","item","newDuplicateKeys","values","filter","keys","flat","includes","checkForDuplicateInRow","batchId","lectureId","teacherName","batchVo","it","lectureVo","teacherVo","lecture","Subject","lecture_list","_toConsumableArray","allowDrop","ev","t","classList","contains","parentNode","innerText","trim","preventDefault","saveTable","_Fragment","ref","Form","FormGroup","Input","id","value","onChangeFromDate","onChangeToDate","each","b","_teacherAssignment$ke","_teacherAssignment$ke2","_teacherAssignment$ke3","_teacherAssignment$ke4","draggable","onDragOver","onDrop","onDragStart","handleTableCellDragStart","concat","backgroundColor","removeTeacher","RxCross2","index","teacherInfo"],"mappings":"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","file":"static/js/7.f60cc9b1.chunk.js","sourcesContent":["import {v4 as uuidv4} from \"uuid\"\r\nexport const teachers_list = [\r\n        {\r\n            FacultyID: 22,\r\n            Faculty: \"MYK\",\r\n            subject: \"Physics\"\r\n        },\r\n        \r\n        {\r\n            FacultyID: 3038,\r\n            Faculty: \"KPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 2029,\r\n            Faculty: \"MRS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 3051,\r\n            Faculty: \"MAS\",\r\n            subject:\"Physics\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 3050,\r\n            Faculty: \"RSS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 25,\r\n            Faculty: \"NMS\",\r\n            subject:\"Biology\"\r\n        },\r\n        {\r\n            FacultyID: 3037,\r\n            Faculty: \"HDS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3032,\r\n            Faculty: \"MNM\",\r\n            subject: \"Biology\"\r\n        },\r\n        \r\n        {\r\n            FacultyID: 1023,\r\n            Faculty: \"SJ\",\r\n            subject:\"Biology\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 1025,\r\n            Faculty: \"AJ\",\r\n            subject:\"Biology\"\r\n        },\r\n\r\n        {\r\n            FacultyID: 1026,\r\n            Faculty: \"DMPS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n\r\n        \r\n       \r\n        \r\n        {\r\n            FacultyID: 1027,\r\n            Faculty: \"PSJ\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 3033,\r\n            Faculty: \"YBS\",\r\n            subject:\"Biology\"\r\n        },\r\n        {\r\n            FacultyID: 3030,\r\n            Faculty: \"AKS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 2028,\r\n            Faculty: \"AMS\",\r\n            subject:\"Maths\"\r\n        },\r\n        {\r\n            FacultyID: 3031,\r\n            Faculty: \"NDS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 3052,\r\n            Faculty: \"HWS\",\r\n            subject:\"Physics\"\r\n        },\r\n        {\r\n            FacultyID: 1029,\r\n            Faculty: \"JRS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n        {\r\n            FacultyID: 3053,\r\n            Faculty: \"HTS\",\r\n            subject:\"Chemistry\"\r\n        },\r\n    ]; \r\n    \r\n\r\nexport const batch= [\r\n    {\r\n        BatchID: 1,\r\n        Batch: \"A1\",\r\n        CourseID: 3\r\n    },\r\n    {\r\n        BatchID: 6,\r\n        Batch: \"A2\",\r\n        CourseID: 3\r\n    },\r\n    {\r\n        BatchID: 10,\r\n        Batch: \"A3\",\r\n        CourseID: 3\r\n    },\r\n    {\r\n        BatchID: 7,\r\n        Batch: \"A4\",\r\n        CourseID: 3\r\n    },\r\n    {\r\n        BatchID: 3,\r\n        Batch: \"C1\",\r\n        CourseID: 1\r\n    },\r\n    {\r\n        BatchID: 15,\r\n        Batch: \"C2\",\r\n        CourseID: 1\r\n    },\r\n    {\r\n        BatchID: 2,\r\n        Batch: \"B1\",\r\n        CourseID: 2\r\n    },\r\n    {\r\n        BatchID: 3049,\r\n        Batch: \"B2\",\r\n        CourseID: 2\r\n    },\r\n    //MORE BATCHES ADDED WITH A FAKE BATCHID AND FAKE COURSEID NEED TO CHANGE LATER\r\n\r\n    {\r\n        BatchID: 20,\r\n        Batch: \"JO1\",\r\n        CourseID: 13\r\n    },\r\n    {\r\n        BatchID: 3042,\r\n        Batch: \"JXI-1\",\r\n        CourseID: 11\r\n    },\r\n    {\r\n        BatchID: 3061,\r\n        Batch: \"JXI-2\",\r\n        CourseID: 11\r\n    },\r\n    {\r\n        BatchID: 22,\r\n        Batch: \"JXII-1\",\r\n        CourseID: 12\r\n    },\r\n    {\r\n        BatchID: 3079,\r\n        Batch: \"JEE XL\",\r\n        CourseID: 1025\r\n    },\r\n    {\r\n        BatchID: 3078,\r\n        Batch: \"JEE adv\",\r\n        CourseID: 13\r\n    }\r\n]\r\n\r\n\r\nexport const time= [\r\n    {\r\n        LectureID: 1,\r\n        Lecture: \"L1\",\r\n        Time_From: \"08:30 AM\",\r\n        Time_To: \"09:45 AM\"\r\n    },\r\n    {\r\n        LectureID: 2,\r\n        Lecture: \"L2\",\r\n        Time_From: \"09:50 AM\",\r\n        Time_To: \"11:05 AM\"\r\n    },\r\n    {\r\n        LectureID: 3,\r\n        Lecture: \"L3\",\r\n        Time_From: \"11:20 AM\",\r\n        Time_To: \"12:35 PM\"\r\n    },\r\n    {\r\n        LectureID: 4,\r\n        Lecture: \"L4\",\r\n        Time_From: \"12:40 PM\",\r\n        Time_To: \"01:55 PM\"\r\n    },\r\n    {\r\n        LectureID: 5,\r\n        Lecture: \"L5\",\r\n        Time_From: \"02:00 PM\",\r\n        Time_To: \"03:15 PM\"\r\n    },\r\n    {\r\n        LectureID: 6,\r\n        Lecture: \"L6\",\r\n        Time_From: \"03:20 PM\",\r\n        Time_To: \"04:35 PM\"\r\n    },\r\n    {\r\n        LectureID: 7,\r\n        Lecture: \"L7\",\r\n        Time_From: \"04:50 PM\",\r\n        Time_To: \"06:05 PM\"\r\n    },\r\n    {\r\n        LectureID: 8,\r\n        Lecture: \"L8\",\r\n        Time_From: \"06:15 PM\",\r\n        Time_To: \"07:30 PM\"\r\n    }\r\n]\r\n","const ENV_URL = 'https://api.aayamcareerinstitute.co.in/api'; // producation fn\r\nconst DEV_URL = 'http://localhost:5001'; // producation fn\r\nconst BASE_URL= ENV_URL\r\n\r\n\r\n\r\nexport const URL = {\r\n    UPLOAD_FILE: BASE_URL + '/UploadFilesAttachment',\r\n    GET_UPLOAD_FILE_URL: BASE_URL + '/GetFiles', \r\n    GET_SAVE_TIMETABLE_URL: BASE_URL+ '/AddUpdateTimeTable',\r\n    GET_ALL_TT: BASE_URL + '/GetTimeTable', \r\n\r\n    GET_EDIT_TT: BASE_URL + '/GetTimeTableByDate',\r\n\r\n\r\n\r\n};  \r\n","import React, { useState, useEffect } from 'react';\r\nimport { batch } from '../List/List';\r\nimport { teachers_list } from '../List/List';\r\n// import { teachers_list } from '../../../const/teacherList';\r\n// import { batch } from '../../../const/batchList';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport \"./TeacherForm.css\";\r\n\r\nconst AddTeacher = ({ showModal, setShowModal }) => {\r\n\r\n  /************************************Use Effect****************************************** */\r\n  useEffect(() => {\r\n    if (showModal) {\r\n      const fetchApiData = async () => {\r\n        try {\r\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\r\n          const result = await response.json();\r\n          setApiData(result);\r\n        } catch (error) {\r\n        }\r\n      };\r\n\r\n      fetchApiData();\r\n    }\r\n  }, [showModal]);\r\n\r\n  /***********************Use State***************************************************** */\r\n  const [faculties, setFaculties] = useState(teachers_list);\r\n  // const [batches, setBatches] = useState(JSON.parse(localStorage.getItem('batches')) || batch);\r\n  const [apiData, setApiData] = useState({});\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n\r\n  /*************************other consts*************************************************** */\r\n  const { Object: responseObject = {} } = apiData;\r\n  const { Batch = [], FacultyList = [], UserList = [] } = responseObject;\r\n  const facultyNameMap = {};\r\n\r\n  UserList.forEach((user) => {\r\n    facultyNameMap[user.UserID] = user.UserName;\r\n  });\r\n  /****************************************methods******************************************* */\r\n  const handleCheckboxChange = (event) => {\r\n    const { name, checked } = event.target;\r\n    setCheckedItems({\r\n      ...checkedItems,\r\n      [name]: checked,\r\n    });\r\n  };\r\n\r\n  const updatedFacultyList = FacultyList.map((faculty) => ({\r\n    ...faculty,\r\n    Faculty: facultyNameMap[faculty.FacultyID] || faculty.Faculty,\r\n  }));\r\n\r\n  const addToFaculty = () => {\r\n    const newTeachersList = teachers_list;\r\n\r\n    for (const facultyID in checkedItems) {\r\n      if (checkedItems[facultyID]) {\r\n        const selectedItem = updatedFacultyList.find(\r\n          (faculty) => faculty.FacultyID === parseInt(facultyID)\r\n        );\r\n\r\n        if (selectedItem) {\r\n          const facultyUser = UserList.find(\r\n            (user) => user.UserID === selectedItem.FacultyID\r\n          );\r\n          const facultyName = facultyUser ? facultyUser.UserName : selectedItem.Faculty;\r\n\r\n          const isTeacherAlreadyAdded = newTeachersList.some(\r\n            (teacher) => teacher.FacultyID === selectedItem.FacultyID\r\n          );\r\n\r\n          if (!isTeacherAlreadyAdded) {\r\n            newTeachersList.push({\r\n              FacultyID: selectedItem.FacultyID,\r\n              Faculty: facultyName,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    setFaculties(newTeachersList);\r\n    alert(\"faculty added successfully\");\r\n\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  /**********************************************Template to return******************************** */\r\n  return (\r\n    <div>\r\n      <Modal isOpen={showModal} toggle={closeModal} style={{ maxWidth: '320px' }}>\r\n        <ModalHeader toggle={closeModal}>Select Teachers from the list</ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\r\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\r\n              {updatedFacultyList.map((faculty) => {\r\n                const { FacultyID, bgColor, className } = faculty;\r\n                const facultyUser = UserList.find((user) => user.UserID === FacultyID);\r\n                const facultyName = facultyUser ? facultyUser.UserName : faculty.Faculty;\r\n                return (\r\n                  <li key={faculty.FacultyID}>\r\n                    <div className=\"add-faculty-style\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        name={faculty.FacultyID}\r\n                        checked={checkedItems[faculty.FacultyID] || false}\r\n                        onChange={handleCheckboxChange}\r\n                        className=\"addfaculty-checkbox-style\"\r\n                      />\r\n                      {facultyName}\r\n                    </div>\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={addToFaculty}>Add</Button>{' '}\r\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default AddTeacher;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { URL } from '../const/url';\r\n\r\nexport default class TtApi {\r\n    getTtList = async () => {\r\n        try {\r\n            const res = await fetch(URL.GET_ALL_TT, {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\ngetEditTt = async (fromDateEdit) => {\r\n    try {\r\n        // const formData = new FormData();\r\n        // formData.append('file', file, file.name);\r\n        const myHeaders = new Headers();\r\n          myHeaders.append(\"Content-Type\", \"application/json\");\r\n        const res = await fetch(URL.GET_EDIT_TT, {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify({\r\n            FromDate: fromDateEdit.replaceAll(\"-\", \"/\"),\r\n        })});\r\n        const result = await res.json();\r\n        return result;\r\n    } catch (e) {\r\n        throw new Error(e.message, e.options);\r\n    }\r\n}\r\n\r\nsaveTt = async (fromDate,toDate,lectureList,sentBatchID) => {\r\n    try {\r\n        const myHeaders = new Headers();\r\n          myHeaders.append(\"Content-Type\", \"application/json\");\r\n        const res = await fetch(URL.GET_SAVE_TIMETABLE_URL, {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify({\r\n                TimeTableID: 0,\r\n                Description: \"time table save\",\r\n                DateType: \"multiple\",\r\n                FromDate: fromDate,\r\n                ToDate: toDate,\r\n                ShiftID: 1,\r\n                SessionID: 5,\r\n                Session: \"string\",\r\n                // BatchID: [\r\n                //   1, 6, 10, 7, 3, 15, 2, 3049, 20, 3042, 3061, 22, 13, 14\r\n                // ],,\r\n                BatchID:sentBatchID,\r\n                LectureID: [\r\n                  1, 2, 3, 4, 5, 6, 7, 8\r\n                ],\r\n                IsActive: true,\r\n                CreatedByUserID: 1,\r\n                CreatedOnDate: new Date().toLocaleString(),\r\n                LectureList: lectureList\r\n        })});\r\n        const result = await res.json();\r\n        return result;\r\n    } catch (e) {\r\n        throw new Error(e.message, e.options);\r\n    }\r\n}\r\n\r\nsaveEditedTt = async (TimeTableID,DateType,fromDate,toDate,ShiftID,SessionID,Session,sentBatchID,LectureID,CreatedByUserID,lectureList) => {\r\n    try {\r\n        const myHeaders = new Headers();\r\n          myHeaders.append(\"Content-Type\", \"application/json\");\r\n        const res = await fetch(URL.GET_SAVE_TIMETABLE_URL, {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify({\r\n            TimeTableID: 0,\r\n            Description: \"time table save\",\r\n            DateType: \"multiple\",\r\n            FromDate: fromDate,\r\n            ToDate: toDate,\r\n            ShiftID: ShiftID,\r\n            SessionID: SessionID,\r\n            Session: Session,\r\n            BatchID: sentBatchID,\r\n            LectureID: LectureID,\r\n            IsActive: true,\r\n            CreatedByUserID: CreatedByUserID,\r\n            CreatedOnDate: new Date().toLocaleString(),\r\n            LectureList: lectureList\r\n        })});\r\n        const result = await res.json();\r\n        return result;\r\n    } catch (e) {\r\n        throw new Error(e.message, e.options);\r\n    }\r\n}\r\n\r\n}","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { batch } from '../List/List';\r\n// import { batch } from '../../../const/batchList';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport \"./AddBatch.css\"\r\n\r\nconst AddBatch = ({ showModal, setShowModal, batchList }) => {\r\n  /******************************************Use Effect********************************************** */\r\n  useEffect(() => {\r\n    if (showModal) {\r\n      const fetchApiData = async () => {\r\n        try {\r\n          const response = await fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\");\r\n          const result = await response.json();\r\n          setApiData(result);\r\n        } catch (error) {\r\n        }\r\n      };\r\n\r\n      fetchApiData();\r\n\r\n    }\r\n  }, [showModal]);\r\n  /********************************************Use State****************************************** */\r\n  const [batches, setBatches] = useState(batchList);\r\n  const [apiData, setApiData] = useState({});\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n\r\n  /*****************************Other consts******************************************************** */\r\n  const { Object: responseObject = {} } = apiData;\r\n  const { Batch = [] } = responseObject;\r\n\r\n  /***************************************Methods*************************************************** */\r\n  const handleCheckboxChange = (event) => {\r\n    const { name, checked } = event.target;\r\n    setCheckedItems({\r\n      ...checkedItems,\r\n      [name]: checked,\r\n    });\r\n  };\r\n\r\n  const addToBatch = () => {\r\n    const newBatches = batchList;\r\n    for (const batchID in checkedItems) {\r\n      if (checkedItems[batchID]) {\r\n        const selectedItem = Batch.find((batch) => batch.BatchID === parseInt(batchID));\r\n        if (selectedItem && !newBatches.find((batch) => batch.BatchID === selectedItem.BatchID)) {\r\n          newBatches.push({\r\n            BatchID: selectedItem.BatchID,\r\n            Batch: selectedItem.Batch,\r\n            CourseID: selectedItem.CourseID,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    setBatches(newBatches);\r\n    alert(\"batches added successfully\");\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  /***************************Template to return******************************************************* */\r\n  return (\r\n    <div>\r\n      <Modal isOpen={showModal} toggle={closeModal} style={{ maxWidth: '320px' }}>\r\n        <ModalHeader toggle={closeModal}>Select Batches from the list</ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"batch-list-container\" style={{ maxHeight: '300px', overflowY: 'scroll', maxWidth: '300px' }}>\r\n            <ul className=\"batch-list\" style={{ listStyle: 'none' }}>\r\n              {Batch.map((batch) => (\r\n                <li key={batch.BatchID}>\r\n                  <div className=\"add-batch-style\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name={batch.BatchID}\r\n                      checked={checkedItems[batch.BatchID] || false}\r\n                      onChange={handleCheckboxChange}\r\n                      className=\"addbatch-checkbox-style\"\r\n                    />\r\n                    {batch.Batch}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={addToBatch}>Add</Button>{' '}\r\n          <Button color=\"secondary\" onClick={closeModal}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default AddBatch;\r\n\r\n","import { URL } from '../const/url';\r\n\r\nexport default class UploadApi {\r\n    // getUserWalletBalance = async (userId) => {\r\n    //     try {\r\n    //         GlobalEmitterService.emit(true);\r\n    //         const token = `Bearer ${AuthService.getToken()}`;\r\n    //         const res = await fetch(URL.USER_WALLET_BALANCE + '?' + new URLSearchParams({\r\n    //             userId\r\n    //         }), {\r\n    //             method: 'GET',\r\n    //             headers: { 'Content-Type': 'application/json', 'Authorization': token },\r\n    //         });\r\n    //         const result = await res.json();\r\n    //         GlobalEmitterService.emit(false);\r\n    //         return result;\r\n    //     } catch (e) {\r\n    //         GlobalEmitterService.emit(false);\r\n    //         throw new Error(e.message, e.options);\r\n    //     }\r\n    // }\r\n\r\n\r\n    getWattsappApi = async (url, message, cell, fileName) => {\r\n        try {\r\n            console.log(\"url\", url);\r\n            console.log(\"mesage\", message);\r\n            console.log(\"cel\", cell);\r\n            console.log(\"file\", fileName);\r\n            // https://ziper.io/api/send.php?number=917898118503&type=media&message=test%20message&media_url=https://api.aayamcareerinstitute.co.in//Uploads/Files/File_3431223213168.pdf&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/send.php\" + '?' + new URLSearchParams({\r\n                number: cell,\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"6453479F141A2\",\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n\r\n    getWattsappGroupApiTeachers = async (url, message, fileName) => {\r\n        try {\r\n            console.log(\"url\", url);\r\n            console.log(\"mesage\", message);\r\n            console.log(\"file\", fileName);\r\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\r\n                group_id: \"919977116612-1595572006@g.us\",\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"6453479F141A2\",\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getWattsappGroupApiOthers = async (url, message, fileName) => {\r\n        try {\r\n            console.log(\"url\", url);\r\n            console.log(\"mesage\", message);\r\n            console.log(\"file\", fileName);\r\n            //https://ziper.io/api/sendgroupmsg.php?group_id=84987694574-1618740914@g.us&type=media&message=test%20message&media_url=https://i.pravatar.cc&filename=file_test.jpg&instance_id=6453479F141A2&access_token=0a3e27126c2c239bdf7f9128943ef9c0\r\n            const res = await fetch(\"https://ziper.io/api/sendgroupmsg.php\" + '?' + new URLSearchParams({\r\n                group_id: \"919826362001-1628170376@g.us\",\r\n                type: \"media\",\r\n                message: message,\r\n                media_url: \"https://api.aayamcareerinstitute.co.in/\" + url,\r\n                filename: fileName,\r\n                instance_id: \"6453479F141A2\",\r\n                access_token: \"0a3e27126c2c239bdf7f9128943ef9c0\"\r\n\r\n            }), {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    uplaodFile = async (file) => {\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('file', file, file.name);\r\n            const res = await fetch(URL.UPLOAD_FILE, {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getUploadedFile = async () => {\r\n        try {\r\n            const res = await fetch(URL.GET_UPLOAD_FILE_URL, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({})\r\n\r\n            });\r\n            const result = await res.json();\r\n            return result;\r\n        } catch (e) {\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport { batch, teachers_list, time } from '../List/List';\r\n// import { teachers_list } from '../../../const/teacherList';\r\n// import { batch } from '../../../const/batchList';\r\n// import { time } from '../../../const/time';\r\nimport \"./TimeTable.scss\";\r\n// import { RiDeleteBin2Line } from \"react-icons/ri\";\r\n// import htmlToCanvas from 'html-to-canvas';\r\nimport html2canvas from 'html2canvas';\r\nimport { Card, Row, Col, CardTitle, CardBody, Button, Form, FormGroup, Label, Input, FormText, } from \"reactstrap\";\r\nimport AddBatch from '../AddBatch/AddBatch';\r\nimport UploadApi from '../../../api/upload.api';\r\nimport AddTeacher from '../TeacherForm/TeacherForm';\r\nimport TtApi from '../../../api/tt.api.js';\r\n\r\nconst TimeTable = () => {\r\n  /**************************************** Use Effect Section ************************************/\r\n  /**************************************** State Section *****************************************/\r\n  const [tableWidth, setTableWidth] = useState(0);\r\n  const [draggedCellKey, setDraggedCellKey] = useState(null);\r\n  const [duplicateElements, setDuplicateElements] = useState({});\r\n  const [duplicateDetected, setDuplicateDetected] = useState(false);\r\n  const [teacher, setTeacher] = useState({});\r\n  const [teacherCounter, setTeacherCounter] = useState({}); // key: teacherId, value: counter\r\n  const [teacherAssignment, setTeacherAssignment] = useState({});\r\n  const [lectureList, setLectureList] = useState([]);\r\n  const [addBatch, setAddBatch] = useState(null);\r\n  // const [numberList, setNumberList] = useState([918989529107, 917898118503, 918871688429, 918349215747,919826362001,918349215747,917314058393,917869597239,919977116612,918085390900,918302184021,918358810742,919893640561,919713519598,919713030834,919827274005,919691938832,917043127836,919977711607,917298519996,919713191848,918871841238,917007794323,919669889020,918770153381]);\r\n  const [numberList, setNumberList] = useState([917898118503]);\r\n  const [batchList, setBatchList] = useState(batch);\r\n  const [image, setImage] = useState(null);   //  for div to image conversion\r\n  const [showAddBatchModal, setShowAddBatchModal] = useState(false); //for add Batch popup\r\n  const [showAddTeacherModal, setShowAddTeacherModal] = useState(false);\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n\r\n  /**************************************** Use Effect Section ************************************/\r\n  useEffect(() => {\r\n    const tableElement = document.querySelector('.table-style');\r\n    if (tableElement) {\r\n      const tableWidth = tableElement.offsetWidth;\r\n      setTableWidth(tableWidth);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (duplicateDetected) {\r\n      alert('Two same teachers found in the same row');\r\n      setDuplicateDetected(false);\r\n      setTimeout(() => {\r\n        setDuplicateElements({});\r\n      }, 3000); // Blink duration\r\n    }\r\n  }, [duplicateDetected]);\r\n\r\n  useEffect(() => {\r\n    if (duplicateDetected) {\r\n      // alert('Two same teachers found in the same row');   \r\n      setDuplicateDetected(false);\r\n    }\r\n  }, [duplicateDetected]);\r\n  /***************************************other const section*********************************** */\r\n  const divRef = useRef(null);\r\n  const color = [\"#D4E6F1\", \"#E8DAEF\", \"#008080\", \"#808000\", \"#C39BD3\", \"#76D7C4\", \"#3498DB\", \"#358b79\", \"#847f86\", \"rgb(251, 235, 9)\", \"#CA6F1E\", \"#CCCCFF\", \"#F4D03F\", \"rgb(199, 185, 84)\", \"#979A9A\", \"#F0B27A\", \"rgb(117, 98, 179)\", \"#CD5C5C\", \"#40E0D0\", \"#DAF7A6\", \"#008080\", \"#808000\", \"#FADBD8\", \"green\", \"yellow\", \"white\", \"red\", \"pink\"]\r\n  /**************************************** Component Method Section *********************************/\r\n\r\n  const generateUID = () => {\r\n    // I generate the UID from two parts here \r\n    // to ensure the random number provide enough bits.\r\n    var firstPart = (Math.random() * 46656) | 0;\r\n    var secondPart = (Math.random() * 46656) | 0;\r\n    firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\r\n    secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\r\n    return firstPart + secondPart;\r\n  }\r\n  const convertToImage = async () => {\r\n    // alert(\"Time table image sent successfully\")\r\n    const canvas = await html2canvas(divRef.current);\r\n    const imgData = canvas.toDataURL();\r\n    setImage(imgData);\r\n    /*converting page64 url got as imgData into file Object by using blob below*/\r\n    const byteString = atob(imgData.split(',')[1]);\r\n    const mimeString = imgData.split(',')[0].split(':')[1].split(';')[0];\r\n    const ia = new Uint8Array(byteString.length);\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n    }\r\n    const blob = new Blob([ia], { type: mimeString });\r\n    const imageName = generateUID();\r\n    const file = new File([blob], imageName + \".jpg\");\r\n    const fileName = imageName + \".jpg\";\r\n    const result = await new UploadApi().uplaodFile(file);\r\n    if (result === \"Success\") {\r\n      const data = await new UploadApi().getUploadedFile();\r\n      if (data.Object?.length > 0) {\r\n        const fileDetail = data.Object.reverse().find(obj => { return obj.Title?.indexOf(imageName) >= 0 });\r\n        // for (let i = 0; i < numberList.length; i++) {       THIS IS USED WHEN GETWATTSAPPAPI WILL USED SO DONT DELETE THIS LINES\r\n        try {\r\n          // const cell = numberList[i];\r\n          /*CHECK THE DETAILS OF THIS GETWATTSAPPAPI IN UPLOAD.API.JS FILE IN API FOLDER*/\r\n          // await new UploadApi().getWattsappApi(fileDetail.LongURL, \"time table\", cell, fileName);\r\n          await new UploadApi().getWattsappGroupApiOthers(fileDetail.LongURL, \"time table\", fileName);\r\n          // await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\r\n        } catch (e) {\r\n          // continue;\r\n          console.log(\"error\")\r\n        }\r\n        try {\r\n          await new UploadApi().getWattsappGroupApiTeachers(fileDetail.LongURL, \"time table\", fileName);\r\n        } catch (e) {\r\n          console.log(\"error\")\r\n        }\r\n      }\r\n    }\r\n    alert(\"Time table image sent successfully\")\r\n  }\r\n  const dragItem = teacher;\r\n  const dragStart = (e, teacherInfo) => {\r\n    dragItem.current = teacherInfo;\r\n    console.log(teacherInfo)\r\n  };\r\n  const handleTableCellDragStart = (e, key) => {\r\n    setDraggedCellKey(key);\r\n  };\r\n  const checkForDuplicateInRow = (key) => {\r\n    const rowId = key.split('_')[0];\r\n    const teacherInCurrentRow = [];\r\n    for (const cellKey in teacherAssignment) {\r\n      if (cellKey.startsWith(rowId)) {\r\n        teacherInCurrentRow.push({\r\n          key: cellKey,\r\n          teacher: teacherAssignment[cellKey].teacher,\r\n        });\r\n      }\r\n    }\r\n    const duplicates = teacherInCurrentRow.reduce((acc, item) => {\r\n      if (acc[item.teacher]) {\r\n        acc[item.teacher].push(item.key);\r\n      } else {\r\n        acc[item.teacher] = [item.key];\r\n      }\r\n      return acc;\r\n    }, {});\r\n    const newDuplicateKeys = Object.values(duplicates)\r\n      .filter((keys) => keys.length > 1)\r\n      .flat();\r\n    const oldDuplicateKeys = Object.keys(duplicateElements);\r\n    const isNewDuplicate = !oldDuplicateKeys.includes(key) && newDuplicateKeys.includes(key);\r\n    if (isNewDuplicate) {\r\n      setDuplicateDetected(true);\r\n      setDuplicateElements(\r\n        newDuplicateKeys.reduce((acc, key) => {\r\n          acc[key] = true;\r\n          return acc;\r\n        }, {})\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e, key) => {\r\n    console.log(key)\r\n    console.log(\"jjjjj\", teacherAssignment)\r\n    console.log(\"drag cell key\", draggedCellKey);\r\n    if (draggedCellKey) {\r\n      // Move table item\r\n      const sourceAssignment = teacherAssignment[draggedCellKey];\r\n      const targetAssignment = teacherAssignment[key];\r\n      setTeacherAssignment({\r\n        ...teacherAssignment,\r\n        [draggedCellKey]: targetAssignment,\r\n        [key]: sourceAssignment,\r\n      });\r\n      setDraggedCellKey(null);\r\n    } else {\r\n      // Assign teacher to the cell\r\n      const teacher_assignment = teacherAssignment;\r\n      teacherAssignment[key] = dragItem.current;\r\n      setTeacherAssignment({ ...teacher_assignment });\r\n      setTeacher({});\r\n      const teacherCount = teacherCounter;\r\n      if (!teacherCount[dragItem.current.teacher]) {\r\n        teacherCount[dragItem.current.teacher] = 1;\r\n      } else {\r\n        teacherCount[dragItem.current.teacher] += 1;\r\n      }\r\n      setTeacherCounter({ ...teacherCount });\r\n      checkForDuplicateInRow(key);\r\n\r\n      const teacher = teacherAssignment[key];\r\n      const batchId = key.split(\"_\")[1];\r\n      const lectureId = key.split(\"_\")[0];\r\n      const teacherName = teacher.teacher;\r\n\r\n      const batchVo = batch.find(it => it.BatchID == batchId);\r\n      console.log('xxxx xx xx teacher ', teacher);\r\n      console.log('xxxx xx xx batchId ', batchId);\r\n      console.log('xxxx xx xx lectureId', lectureId);\r\n      console.log('xxxx xx xx teacherAssignment', teacherAssignment);\r\n      // making lectureVO \r\n      const lectureVo = time.find(it => it.LectureID == lectureId);\r\n      const teacherVo = teachers_list.find(it => it.Faculty == teacherName)\r\n      console.log(\"iiii\", teacherVo)\r\n\r\n      const lecture = {};\r\n      lecture.ID = \"0\"\r\n      lecture.TimeTableID = \"0\";\r\n      lecture.LectureName = \"\";\r\n      lecture.Batch = batchVo;\r\n      lecture.Lecture = lectureVo;\r\n      lecture.Subject = teacherVo.subject;\r\n      lecture.FacultyID = teacherVo.FacultyID;\r\n      lecture.IsActive = true;\r\n      lecture.CreatedByUserID = \"1\";\r\n      lecture.CreatedOnDate = \"02/05/2023\";\r\n      console.log(\"fff\", lecture);\r\n      console.log(\"zzzz\", teacher)\r\n\r\n      const lecture_list = lectureList;\r\n      lecture_list.push(lecture);\r\n      setLectureList([...lecture_list])\r\n      /* THIS LECTURE LIST WILL BE USED BELOW IN THE CONST SAVETABLE() METHOD FROM WHERE WE SEND IT TO DATABASE THROUGH API WRITTEN IN SAVETABLE() METHOD*/\r\n    }\r\n  }\r\n  const allowDrop = (ev) => {\r\n    let t = ev.target;\r\n    while (t && (!t.classList || !t.classList.contains(\"each-block\"))) {\r\n      t = t.parentNode;\r\n    }\r\n    if (t && t.innerText.trim() !== \"\") {\r\n      // Prevent drop event if cell is not empty\r\n      return false;\r\n    }\r\n    ev.preventDefault();\r\n  };\r\n  const removeTeacher = (key) => {\r\n    const teacher_assignment = teacherAssignment;\r\n    setTeacherAssignment({ ...teacher_assignment });\r\n    setTeacher({});\r\n    const teacherCount = teacherCounter;\r\n    if ([teacherAssignment[key].teacher]) {\r\n      teacherCount[teacherAssignment[key].teacher] -= 1;\r\n    }\r\n    delete teacherAssignment[key].teacher;\r\n    delete teacherAssignment[key].color;\r\n    setTeacherCounter(teacherCount);\r\n  }\r\n  const onChangeFromDate = (e) => {\r\n    setFromDate(e.target.value);\r\n  }\r\n  const onChangeToDate = (e) => {\r\n    setToDate(e.target.value);\r\n  }\r\n  const onAddBatch = () => {\r\n    // setAddBatch(<AddBatch batchList={batchList} />)\r\n    setShowAddBatchModal(true);\r\n  }\r\n  \r\n  const onAddTeacher = () => {\r\n    setShowAddTeacherModal(true);\r\n  }\r\n  const saveTable = async() => {\r\n    const result = await new TtApi().saveTt(fromDate,toDate,lectureList);\r\n    console.log(\"mmmm\",result);\r\n    alert(\"time table saved successfully\");\r\n  };\r\n  /**************************************** Template Section *****************************************/\r\n  return (\r\n    <>\r\n      <div className=\"bg-container\">\r\n        <h1 className='heading-style'>CLASS SCHEDULE</h1>\r\n        <div className=\"button-group added-style\">\r\n          <Button className=\"btn \" color=\"info\" onClick={onAddBatch}>\r\n            Add Batches\r\n          </Button>\r\n          {showAddBatchModal && <AddBatch showModal={showAddBatchModal} setShowModal={setShowAddBatchModal} />}\r\n          {addBatch}\r\n          <Button className=\"btn\" color=\"info\" onClick={onAddTeacher}>\r\n            Add Teachers\r\n          </Button>\r\n          {showAddTeacherModal && <AddTeacher showModal={showAddTeacherModal} setShowModal={setShowAddTeacherModal} />}\r\n          <Button className=\"btn\" color=\"info\" onClick={saveTable}>\r\n            Save\r\n          </Button>\r\n          <Button className=\"btn\" color=\"info\" onClick={convertToImage}>\r\n            Post\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <div ref={divRef}>\r\n            <br />\r\n            <Form >\r\n              <div className='time-table-date-style'>\r\n                <FormGroup className=\"label-date-allignment\">\r\n                  <p>From:</p>\r\n                  <Input\r\n                    id=\"fromDate\"\r\n                    name=\"date\"\r\n                    type=\"date\"\r\n                    onChange={(e) => { onChangeFromDate(e) }}\r\n                    className='input-size'\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup className=\"label-date-allignment\">\r\n                  <p>To:</p>\r\n                  <Input\r\n                    id=\"toDate\"\r\n                    name=\"date\"\r\n                    type=\"date\"\r\n                    onChange={(e) => { onChangeToDate(e) }}\r\n                    className='input-size'\r\n\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </Form>\r\n            <table className='table-style'>\r\n              <tbody>\r\n                <div className=\"for-time\">\r\n                  <tr>\r\n                    <td className='F-style time-style'>Time</td>\r\n                    {batch.map((each) => {\r\n                      return (\r\n                        <td className='F-style batch-style' key={batch.BatchID}>{each.Batch}</td>\r\n                      )\r\n                    })}\r\n                  </tr>\r\n                </div>\r\n                <tr >\r\n                  {time.map((t) => {\r\n                    return (\r\n                      <div >\r\n                        <td className='F-style time-style'>{t.Time_From}-{t.Time_To}</td>\r\n                        {batchList.map((b) => {\r\n                          const key = t.LectureID + '_' + b.BatchID\r\n                          return (\r\n                            <td\r\n                              draggable={true}\r\n                              onDragOver={allowDrop}\r\n                              onDrop={(e) => handleDrop(e, key)}\r\n                              onDragStart={(e) => teacherAssignment[key] && handleTableCellDragStart(e, key)}\r\n                              key={key}\r\n                              id={key}\r\n                              className={`each-block ${duplicateElements[key] ? \"blink\" : \"\"}`}\r\n                              style={{ backgroundColor: teacherAssignment[key]?.color }}\r\n                            // className={`each-block ${duplicateElements[key]}`}\r\n                            >\r\n                              {teacherAssignment[key] && (\r\n                                <div className={`teacname-cross-style ${teacherAssignment[key]?.className} `}>\r\n                                  <div className=\"teacher-name\" >\r\n                                    {teacherAssignment[key]?.teacher}\r\n                                  </div>\r\n                                  <div className=\"cross-btn-container\">\r\n                                    {teacherAssignment[key]?.teacher ? (\r\n                                      <button\r\n                                        className=\"cross-style\"\r\n                                        onClick={() => removeTeacher(key)}\r\n                                      >\r\n                                        {/* <RiDeleteBin2Line /> */}\r\n                                        <RxCross2 />\r\n                                      </button>\r\n                                    ) : (\r\n                                      ''\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </td>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <br />\r\n            {/* <button onClick={onAddBatch}>+</button>\r\n            {addBatch} */}\r\n          </div>\r\n\r\n          {/* {image && <img src={image} alt=\"table\" style={{ maxWidth: tableWidth }} />} */}\r\n          {/* <button onClick={saveTable}>Save</button> */}\r\n        </div>\r\n        <div className='teacher-container' style={{ maxWidth: tableWidth }}>\r\n          {teachers_list.map((teacher, index) => {\r\n            const { FacultyID, Faculty } = teacher;\r\n            return (\r\n              <div\r\n                style={{ maxWidth: tableWidth, backgroundColor: color[index % color.length] }}\r\n                key={FacultyID}\r\n                className=\"teacher-item\"\r\n                draggable={true}\r\n                onDragStart={(e) => dragStart(e, { teacher: Faculty, color: color[index % color.length] })}\r\n              >\r\n                <h3>{Faculty}</h3>\r\n                {teacherCounter[Faculty] > 0 && (\r\n                  <span className={`counter-item `} draggable={false}>\r\n                    {teacherCounter[Faculty]}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default TimeTable;"],"sourceRoot":""}