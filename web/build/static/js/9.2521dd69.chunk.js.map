{"version":3,"sources":["pages/TTPages/List/List.js","pages/TTPages/AddBatch/AddBatch.js","const/color.const.js","pages/TTPages/TimeTableV2/TimeTableV2.js"],"names":["teachers_list","batch","time","AddBatch","console","log","_useState","useState","_useState2","_slicedToArray","batches","setBatches","_useState3","_useState4","apiData","setApiData","_useState5","_useState6","checkedItems","setCheckedItems","handleCheckboxChange","event","_event$target","target","name","checked","_objectSpread","_defineProperty","_apiData$Object","Object","_responseObject$Batch","Batch","_jsxs","children","_jsx","onClick","fetch","method","redirect","then","response","json","result","catch","error","style","listStyle","map","type","BatchID","onChange","newBatches","_loop","batchID","selectedItem","find","parseInt","push","CourseID","COLORS","TimeTableV2","useEffect","tableElement","document","querySelector","tableWidth","offsetWidth","setTableWidth","draggedTeacher","setDraggedTeacher","lectureList","setLectureList","_useState7","_useState8","teacherAssignment","setTeacherAssignment","_useState9","_useState10","teacherCounter","setTeacherCounter","_useState11","_useState12","lectureTeacherCounter","setLectureTeacherCounter","_useState13","_useState14","duplicateTeacherDetectedInRow","setDuplicateTeacherDetectedInRow","_useState15","_useState16","draggedCellKey","setDraggedCellKey","_useState17","_useState18","_useState19","_useState20","divRef","useRef","dragStart","e","teacherDragged","allowDrop","ev","t","classList","contains","parentNode","innerText","trim","preventDefault","handleDrop","lecture","selectedTeacher","keyInside","LectureID","removeTeacher","FacultyID","teacher","stateTeacherAssignment","key","stateLectureList","lectureDto","Lecture","Subject","subject","IsActive","CreatedByUserID","CreatedOnDate","_toConsumableArray","updateLectureListOnDrop","lectureId","teacherId","stateLectureTeacherCounter","setTimeout","checkDuplicateTeacherInRowOnDrop","batchId","index","row","_row$batch","_row$lecture","splice","stateTeacherCounter","isTeacherDuplicateInLecture","_Fragment","className","Alert","color","ref","each","Time_From","Time_To","b","_teacherAssignment$ke","_teacherAssignment$ke2","_teacherAssignment$ke3","_teacherAssignment$ke4","_teacherAssignment$ke5","_teacherAssignment$ke6","draggable","onDragOver","onDrop","onDragStart","id","concat","backgroundColor","Faculty","RxCross2","maxWidth","onDragEnd","onTouchStart","onTouchMove","x","touches","clientX","y","clientY","elem","elementFromPoint","alert"],"mappings":"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","file":"static/js/9.2521dd69.chunk.js","sourcesContent":["import {v4 as uuidv4} from \"uuid\"\n\n\n\n// export const teachers_list = [\n// {name:'MYK',\n// className:\"style-faculty\",\n// bgColor:\"bg-myk\",\n// bg:\"blue\"\n// },\n\n// {name:'KPS',\n// className:\"style-faculty\",\n// bgColor:\"bg-kps\"\n// },\n\n// {name:'MRS',\n// className:\"style-faculty\",\n// bgColor:\"bg-mrs\"\n// },\n\n// {name:'MAS',\n// className:\"style-faculty\",\n// bgColor:\"bg-mas\"\n// },\n\n// {name:'RSS',\n// className:\"style-faculty\",\n// bgColor:\"bg-rss\"\n// },\n\n// {name:'NMS',\n// className:\"style-faculty\",\n// bgColor:\"bg-nms\"\n// },\n\n// {name:'HDS',\n// className:\"style-faculty\",\n// bgColor:\"bg-hds\"\n// },\n\n// {name:'MNM',\n// className:\"style-faculty\",\n// bgColor:\"bg-mnm\"\n// },\n\n// {name:'SJ',\n// className:\"style-faculty\",\n// bgColor:\"bg-sj\"},\n\n// {name:'AJ',\n// className:\"style-faculty\",\n// bgColor:\"bg-aj\"\n// },\n\n// {name:'DMPS',\n// className:\"style-faculty\",\n// bgColor:\"bg-dmps\"\n// },\n\n// {name:'PSJ',\n// className:\"style-faculty\",\n// bgColor:\"bg-psj\"\n// },\n\n// {name:'YBS',\n// className:\"style-faculty\",\n// bgColor:\"bg-ybs\"\n// },\n\n// {name:'AKS',\n// className:\"style-faculty\",\n// bgColor:\"bg-aks\"},\n\n// {name:'AMS',\n// className:\"style-faculty\",\n// bgColor:\"bg-ams\"},\n\n\n\n// ]; \n\n\n\nexport const teachers_list = [\n        {\n            \"FacultyID\": 1,\n            \"Faculty\": \"MYK\",\n            \"subject\": \"Physics\"\n        },\n        \n        {\n            \"FacultyID\": 2,\n            \"Faculty\": \"KPS\",\n            \"subject\":\"Chemistry\"\n        },\n\n        {\n            \"FacultyID\": 3,\n            \"Faculty\": \"MRS\",\n            \"subject\":\"Chemistry\"\n        },\n\n        {\n            \"FacultyID\": 4,\n            \"Faculty\": \"MAS\",\n            \"subject\":\"Physics\"\n        },\n\n        {\n            \"FacultyID\": 5,\n            \"Faculty\": \"RSS\",\n            \"subject\":\"Physics\"\n        },\n        {\n            \"FacultyID\": 6,\n            \"Faculty\": \"NMS\",\n            \"subject\":\"Biology\"\n        },\n        {\n            \"FacultyID\": 7,\n            \"Faculty\": \"HDS\",\n            \"subject\":\"Chemistry\"\n        },\n        {\n            \"FacultyID\": 8,\n            \"Faculty\": \"MNM\",\n            \"subject\": \"Biology\"\n        },\n        \n        {\n            \"FacultyID\": 9,\n            \"Faculty\": \"SJ\",\n            \"subject\":\"Biology\"\n        },\n\n        {\n            \"FacultyID\": 10,\n            \"Faculty\": \"AJ\",\n            \"subject\":\"Biology\"\n        },\n\n        {\n            \"FacultyID\": 11,\n            \"Faculty\": \"DMPS\",\n            \"subject\":\"Chemistry\"\n        },\n\n        \n       \n        \n        {\n            \"FacultyID\": 12,\n            \"Faculty\": \"PSJ\",\n            \"subject\":\"Physics\"\n        },\n        {\n            \"FacultyID\": 13,\n            \"Faculty\": \"YBS\",\n            \"subject\":\"Biology\"\n        },\n        {\n            \"FacultyID\": 14,\n            \"Faculty\": \"AKS\",\n            \"subject\":\"Chemistry\"\n        },\n        {\n            \"FacultyID\": 15,\n            \"Faculty\": \"AMS\",\n            \"subject\":\"Maths\"\n        },\n        {\n            \"FacultyID\": 16,\n            \"Faculty\": \"NDS\",\n            \"subject\":\"Physics\"\n        },\n        {\n            \"FacultyID\": 17,\n            \"Faculty\": \"HWS\",\n            \"subject\":\"Physics\"\n        },\n        {\n            \"FacultyID\": 18,\n            \"Faculty\": \"JRS\",\n            \"subject\":\"Chemistry\"\n        },\n        {\n            \"FacultyID\": 19,\n            \"Faculty\": \"HTS\",\n            \"subject\":\"Chemistry\"\n        },\n    ]; \n    \n\n\n// PREVIOUS BATACH LIST\n// export const batch = [\n//     {id:uuidv4(),\n//     batchname:'A1'},\n//     {id:uuidv4(),\n//     batchname:'A2'},\n//     {id:uuidv4(), \n//     batchname:'CRASH E'},\n//     {id:uuidv4() ,\n//     batchname:'CRASH H'},\n//     {id:uuidv4(),\n//     batchname:'ONLINE'},\n//     {id:uuidv4(),\n//     batchname:'A14'},\n//     {id:uuidv4(),\n//     batchname:'JEE EX'},\n//     {id:uuidv4(),\n//     batchname:'JEE12'},\n    \n// ];\n\n\nexport const batch= [\n    {\n        \"BatchID\": 1,\n        \"Batch\": \"A1\",\n        \"CourseID\": 1\n    },\n    {\n        \"BatchID\": 2,\n        \"Batch\": \"A2\",\n        \"CourseID\": 2\n    },\n    {\n        \"BatchID\": 3,\n        \"Batch\": \"A3\",\n        \"CourseID\": 3\n    },\n    {\n        \"BatchID\": 4,\n        \"Batch\": \"A4\",\n        \"CourseID\": 4\n    },\n    {\n        \"BatchID\": 5,\n        \"Batch\": \"C1\",\n        \"CourseID\": 5\n    },\n    {\n        \"BatchID\": 6,\n        \"Batch\": \"C2\",\n        \"CourseID\": 6\n    },\n    {\n        \"BatchID\": 7,\n        \"Batch\": \"B1\",\n        \"CourseID\": 7\n    },\n    {\n        \"BatchID\": 8,\n        \"Batch\": \"B2\",\n        \"CourseID\": 8\n    },\n    //MORE BATCHES ADDED WITH A FAKE BATCHID AND FAKE COURSEID NEED TO CHANGE LATER\n\n    {\n        \"BatchID\": 9,\n        \"Batch\": \"JO1\",\n        \"CourseID\": 9\n    },\n    {\n        \"BatchID\": 10,\n        \"Batch\": \"JXI-1\",\n        \"CourseID\": 10\n    },\n    {\n        \"BatchID\": 11,\n        \"Batch\": \"JXI-2\",\n        \"CourseID\": 11\n    },\n    {\n        \"BatchID\": 12,\n        \"Batch\": \"JXII-1\",\n        \"CourseID\": 12\n    },\n    {\n        \"BatchID\": 13,\n        \"Batch\": \"JEXL\",\n        \"CourseID\": 13\n    },\n    {\n        \"BatchID\": 14,\n        \"Batch\": \"JEE Adv\",\n        \"CourseID\": 14\n    }\n]\n\n\n\nexport const time= [\n    {\n        \"LectureID\": 1,\n        \"Lecture\": \"L1\",\n        \"Time_From\": \"08:30 AM\",\n        \"Time_To\": \"09:45 AM\"\n    },\n    {\n        \"LectureID\": 2,\n        \"Lecture\": \"L2\",\n        \"Time_From\": \"09:50 AM\",\n        \"Time_To\": \"11:05 AM\"\n    },\n    {\n        \"LectureID\": 3,\n        \"Lecture\": \"L3\",\n        \"Time_From\": \"11:20 AM\",\n        \"Time_To\": \"12:35 PM\"\n    },\n    {\n        \"LectureID\": 4,\n        \"Lecture\": \"L4\",\n        \"Time_From\": \"12:40 PM\",\n        \"Time_To\": \"01:55 PM\"\n    },\n    {\n        \"LectureID\": 5,\n        \"Lecture\": \"L5\",\n        \"Time_From\": \"02:00 PM\",\n        \"Time_To\": \"03:15 PM\"\n    },\n    {\n        \"LectureID\": 6,\n        \"Lecture\": \"L6\",\n        \"Time_From\": \"03:20 PM\",\n        \"Time_To\": \"04:35 PM\"\n    },\n    {\n        \"LectureID\": 7,\n        \"Lecture\": \"L7\",\n        \"Time_From\": \"04:50 PM\",\n        \"Time_To\": \"06:05 PM\"\n    },\n    {\n        \"LectureID\": 8,\n        \"Lecture\": \"L8\",\n        \"Time_From\": \"06:15 PM\",\n        \"Time_To\": \"07:30 PM\"\n    }\n]\n\n\n\n//PREVIOUS TIME LIST\n\n// export const time = [\n//     {id:uuidv4(),\n//     classtime:'08:30-09:45 AM'},\n//     {id:uuidv4(),\n//     classtime:'09:50-11:05 AM'},\n//     {id:uuidv4(),\n//     classtime: '11:20-12:35 PM'},\n//     {id:uuidv4(),\n//     classtime:'12:40-01:55 PM'},\n//     {id:uuidv4(),\n//     classtime:'02:00-03:15 PM'},\n//     {id:uuidv4(),\n//     classtime:'03:20-04:35 PM'},\n//     {id:uuidv4(),\n//     classtime:'04:50-06:05 PM'},\n//     {id:uuidv4(),\n//     classtime:'06:15-07:30 PM'}];\n\n    ","// // import React, { useState } from 'react'\n// // import {\n// //     Card,\n// //     Row,\n// //     Col,\n// //     CardTitle,\n// //     CardBody,\n// //     Button,\n// //     Form,\n// //     FormGroup,\n// //     Label,\n// //     Input,\n// //     FormText,\n// //   } from \"reactstrap\";\n  \n// //   const AddBatch = () => {\n// //     const[addBatch,setAddBatch]=useState(null)\n\n// // const onChangeBatch=(e,key)=>{\n// //     key=e.target.name;\n// //     setAddBatch(e.target.value);\n// //     console.log(\"teacher is added\")\n// // }\n// // const onAddBatch=()=>{\n// // alert(\"the batch will be added as per api call\")\n// // }\n\n\n// //     return (\n// //       <Row>\n// //         <Col>\n// //           {/* --------------------------------------------------------------------------------*/}\n// //           {/* Card-1*/}\n// //           {/* --------------------------------------------------------------------------------*/}\n// //           <Card>\n// //             <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\n// //               {/* <i className=\"bi bi-bell me-2\"> </i> */}\n// //               Add Batch\n// //             </CardTitle>\n// //             <CardBody>\n// //               <Form>\n// //                 <FormGroup>\n// //                   <Label for=\"batchname\">Batch Name</Label>\n// //                   <Input\n// //                     id=\"batchname\"\n// //                     name=\"batchname\"\n// //                     placeholder=\"Write Batch Name\"\n// //                     type=\"text\"\n                    \n// //                     onChange={onChangeBatch}\n                    \n// //                   />\n// //                 </FormGroup>\n// //                 {/* <FormGroup>\n// //                   <Label for=\"bgcolor\">Background Color</Label>\n// //                   <Input\n// //                     id=\"bgcolor\"\n// //                     name=\"color\"\n// //                     placeholder=\"add color\"\n// //                     type=\"color\"\n// //                   />\n// //                 </FormGroup> */}\n// //                 {/* <FormGroup>\n// //                   <Label for=\"exampleSelect\">Select</Label>\n// //                   <Input id=\"exampleSelect\" name=\"select\" type=\"select\">\n// //                     <option>1</option>\n// //                     <option>2</option>\n// //                     <option>3</option>\n// //                     <option>4</option>\n// //                     <option>5</option>\n// //                   </Input>\n// //                 </FormGroup>\n// //                 <FormGroup>\n// //                   <Label for=\"exampleSelectMulti\">Select Multiple</Label>\n// //                   <Input\n// //                     id=\"exampleSelectMulti\"\n// //                     multiple\n// //                     name=\"selectMulti\"\n// //                     type=\"select\"\n// //                   >\n// //                     <option>1</option>\n// //                     <option>2</option>\n// //                     <option>3</option>\n// //                     <option>4</option>\n// //                     <option>5</option>\n// //                   </Input>\n// //                 </FormGroup>\n// //                 <FormGroup>\n// //                   <Label for=\"exampleText\">Text Area</Label>\n// //                   <Input id=\"exampleText\" name=\"text\" type=\"textarea\" />\n// //                 </FormGroup>\n// //                 <FormGroup>\n// //                   <Label for=\"exampleFile\">File</Label>\n// //                   <Input id=\"exampleFile\" name=\"file\" type=\"file\" />\n// //                   <FormText>\n// //                     This is some placeholder block-level help text for the above\n// //                     input. It's a bit lighter and easily wraps to a new line.\n// //                   </FormText>\n// //                 </FormGroup>\n// //                 <FormGroup tag=\"fieldset\">\n// //                   <legend>Radio Buttons</legend>\n// //                   <FormGroup check>\n// //                     <Input name=\"radio1\" type=\"radio\" />{\" \"}\n// //                     <Label check>\n// //                       Option one is this and that—be sure to include why it's\n// //                       great\n// //                     </Label>\n// //                   </FormGroup>\n// //                   <FormGroup check>\n// //                     <Input name=\"radio1\" type=\"radio\" />{\" \"}\n// //                     <Label check>\n// //                       Option two can be something else and selecting it will\n// //                       deselect option one\n// //                     </Label>\n// //                   </FormGroup>\n// //                   <FormGroup check disabled>\n// //                     <Input disabled name=\"radio1\" type=\"radio\" />{\" \"}\n// //                     <Label check>Option three is disabled</Label>\n// //                   </FormGroup>\n// //                 </FormGroup>\n// //                 <FormGroup check>\n// //                   <Input type=\"checkbox\" /> <Label check>Check me out</Label>\n// //                 </FormGroup> */}\n// //                 <Button onClick={onAddBatch}>Submit</Button>\n// //               </Form>\n// //             </CardBody>\n// //           </Card>\n// //         </Col>\n// //       </Row>\n// //     );\n// //   };\n  \n// //   export default AddBatch;\n  \n// import React, { useState } from 'react';\n// // import { batch } from '../List/List';\n// import { batch as initialBatch } from '../List/List';\n\n// // export const batch = [\n// //   // ... (the initial array content)\n// // ];\n\n// const AddBatch = () => {\n//   const [batches, setBatches] = useState();\n//   const [apiData, setApiData] = useState({});\n//   const [newBatch, setNewBatch] = useState({\n//     BatchID: '',\n//     Batch: '',\n//     CourseID: '',\n//   });\n\n\n//   const [checkedItems, setCheckedItems] = useState({});\n\n//   const handleCheckboxChange = (event) => {\n//     const { name, checked } = event.target;\n//     setCheckedItems({\n//       ...checkedItems,\n//       [name]: checked,\n//     });\n//   };\n\n//   const handleChange = (event) => {\n//     const { name, value } = event.target;\n//     setNewBatch({\n//       ...newBatch,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleClick = () => {\n//     setBatches([...batches, newBatch]);\n//     setNewBatch({\n//       BatchID: '',\n//       Batch: '',\n//       CourseID: '',\n//     });\n//   };\n\n\n//   const addToBatch = () => {\n//     const newBatches = [...initialBatch];\n//     for (const batchID in checkedItems) {\n//       if (checkedItems[batchID]) {\n//         const selectedItem = Batch.find((batch) => batch.BatchID === parseInt(batchID));\n//         if (selectedItem && !newBatches.find((batch) => batch.BatchID === selectedItem.BatchID)) {\n//           newBatches.push(selectedItem);\n//         }\n//       }\n//     }\n//     setBatches(newBatches);\n//   };\n\n// const callIT=()=>{\n//   var requestOptions = {\n//     method: 'GET',\n//     redirect: 'follow'\n//   };\n  \n//   fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\", requestOptions)\n//   .then(response => response.json())\n//   .then(result => setApiData(result))\n//   .catch(error => console.log('error', error));\n    \n//   }\n\n\n//   const { Object: responseObject = {} } = apiData;\n//   const { Batch = [],FacultyList=[] } = responseObject;\n\n\n\n//   return (\n//     <div>\n//       <h1>Add New Batch</h1>\n//       <form>\n//         <button onClick={callIT}>call it</button>\n//         {/* <select>        {Batch.map((batch) => {\n//         return(\n          \n//           <option className='F-style batch-style' key={batch.BatchID}>{batch.Batch}</option>\n        \n//         )})}\n//         </select> */}\n//         <h2>Batch List with Checkboxes</h2>\n//       <ul style={{listStyle:'none'}}>\n//         {Batch.map((batch) => (\n//           <li key={batch.BatchID}>\n//             <label>\n//               <input\n//                 type=\"checkbox\"\n//                 name={batch.BatchID}\n//                 checked={checkedItems[batch.BatchID] || false}\n//                 onChange={handleCheckboxChange}\n//               />\n//               {batch.Batch}\n//             </label>\n//           </li>\n//         ))}\n//       </ul>\n//       <button onClick={addToBatch}>Add selected items to batch</button>\n//       {/* <select>\n//         <option>A1</option>\n//         <option>A2</option>\n//         <option>A3</option>\n//       </select> */}\n//         {/* <label>\n//           BatchID:\n//           <input\n//             type=\"number\"\n//             name=\"BatchID\"\n//             value={newBatch.BatchID}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <label>\n//           Batch:\n//           <input\n//             type=\"text\"\n//             name=\"Batch\"\n//             value={newBatch.Batch}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <label>\n//           CourseID:\n//           <input\n//             type=\"number\"\n//             name=\"CourseID\"\n//             value={newBatch.CourseID}\n//             onChange={handleChange}\n//           />\n//         </label> */}\n//       </form>\n//       {/* <button onClick={handleClick}>Add Batch</button>\n//       <h2>Batch List</h2> */}\n//       {/* <ul>\n//         {batches.map((batch) => (\n//           <li key={batch.BatchID}>\n//             {batch.BatchID} - {batch.Batch} - {batch.CourseID}\n//           </li>\n//         ))}\n//       </ul> */}\n//     </div>\n//   );\n// };\n\n// export default AddBatch;\n\n\nimport React, { useState } from 'react';\n// import { batch as initialBatch } from '../List/List';\nimport { batch } from '../List/List';\n\n\nconst AddBatch = () => {\n  console.log(\",,bb\" ,batch);\n  const [batches, setBatches] = useState(batch);\n  // const [batches, setBatches] = useState(JSON.parse(localStorage.getItem('batches')) || batch);\n  const [apiData, setApiData] = useState({});\n  const [checkedItems, setCheckedItems] = useState({});\n\n  const handleCheckboxChange = (event) => {\n    const { name, checked } = event.target;\n    setCheckedItems({\n      ...checkedItems,\n      [name]: checked,\n    });\n  };\n\n  const callIT = () => {\n    var requestOptions = {\n      method: 'GET',\n      redirect: 'follow',\n    };\n\n    fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\", requestOptions)\n      .then(response => response.json())\n      .then(result => setApiData(result))\n      .catch(error => console.log('error', error));\n  }\n\n  const { Object: responseObject = {} } = apiData;\n  const { Batch = [] } = responseObject;\n\n  const addToBatch = () => {\n    const newBatches = batch;\n    for (const batchID in checkedItems) {\n      if (checkedItems[batchID]) {\n        const selectedItem = Batch.find((batch) => batch.BatchID === parseInt(batchID));\n        if (selectedItem && !newBatches.find((batch) => batch.BatchID === selectedItem.BatchID)) {\n          newBatches.push({\n            BatchID: selectedItem.BatchID,\n            Batch: selectedItem.Batch,\n            CourseID: selectedItem.CourseID,\n          });\n        }\n      }\n    }\n    console.log(newBatches)\n    setBatches(newBatches);\n//     setBatches(newBatches);\n// localStorage.setItem('batches', JSON.stringify(newBatches));\n    // batch.push(...newBatches);\n  };\n\n\n  \n\n  return (\n    \n    <div>\n    \n    \n      <h1>Add New Batch</h1>\n      <button onClick={callIT}>call it</button>\n      <h2>Batch List with Checkboxes</h2>\n      <ul style={{ listStyle: 'none' }}>\n        {Batch.map((batch) => (\n          <li key={batch.BatchID}>\n            <label>\n              <input\n                type=\"checkbox\"\n                name={batch.BatchID}\n                checked={checkedItems[batch.BatchID] || false}\n                onChange={handleCheckboxChange}\n              />\n              {batch.Batch}\n            </label>\n          </li>\n        ))}\n      </ul>\n      <button onClick={addToBatch}>Add selected items to batch</button>\n      <h2>Updated Batch List</h2>\n      <ul>\n        {batches.map((batch) => (\n          <li key={batch.BatchID}>\n            {batch.BatchID} - {batch.Batch} - {batch.CourseID}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default AddBatch;\n\n","export const COLORS = [\"#D4E6F1\", \"#E8DAEF\", \"#008080\", \"#808000\", \"#C39BD3\", \"#76D7C4\", \"#3498DB\", \"#358b79\", \"#847f86\", \"rgb(251, 235, 9)\", \"#CA6F1E\", \"#CCCCFF\", \"#F4D03F\", \"rgb(199, 185, 84)\", \"#979A9A\", \"#F0B27A\", \"rgb(117, 98, 179)\", \"#CD5C5C\", \"#40E0D0\", \"#DAF7A6\", \"#008080\", \"#808000\", \"#FADBD8\", \"green\", \"yellow\", \"white\", \"red\", \"pink\"]\n","import html2canvas from 'html2canvas';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { RxCross2 } from \"react-icons/rx\";\nimport { Alert } from 'reactstrap';\nimport { COLORS } from '../../../const/color.const';\nimport AddBatch from '../AddBatch/AddBatch';\nimport { batch, teachers_list, time } from '../List/List';\nimport \"./TimeTableV2.scss\";\n\nconst TimeTableV2 = () => {\n\n  /**************************************** const Section ************************************/\n\n  /**************************************** Use Effect Section ************************************/\n  useEffect(() => {\n    const tableElement = document.querySelector('.table-style');\n    if (tableElement) {\n      const tableWidth = tableElement.offsetWidth;\n      setTableWidth(tableWidth);\n    }\n    // if (duplicateDetected) {\n    //   setDuplicateDetected(false);\n    //   setTimeout(() => {\n    //     setDuplicateElements({});\n    //   }, 3000); // Blink duration\n    // }\n  }, []);\n\n\n  /**************************************** State Section *****************************************/\n  const [tableWidth, setTableWidth] = useState(0); // set table width\n  const [draggedTeacher, setDraggedTeacher] = useState({}); // Contains dragged teacher\n  const [lectureList, setLectureList] = useState([]);\n  const [teacherAssignment, setTeacherAssignment] = useState({});\n  const [teacherCounter, setTeacherCounter] = useState({}); // key: teacherId, value: counter\n  const [lectureTeacherCounter, setLectureTeacherCounter] = useState({}); // key: lectureId_teacherId, value: counter to check duplicate rows\n  const [duplicateTeacherDetectedInRow, setDuplicateTeacherDetectedInRow] = useState(false);\n  const [draggedCellKey, setDraggedCellKey] = useState(null);\n\n  // contains key of teacher asignment which is grag within the table\n  const [addBatch, setAddBatch] = useState(null);\n  const [image, setImage] = useState(null);   //  for div to image \n\n  const divRef = useRef(null);\n\n  /**************************************** Component Method Section *********************************/\n  /**\n   * \n   * @param {*} e drag event\n   * @param {*} teacherInfo teacherVo\n   * Calls when drag start & drag the reacher\n   */\n  const dragStart = (e, teacherDragged) => {\n    setDraggedTeacher(teacherDragged);\n  };\n\n  const allowDrop = (ev) => {\n    let t = ev.target;\n    while (t && (!t.classList || !t.classList.contains(\"each-block\"))) {\n      t = t.parentNode;\n    }\n    if (t && t.innerText.trim() !== \"\") {\n      // Prevent drop event if cell is not empty\n      return false;\n    }\n    ev.preventDefault();\n  };\n\n  // Prepare lecture list\n  const updateLectureListOnDrop = (lecture, batch, teacher) => {\n    const stateLectureList = lectureList;\n    const lectureDto = {};\n    lectureDto.ID = \"0\";\n    lectureDto.TimeTableID = \"0\";\n    lectureDto.LectureName = \"\";\n    lectureDto.Batch = batch;\n    lectureDto.Lecture = lecture;\n    lectureDto.Subject = teacher.subject;\n    lectureDto.FacultyID = teacher.FacultyID;\n    lectureDto.IsActive = true;\n    lectureDto.CreatedByUserID = \"1\";\n    lectureDto.CreatedOnDate = \"02/05/2023\";\n    stateLectureList.push(lectureDto);\n    setLectureList([...stateLectureList]);\n  };\n\n  const updateTeacherCounterOnDrop = (teacher) => {\n    const stateTeacherCounter = teacherCounter;\n    if (!stateTeacherCounter[teacher.FacultyID]) {\n      teacherCounter[teacher.FacultyID] = 1;\n    } else {\n      teacherCounter[teacher.FacultyID] += 1;\n    }\n  }\n\n  const checkDuplicateTeacherInRowOnDrop = (lectureId, teacherId) => {\n    const key = lectureId + '_' + teacherId;\n    const stateLectureTeacherCounter = lectureTeacherCounter;\n    if (!stateLectureTeacherCounter[key]) {\n      stateLectureTeacherCounter[key] = 1\n    } else {\n      stateLectureTeacherCounter[key] += 1\n    }\n    setLectureTeacherCounter({ ...stateLectureTeacherCounter });\n    if (stateLectureTeacherCounter[key] > 1) {\n      setDuplicateTeacherDetectedInRow(true);\n      setTimeout(() => {\n        setDuplicateTeacherDetectedInRow(false);\n      }, 3000); // Alert duration \n    }\n  }\n\n  /**\n   * On Drop\n   * Check if drops within the table if yes remove techer from current block by preserving the teacher and proceed for select teacher & if no proceed for select teacher\n   * set teacher assignment object\n   * set teature lecture list for api call (updateLectureListOnDrop)\n   * update teacher drop counter (updateTeacherCounterOnDrop)\n   * Check if teacher dropped in same row if yes show alert and set lecture vs teacher counter to use for blink (checkDuplicateTeacherInRowOnDrop)\n   * empty teacher state\n   * empty state used withing table drag\n   */\n  const handleDrop = (e, lecture, batch) => {\n    let selectedTeacher = draggedTeacher;\n    if (draggedCellKey) {\n      // if dragged within the table remove source & proceed for drop\n      const keyInside = draggedCellKey.lecture.LectureID + '_' + draggedCellKey.batch.BatchID;\n      selectedTeacher = teacherAssignment[keyInside];\n      removeTeacher(draggedCellKey.lecture.LectureID, draggedCellKey.batch.BatchID, teacherAssignment[keyInside].FacultyID);\n    }\n    const stateTeacherAssignment = teacherAssignment;\n    const key = lecture.LectureID + '_' + batch.BatchID;\n    teacherAssignment[key] = selectedTeacher;\n    setTeacherAssignment({ ...stateTeacherAssignment });\n    updateLectureListOnDrop(lecture, batch, selectedTeacher);\n    updateTeacherCounterOnDrop(selectedTeacher);\n    checkDuplicateTeacherInRowOnDrop(lecture.LectureID, selectedTeacher.FacultyID);\n    setDraggedTeacher({});\n    setDraggedCellKey(null);\n  }\n\n  const removeTeacher = (lectureId, batchId, teacherId) => {\n    // Remove from teacher assignment\n    const key = lectureId + '_' + batchId\n    const stateTeacherAssignment = teacherAssignment;\n    delete stateTeacherAssignment[key];\n    setTeacherAssignment({ ...stateTeacherAssignment });\n\n    // Remove from lecture list\n    const stateLectureList = lectureList;\n    const index = stateLectureList?.find(row => row.batch?.BatchID === batchId && row.lecture?.LectureID === lectureId);\n    if (index >= 0) {\n      stateLectureList.splice(index, 1);\n      setLectureList([...stateLectureList]);\n    }\n\n    // Decrease one from teacher counter\n    const stateTeacherCounter = teacherCounter;\n    stateTeacherCounter[teacherId] -= 1;\n    if (stateTeacherCounter[teacherId] <= 0) {\n      delete stateTeacherCounter[teacherId];\n    }\n    setTeacherCounter(stateTeacherCounter);\n  }\n\n  // Called to provide class name if true set classname blink else empty\n  // return true if same teacher counter greater than one with respect to lectureId\n  const isTeacherDuplicateInLecture = (lectureId, teacherId) => {\n    if (!lectureId || !teacherId) {\n      return false;\n    }\n    const key = lectureId + '_' + teacherId;\n    console.log(key);\n    return lectureTeacherCounter[key] > 1;\n  };\n\n  const handleTableCellDragStart = (e, lecture, batch) => {\n    setDraggedCellKey({\n      lecture, batch\n    });\n  };\n\n  const onDragEnd = (e) => {\n    setDraggedTeacher({});\n  }\n\n  const onTouchMove = (e) => {\n    console.log(e);\n    const x = e.touches[0].clientX;\n    const y = e.touches[0].clientY;\n    var elem = document.elementFromPoint(x, y);\n    alert('xx xx elem ', elem.id);\n  }\n\n  /**************************************** Template Section *****************************************/\n  // These 4 methods need to be refactored & moved to Component Method Section @jitendra methods\n  const convertToImage = () => {\n    html2canvas(divRef.current).then(canvas => {\n      const imgData = canvas.toDataURL();\n      setImage(imgData);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const onAddBatch = () => {\n    setAddBatch(<AddBatch />)\n  }\n  const onAddTeacher = () => {\n    alert(\"add\")\n  }\n\n  const saveTable = () => {\n    // localStorage.setItem(\"teacherA\", JSON.stringify(teacherAssignment));\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    var raw = JSON.stringify({\n      \"TimeTableID\": 0,\n      \"Description\": \"time table save\",\n      \"DateType\": \"single\",\n      \"FromDate\": \"09/05/2023\",\n      \"ToDate\": \"12/05/2023\",\n      \"ShiftID\": 1,\n      \"SessionID\": 5,\n      \"Session\": \"string\",\n      \"BatchID\": [\n        1, 6, 10, 7, 8, 9, 2, 3\n      ],\n      \"LectureID\": [\n        1, 2, 3, 4, 5, 6, 7, 8\n      ],\n      \"IsActive\": true,\n      \"CreatedByUserID\": 1,\n      \"CreatedOnDate\": \"09/05/2023\",\n      \"LectureList\": lectureList\n    });\n\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n\n    fetch(\"https://api.aayamcareerinstitute.co.in/api/AddUpdateTimeTable\", requestOptions)\n      .then(response => response.text())\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n  };\n\n  return (\n    <>\n      <div className=\"bg-container\">\n        {\n          duplicateTeacherDetectedInRow ? <Alert color=\"warning\">\n            Two same teachers found in the same row\n          </Alert> : <></>\n        }\n        <h1 className='heading-style'>CLASS SCHEDULE</h1>\n        <div>\n          <div ref={divRef}>\n            <table className='table-style'>\n              <tbody>\n                <div className=\"for-time\">\n                  <tr>\n                    <td className='F-style time-style'>Time</td>\n                    {batch.map((each) => {\n                      return (\n                        <td className='F-style batch-style' key={batch.BatchID}>{each.Batch}</td>\n                      )\n                    })}\n\n                  </tr>\n                </div>\n                <tr >\n                  {time.map((t) => {\n                    return (\n\n                      <div >\n                        <td className='F-style time-style'>{t.Time_From}-{t.Time_To}</td>\n\n                        {batch.map((b) => {\n\n                          const key = t.LectureID + '_' + b.BatchID\n                          return (\n\n                            <td\n                              draggable={true}\n                              onDragOver={allowDrop}\n                              onDrop={(e) => handleDrop(e, t, b)}\n                              onDragStart={(e) => handleTableCellDragStart(e, t, b)}\n                              key={key}\n                              id={key}\n                              className={`each-block ${isTeacherDuplicateInLecture(t.LectureID, teacherAssignment[key]?.FacultyID ?? null) ? \"blink\" : \"\"}`}\n                              style={{ backgroundColor: teacherAssignment[key]?.color }}\n                            >\n\n                              <div className={`teacname-cross-style ${teacherAssignment[key]?.className} `}>\n\n                                <div className=\"teacher-name\" >\n                                  {teacherAssignment[key]?.Faculty}\n                                </div>\n                                <div className=\"cross-btn-container\">\n                                  {teacherAssignment[key]?.Faculty ? (\n                                    <button\n                                      className=\"cross-style\"\n                                      onClick={() => removeTeacher(t.LectureID, b.BatchID, teacherAssignment[key].FacultyID)}\n                                    >\n                                      <RxCross2 />\n                                    </button>\n                                  ) : <></>}\n                                </div>\n                              </div>\n                            </td>\n\n                          )\n                        })}\n                      </div>\n\n                    )\n                  })}\n\n\n\n                </tr>\n              </tbody>\n            </table>\n            {/* <button onClick={onAddBatch}>+</button>\n            {addBatch} */}\n          </div>\n          {/* <button onClick={convertToImage}>Convert to Image</button>\n          {image && <img src={image} alt=\"table\" style={{ maxWidth: tableWidth }} />}\n          <button onClick={saveTable}>Save</button> */}\n\n        </div>\n\n\n        <div className='teacher-container' style={{ maxWidth: tableWidth }}>\n          {teachers_list.map((teacher, index) => {\n            const { FacultyID, Faculty } = teacher;\n            teacher.color = COLORS[index]\n            return (\n              <div\n                style={{ maxWidth: tableWidth, backgroundColor: teacher.color }}\n                key={FacultyID}\n                className=\"teacher-item\"\n                draggable={true}\n                onDragStart={(e) => dragStart(e, teacher)}\n                onDragEnd={(e) => onDragEnd(e)}\n                onTouchStart={(e) => dragStart(e, teacher)}\n                onTouchMove={(e) => onTouchMove(e)}\n              >\n                <h3>{Faculty}</h3>\n                {teacherCounter[FacultyID] > 0 && (\n                  <span className={`counter-item `} draggable={false}>\n                    {teacherCounter[FacultyID]}\n                  </span>\n                )}\n              </div>\n            );\n          })}\n          {/* <button onClick={onAddTeacher}>+</button> */}\n\n        </div>\n\n      </div>\n    </>\n  )\n}\n\nexport default TimeTableV2;"],"sourceRoot":""}