{"version":3,"sources":["pages/TTPages/List/List.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/uuid/index.js","../node_modules/uuid/lib/rng-browser.js","../node_modules/uuid/lib/bytesToUuid.js","pages/TTPages/AddBatch/AddBatch.js","../node_modules/uuid/v1.js","../node_modules/uuid/v4.js"],"names":["teachers_list","batch","time","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","v1","require","v4","uuid","module","exports","getRandomValues","crypto","bind","msCrypto","window","rnds8","Uint8Array","rnds","Array","r","Math","random","byteToHex","toString","substr","buf","offset","bth","join","AddBatch","console","log","_useState","useState","_useState2","_slicedToArray","batches","setBatches","_useState3","_useState4","apiData","setApiData","_useState5","_useState6","checkedItems","setCheckedItems","handleCheckboxChange","event","_event$target","name","checked","_objectSpread","_defineProperty","_apiData$Object","_responseObject$Batch","Batch","_jsxs","children","_jsx","onClick","fetch","method","redirect","then","response","json","result","catch","error","style","listStyle","map","type","BatchID","onChange","newBatches","_loop","batchID","selectedItem","find","parseInt","CourseID","_nodeId","_clockseq","rng","bytesToUuid","_lastMSecs","_lastNSecs","options","b","node","clockseq","undefined","seedBytes","msecs","Date","getTime","nsecs","dt","Error","tl","tmh","n","ii"],"mappings":"iHAAA,gHAoFaA,EAAgB,CACrB,CACI,UAAa,EACb,QAAW,MACX,QAAW,WAGf,CACI,UAAa,EACb,QAAW,MACX,QAAU,aAGd,CACI,UAAa,EACb,QAAW,MACX,QAAU,aAGd,CACI,UAAa,EACb,QAAW,MACX,QAAU,WAGd,CACI,UAAa,EACb,QAAW,MACX,QAAU,WAEd,CACI,UAAa,EACb,QAAW,MACX,QAAU,WAEd,CACI,UAAa,EACb,QAAW,MACX,QAAU,aAEd,CACI,UAAa,EACb,QAAW,MACX,QAAW,WAGf,CACI,UAAa,EACb,QAAW,KACX,QAAU,WAGd,CACI,UAAa,GACb,QAAW,KACX,QAAU,WAGd,CACI,UAAa,GACb,QAAW,OACX,QAAU,aAMd,CACI,UAAa,GACb,QAAW,MACX,QAAU,WAEd,CACI,UAAa,GACb,QAAW,MACX,QAAU,WAEd,CACI,UAAa,GACb,QAAW,MACX,QAAU,aAEd,CACI,UAAa,GACb,QAAW,MACX,QAAU,SAEd,CACI,UAAa,GACb,QAAW,MACX,QAAU,WAEd,CACI,UAAa,GACb,QAAW,MACX,QAAU,WAEd,CACI,UAAa,GACb,QAAW,MACX,QAAU,aAEd,CACI,UAAa,GACb,QAAW,MACX,QAAU,cA4BTC,EAAO,CAChB,CACI,QAAW,EACX,MAAS,KACT,SAAY,GAEhB,CACI,QAAW,EACX,MAAS,KACT,SAAY,GAEhB,CACI,QAAW,EACX,MAAS,KACT,SAAY,GAEhB,CACI,QAAW,EACX,MAAS,KACT,SAAY,GAEhB,CACI,QAAW,EACX,MAAS,KACT,SAAY,GAEhB,CACI,QAAW,EACX,MAAS,KACT,SAAY,GAEhB,CACI,QAAW,EACX,MAAS,KACT,SAAY,GAEhB,CACI,QAAW,EACX,MAAS,KACT,SAAY,GAIhB,CACI,QAAW,EACX,MAAS,MACT,SAAY,GAEhB,CACI,QAAW,GACX,MAAS,QACT,SAAY,IAEhB,CACI,QAAW,GACX,MAAS,QACT,SAAY,IAEhB,CACI,QAAW,GACX,MAAS,SACT,SAAY,IAEhB,CACI,QAAW,GACX,MAAS,OACT,SAAY,IAEhB,CACI,QAAW,GACX,MAAS,UACT,SAAY,KAMPC,EAAM,CACf,CACI,UAAa,EACb,QAAW,KACX,UAAa,WACb,QAAW,YAEf,CACI,UAAa,EACb,QAAW,KACX,UAAa,WACb,QAAW,YAEf,CACI,UAAa,EACb,QAAW,KACX,UAAa,WACb,QAAW,YAEf,CACI,UAAa,EACb,QAAW,KACX,UAAa,WACb,QAAW,YAEf,CACI,UAAa,EACb,QAAW,KACX,UAAa,WACb,QAAW,YAEf,CACI,UAAa,EACb,QAAW,KACX,UAAa,WACb,QAAW,YAEf,CACI,UAAa,EACb,QAAW,KACX,UAAa,WACb,QAAW,YAEf,CACI,UAAa,EACb,QAAW,KACX,UAAa,WACb,QAAW,Y,kCCrVnB,6CACA,SAASC,EAAQC,EAAQC,GACvB,IAAIC,EAAOC,OAAOD,KAAKF,GACvB,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAUF,OAAOC,sBAAsBJ,GAC3CC,IAAmBI,EAAUA,EAAQC,QAAO,SAAUC,GACpD,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,UACtD,KAAKP,EAAKQ,KAAKC,MAAMT,EAAMG,EAC7B,CACA,OAAOH,CACT,CACe,SAASU,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAS,MAAQF,UAAUD,GAAKC,UAAUD,GAAK,CAAC,EACpDA,EAAI,EAAIf,EAAQI,OAAOc,IAAS,GAAIC,SAAQ,SAAUC,GACpD,YAAeN,EAAQM,EAAKF,EAAOE,GACrC,IAAKhB,OAAOiB,0BAA4BjB,OAAOkB,iBAAiBR,EAAQV,OAAOiB,0BAA0BH,IAAWlB,EAAQI,OAAOc,IAASC,SAAQ,SAAUC,GAC5JhB,OAAOmB,eAAeT,EAAQM,EAAKhB,OAAOK,yBAAyBS,EAAQE,GAC7E,GACF,CACA,OAAON,CACT,C,qBCrBA,IAAIU,EAAKC,EAAQ,IACbC,EAAKD,EAAQ,IAEbE,EAAOD,EACXC,EAAKH,GAAKA,EACVG,EAAKD,GAAKA,EAEVE,EAAOC,QAAUF,C,mBCAjB,IAAIG,EAAqC,oBAAXC,QAA0BA,OAAOD,iBAAmBC,OAAOD,gBAAgBE,KAAKD,SACnE,oBAAbE,UAAsE,mBAAnCC,OAAOD,SAASH,iBAAiCG,SAASH,gBAAgBE,KAAKC,UAEhJ,GAAIH,EAAiB,CAEnB,IAAIK,EAAQ,IAAIC,WAAW,IAE3BR,EAAOC,QAAU,WAEf,OADAC,EAAgBK,GACTA,CACT,CACF,KAAO,CAKL,IAAIE,EAAO,IAAIC,MAAM,IAErBV,EAAOC,QAAU,WACf,IAAK,IAAWU,EAAPxB,EAAI,EAAMA,EAAI,GAAIA,IACN,KAAV,EAAJA,KAAiBwB,EAAoB,WAAhBC,KAAKC,UAC/BJ,EAAKtB,GAAKwB,MAAY,EAAJxB,IAAa,GAAK,IAGtC,OAAOsB,CACT,CACF,C,mBC5BA,IADA,IAAIK,EAAY,GACP3B,EAAI,EAAGA,EAAI,MAAOA,EACzB2B,EAAU3B,IAAMA,EAAI,KAAO4B,SAAS,IAAIC,OAAO,GAmBjDhB,EAAOC,QAhBP,SAAqBgB,EAAKC,GACxB,IAAI/B,EAAI+B,GAAU,EACdC,EAAML,EAEV,MAAQ,CACNK,EAAIF,EAAI9B,MAAOgC,EAAIF,EAAI9B,MACvBgC,EAAIF,EAAI9B,MAAOgC,EAAIF,EAAI9B,MAAO,IAC9BgC,EAAIF,EAAI9B,MAAOgC,EAAIF,EAAI9B,MAAO,IAC9BgC,EAAIF,EAAI9B,MAAOgC,EAAIF,EAAI9B,MAAO,IAC9BgC,EAAIF,EAAI9B,MAAOgC,EAAIF,EAAI9B,MAAO,IAC9BgC,EAAIF,EAAI9B,MAAOgC,EAAIF,EAAI9B,MACvBgC,EAAIF,EAAI9B,MAAOgC,EAAIF,EAAI9B,MACvBgC,EAAIF,EAAI9B,MAAOgC,EAAIF,EAAI9B,OACtBiC,KAAK,GACV,C,yFC0WeC,UA1FE,WACfC,QAAQC,IAAI,OAAQrD,KACpB,IAAAsD,EAA8BC,mBAASvD,KAAMwD,EAAAC,YAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAE1BI,EAA8BL,mBAAS,CAAC,GAAEM,EAAAJ,YAAAG,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,EAAwCT,mBAAS,CAAC,GAAEU,EAAAR,YAAAO,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAE9BG,EAAuB,SAACC,GAC5B,IAAAC,EAA0BD,EAAMrD,OAAxBuD,EAAID,EAAJC,KAAMC,EAAOF,EAAPE,QACdL,EAAeM,wBAAC,CAAC,EACZP,GAAY,GAAAQ,YAAA,GACdH,EAAOC,IAEZ,EAcAG,EAAwCb,EAAhCxD,OACRsE,QAD8B,IAAAD,EAAG,CAAC,EAACA,GAC3BE,aAAK,IAAAD,EAAG,GAAEA,EA0BlB,OAEEE,eAAA,OAAAC,SAAA,CAGEC,cAAA,MAAAD,SAAI,kBACJC,cAAA,UAAQC,QA7CG,WAMbC,MAAM,2DALe,CACnBC,OAAQ,MACRC,SAAU,WAITC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAG,GAAM,OAAIzB,EAAWyB,EAAO,IACjCC,OAAM,SAAAC,GAAK,OAAItC,QAAQC,IAAI,QAASqC,EAAM,GAC/C,EAmC4BX,SAAC,YACzBC,cAAA,MAAAD,SAAI,+BACJC,cAAA,MAAIW,MAAO,CAAEC,UAAW,QAASb,SAC9BF,EAAMgB,KAAI,SAAC7F,GAAK,OACfgF,cAAA,MAAAD,SACED,eAAA,SAAAC,SAAA,CACEC,cAAA,SACEc,KAAK,WACLvB,KAAMvE,EAAM+F,QACZvB,QAASN,EAAalE,EAAM+F,WAAY,EACxCC,SAAU5B,IAEXpE,EAAM6E,UARF7E,EAAM+F,QAUV,MAGTf,cAAA,UAAQC,QA/CO,WACjB,IAAMgB,EAAajG,IAAMkG,EAAA,SAAAC,GAEvB,GAAIjC,EAAaiC,GAAU,CACzB,IAAMC,EAAevB,EAAMwB,MAAK,SAACrG,GAAK,OAAKA,EAAM+F,UAAYO,SAASH,EAAQ,IAC1EC,IAAiBH,EAAWI,MAAK,SAACrG,GAAK,OAAKA,EAAM+F,UAAYK,EAAaL,OAAO,KACpFE,EAAWpF,KAAK,CACdkF,QAASK,EAAaL,QACtBlB,MAAOuB,EAAavB,MACpB0B,SAAUH,EAAaG,UAG7B,CACF,EAXA,IAAK,IAAMJ,KAAWjC,EAAYgC,EAAAC,GAYlC/C,QAAQC,IAAI4C,GACZtC,EAAWsC,EAIb,EA4BgClB,SAAC,gCAC7BC,cAAA,MAAAD,SAAI,uBACJC,cAAA,MAAAD,SACGrB,EAAQmC,KAAI,SAAC7F,GAAK,OACjB8E,eAAA,MAAAC,SAAA,CACG/E,EAAM+F,QAAQ,MAAI/F,EAAM6E,MAAM,MAAI7E,EAAMuG,WADlCvG,EAAM+F,QAEV,QAKf,C,qBC/XA,IAQIS,EACAC,EATAC,EAAM/E,EAAQ,IACdgF,EAAchF,EAAQ,IAWtBiF,EAAa,EACbC,EAAa,EA+FjB/E,EAAOC,QA5FP,SAAY+E,EAAS/D,EAAKC,GACxB,IAAI/B,EAAI8B,GAAOC,GAAU,EACrB+D,EAAIhE,GAAO,GAGXiE,GADJF,EAAUA,GAAW,CAAC,GACHE,MAAQR,EACvBS,OAAgCC,IAArBJ,EAAQG,SAAyBH,EAAQG,SAAWR,EAKnE,GAAY,MAARO,GAA4B,MAAZC,EAAkB,CACpC,IAAIE,EAAYT,IACJ,MAARM,IAEFA,EAAOR,EAAU,CACA,EAAfW,EAAU,GACVA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,KAGtD,MAAZF,IAEFA,EAAWR,EAAiD,OAApCU,EAAU,IAAM,EAAIA,EAAU,IAE1D,CAMA,IAAIC,OAA0BF,IAAlBJ,EAAQM,MAAsBN,EAAQM,OAAQ,IAAIC,MAAOC,UAIjEC,OAA0BL,IAAlBJ,EAAQS,MAAsBT,EAAQS,MAAQV,EAAa,EAGnEW,EAAMJ,EAAQR,GAAeW,EAAQV,GAAY,IAcrD,GAXIW,EAAK,QAA0BN,IAArBJ,EAAQG,WACpBA,EAAWA,EAAW,EAAI,QAKvBO,EAAK,GAAKJ,EAAQR,SAAiCM,IAAlBJ,EAAQS,QAC5CA,EAAQ,GAINA,GAAS,IACX,MAAM,IAAIE,MAAM,mDAGlBb,EAAaQ,EACbP,EAAaU,EACbd,EAAYQ,EAMZ,IAAIS,GAA4B,KAAb,WAHnBN,GAAS,cAG+BG,GAAS,WACjDR,EAAE9F,KAAOyG,IAAO,GAAK,IACrBX,EAAE9F,KAAOyG,IAAO,GAAK,IACrBX,EAAE9F,KAAOyG,IAAO,EAAI,IACpBX,EAAE9F,KAAY,IAALyG,EAGT,IAAIC,EAAOP,EAAQ,WAAc,IAAS,UAC1CL,EAAE9F,KAAO0G,IAAQ,EAAI,IACrBZ,EAAE9F,KAAa,IAAN0G,EAGTZ,EAAE9F,KAAO0G,IAAQ,GAAK,GAAM,GAC5BZ,EAAE9F,KAAO0G,IAAQ,GAAK,IAGtBZ,EAAE9F,KAAOgG,IAAa,EAAI,IAG1BF,EAAE9F,KAAkB,IAAXgG,EAGT,IAAK,IAAIW,EAAI,EAAGA,EAAI,IAAKA,EACvBb,EAAE9F,EAAI2G,GAAKZ,EAAKY,GAGlB,OAAO7E,GAAY4D,EAAYI,EACjC,C,qBC1GA,IAAIL,EAAM/E,EAAQ,IACdgF,EAAchF,EAAQ,IA2B1BG,EAAOC,QAzBP,SAAY+E,EAAS/D,EAAKC,GACxB,IAAI/B,EAAI8B,GAAOC,GAAU,EAEF,iBAAZ8D,IACT/D,EAAkB,WAAZ+D,EAAuB,IAAItE,MAAM,IAAM,KAC7CsE,EAAU,MAIZ,IAAIvE,GAFJuE,EAAUA,GAAW,CAAC,GAEHnE,SAAWmE,EAAQJ,KAAOA,KAO7C,GAJAnE,EAAK,GAAgB,GAAVA,EAAK,GAAa,GAC7BA,EAAK,GAAgB,GAAVA,EAAK,GAAa,IAGzBQ,EACF,IAAK,IAAI8E,EAAK,EAAGA,EAAK,KAAMA,EAC1B9E,EAAI9B,EAAI4G,GAAMtF,EAAKsF,GAIvB,OAAO9E,GAAO4D,EAAYpE,EAC5B,C","file":"static/js/4.2a65a330.chunk.js","sourcesContent":["import {v4 as uuidv4} from \"uuid\"\n\n\n\n// export const teachers_list = [\n// {name:'MYK',\n// className:\"style-faculty\",\n// bgColor:\"bg-myk\",\n// bg:\"blue\"\n// },\n\n// {name:'KPS',\n// className:\"style-faculty\",\n// bgColor:\"bg-kps\"\n// },\n\n// {name:'MRS',\n// className:\"style-faculty\",\n// bgColor:\"bg-mrs\"\n// },\n\n// {name:'MAS',\n// className:\"style-faculty\",\n// bgColor:\"bg-mas\"\n// },\n\n// {name:'RSS',\n// className:\"style-faculty\",\n// bgColor:\"bg-rss\"\n// },\n\n// {name:'NMS',\n// className:\"style-faculty\",\n// bgColor:\"bg-nms\"\n// },\n\n// {name:'HDS',\n// className:\"style-faculty\",\n// bgColor:\"bg-hds\"\n// },\n\n// {name:'MNM',\n// className:\"style-faculty\",\n// bgColor:\"bg-mnm\"\n// },\n\n// {name:'SJ',\n// className:\"style-faculty\",\n// bgColor:\"bg-sj\"},\n\n// {name:'AJ',\n// className:\"style-faculty\",\n// bgColor:\"bg-aj\"\n// },\n\n// {name:'DMPS',\n// className:\"style-faculty\",\n// bgColor:\"bg-dmps\"\n// },\n\n// {name:'PSJ',\n// className:\"style-faculty\",\n// bgColor:\"bg-psj\"\n// },\n\n// {name:'YBS',\n// className:\"style-faculty\",\n// bgColor:\"bg-ybs\"\n// },\n\n// {name:'AKS',\n// className:\"style-faculty\",\n// bgColor:\"bg-aks\"},\n\n// {name:'AMS',\n// className:\"style-faculty\",\n// bgColor:\"bg-ams\"},\n\n\n\n// ]; \n\n\n\nexport const teachers_list = [\n        {\n            \"FacultyID\": 1,\n            \"Faculty\": \"MYK\",\n            \"subject\": \"Physics\"\n        },\n        \n        {\n            \"FacultyID\": 2,\n            \"Faculty\": \"KPS\",\n            \"subject\":\"Chemistry\"\n        },\n\n        {\n            \"FacultyID\": 3,\n            \"Faculty\": \"MRS\",\n            \"subject\":\"Chemistry\"\n        },\n\n        {\n            \"FacultyID\": 4,\n            \"Faculty\": \"MAS\",\n            \"subject\":\"Physics\"\n        },\n\n        {\n            \"FacultyID\": 5,\n            \"Faculty\": \"RSS\",\n            \"subject\":\"Physics\"\n        },\n        {\n            \"FacultyID\": 6,\n            \"Faculty\": \"NMS\",\n            \"subject\":\"Biology\"\n        },\n        {\n            \"FacultyID\": 7,\n            \"Faculty\": \"HDS\",\n            \"subject\":\"Chemistry\"\n        },\n        {\n            \"FacultyID\": 8,\n            \"Faculty\": \"MNM\",\n            \"subject\": \"Biology\"\n        },\n        \n        {\n            \"FacultyID\": 9,\n            \"Faculty\": \"SJ\",\n            \"subject\":\"Biology\"\n        },\n\n        {\n            \"FacultyID\": 10,\n            \"Faculty\": \"AJ\",\n            \"subject\":\"Biology\"\n        },\n\n        {\n            \"FacultyID\": 11,\n            \"Faculty\": \"DMPS\",\n            \"subject\":\"Chemistry\"\n        },\n\n        \n       \n        \n        {\n            \"FacultyID\": 12,\n            \"Faculty\": \"PSJ\",\n            \"subject\":\"Physics\"\n        },\n        {\n            \"FacultyID\": 13,\n            \"Faculty\": \"YBS\",\n            \"subject\":\"Biology\"\n        },\n        {\n            \"FacultyID\": 14,\n            \"Faculty\": \"AKS\",\n            \"subject\":\"Chemistry\"\n        },\n        {\n            \"FacultyID\": 15,\n            \"Faculty\": \"AMS\",\n            \"subject\":\"Maths\"\n        },\n        {\n            \"FacultyID\": 16,\n            \"Faculty\": \"NDS\",\n            \"subject\":\"Physics\"\n        },\n        {\n            \"FacultyID\": 17,\n            \"Faculty\": \"HWS\",\n            \"subject\":\"Physics\"\n        },\n        {\n            \"FacultyID\": 18,\n            \"Faculty\": \"JRS\",\n            \"subject\":\"Chemistry\"\n        },\n        {\n            \"FacultyID\": 19,\n            \"Faculty\": \"HTS\",\n            \"subject\":\"Chemistry\"\n        },\n    ]; \n    \n\n\n// PREVIOUS BATACH LIST\n// export const batch = [\n//     {id:uuidv4(),\n//     batchname:'A1'},\n//     {id:uuidv4(),\n//     batchname:'A2'},\n//     {id:uuidv4(), \n//     batchname:'CRASH E'},\n//     {id:uuidv4() ,\n//     batchname:'CRASH H'},\n//     {id:uuidv4(),\n//     batchname:'ONLINE'},\n//     {id:uuidv4(),\n//     batchname:'A14'},\n//     {id:uuidv4(),\n//     batchname:'JEE EX'},\n//     {id:uuidv4(),\n//     batchname:'JEE12'},\n    \n// ];\n\n\nexport const batch= [\n    {\n        \"BatchID\": 1,\n        \"Batch\": \"A1\",\n        \"CourseID\": 1\n    },\n    {\n        \"BatchID\": 2,\n        \"Batch\": \"A2\",\n        \"CourseID\": 2\n    },\n    {\n        \"BatchID\": 3,\n        \"Batch\": \"A3\",\n        \"CourseID\": 3\n    },\n    {\n        \"BatchID\": 4,\n        \"Batch\": \"A4\",\n        \"CourseID\": 4\n    },\n    {\n        \"BatchID\": 5,\n        \"Batch\": \"C1\",\n        \"CourseID\": 5\n    },\n    {\n        \"BatchID\": 6,\n        \"Batch\": \"C2\",\n        \"CourseID\": 6\n    },\n    {\n        \"BatchID\": 7,\n        \"Batch\": \"B1\",\n        \"CourseID\": 7\n    },\n    {\n        \"BatchID\": 8,\n        \"Batch\": \"B2\",\n        \"CourseID\": 8\n    },\n    //MORE BATCHES ADDED WITH A FAKE BATCHID AND FAKE COURSEID NEED TO CHANGE LATER\n\n    {\n        \"BatchID\": 9,\n        \"Batch\": \"JO1\",\n        \"CourseID\": 9\n    },\n    {\n        \"BatchID\": 10,\n        \"Batch\": \"JXI-1\",\n        \"CourseID\": 10\n    },\n    {\n        \"BatchID\": 11,\n        \"Batch\": \"JXI-2\",\n        \"CourseID\": 11\n    },\n    {\n        \"BatchID\": 12,\n        \"Batch\": \"JXII-1\",\n        \"CourseID\": 12\n    },\n    {\n        \"BatchID\": 13,\n        \"Batch\": \"JEXL\",\n        \"CourseID\": 13\n    },\n    {\n        \"BatchID\": 14,\n        \"Batch\": \"JEE Adv\",\n        \"CourseID\": 14\n    }\n]\n\n\n\nexport const time= [\n    {\n        \"LectureID\": 1,\n        \"Lecture\": \"L1\",\n        \"Time_From\": \"08:30 AM\",\n        \"Time_To\": \"09:45 AM\"\n    },\n    {\n        \"LectureID\": 2,\n        \"Lecture\": \"L2\",\n        \"Time_From\": \"09:50 AM\",\n        \"Time_To\": \"11:05 AM\"\n    },\n    {\n        \"LectureID\": 3,\n        \"Lecture\": \"L3\",\n        \"Time_From\": \"11:20 AM\",\n        \"Time_To\": \"12:35 PM\"\n    },\n    {\n        \"LectureID\": 4,\n        \"Lecture\": \"L4\",\n        \"Time_From\": \"12:40 PM\",\n        \"Time_To\": \"01:55 PM\"\n    },\n    {\n        \"LectureID\": 5,\n        \"Lecture\": \"L5\",\n        \"Time_From\": \"02:00 PM\",\n        \"Time_To\": \"03:15 PM\"\n    },\n    {\n        \"LectureID\": 6,\n        \"Lecture\": \"L6\",\n        \"Time_From\": \"03:20 PM\",\n        \"Time_To\": \"04:35 PM\"\n    },\n    {\n        \"LectureID\": 7,\n        \"Lecture\": \"L7\",\n        \"Time_From\": \"04:50 PM\",\n        \"Time_To\": \"06:05 PM\"\n    },\n    {\n        \"LectureID\": 8,\n        \"Lecture\": \"L8\",\n        \"Time_From\": \"06:15 PM\",\n        \"Time_To\": \"07:30 PM\"\n    }\n]\n\n\n\n//PREVIOUS TIME LIST\n\n// export const time = [\n//     {id:uuidv4(),\n//     classtime:'08:30-09:45 AM'},\n//     {id:uuidv4(),\n//     classtime:'09:50-11:05 AM'},\n//     {id:uuidv4(),\n//     classtime: '11:20-12:35 PM'},\n//     {id:uuidv4(),\n//     classtime:'12:40-01:55 PM'},\n//     {id:uuidv4(),\n//     classtime:'02:00-03:15 PM'},\n//     {id:uuidv4(),\n//     classtime:'03:20-04:35 PM'},\n//     {id:uuidv4(),\n//     classtime:'04:50-06:05 PM'},\n//     {id:uuidv4(),\n//     classtime:'06:15-07:30 PM'}];\n\n    ","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// // import React, { useState } from 'react'\n// // import {\n// //     Card,\n// //     Row,\n// //     Col,\n// //     CardTitle,\n// //     CardBody,\n// //     Button,\n// //     Form,\n// //     FormGroup,\n// //     Label,\n// //     Input,\n// //     FormText,\n// //   } from \"reactstrap\";\n  \n// //   const AddBatch = () => {\n// //     const[addBatch,setAddBatch]=useState(null)\n\n// // const onChangeBatch=(e,key)=>{\n// //     key=e.target.name;\n// //     setAddBatch(e.target.value);\n// //     console.log(\"teacher is added\")\n// // }\n// // const onAddBatch=()=>{\n// // alert(\"the batch will be added as per api call\")\n// // }\n\n\n// //     return (\n// //       <Row>\n// //         <Col>\n// //           {/* --------------------------------------------------------------------------------*/}\n// //           {/* Card-1*/}\n// //           {/* --------------------------------------------------------------------------------*/}\n// //           <Card>\n// //             <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\n// //               {/* <i className=\"bi bi-bell me-2\"> </i> */}\n// //               Add Batch\n// //             </CardTitle>\n// //             <CardBody>\n// //               <Form>\n// //                 <FormGroup>\n// //                   <Label for=\"batchname\">Batch Name</Label>\n// //                   <Input\n// //                     id=\"batchname\"\n// //                     name=\"batchname\"\n// //                     placeholder=\"Write Batch Name\"\n// //                     type=\"text\"\n                    \n// //                     onChange={onChangeBatch}\n                    \n// //                   />\n// //                 </FormGroup>\n// //                 {/* <FormGroup>\n// //                   <Label for=\"bgcolor\">Background Color</Label>\n// //                   <Input\n// //                     id=\"bgcolor\"\n// //                     name=\"color\"\n// //                     placeholder=\"add color\"\n// //                     type=\"color\"\n// //                   />\n// //                 </FormGroup> */}\n// //                 {/* <FormGroup>\n// //                   <Label for=\"exampleSelect\">Select</Label>\n// //                   <Input id=\"exampleSelect\" name=\"select\" type=\"select\">\n// //                     <option>1</option>\n// //                     <option>2</option>\n// //                     <option>3</option>\n// //                     <option>4</option>\n// //                     <option>5</option>\n// //                   </Input>\n// //                 </FormGroup>\n// //                 <FormGroup>\n// //                   <Label for=\"exampleSelectMulti\">Select Multiple</Label>\n// //                   <Input\n// //                     id=\"exampleSelectMulti\"\n// //                     multiple\n// //                     name=\"selectMulti\"\n// //                     type=\"select\"\n// //                   >\n// //                     <option>1</option>\n// //                     <option>2</option>\n// //                     <option>3</option>\n// //                     <option>4</option>\n// //                     <option>5</option>\n// //                   </Input>\n// //                 </FormGroup>\n// //                 <FormGroup>\n// //                   <Label for=\"exampleText\">Text Area</Label>\n// //                   <Input id=\"exampleText\" name=\"text\" type=\"textarea\" />\n// //                 </FormGroup>\n// //                 <FormGroup>\n// //                   <Label for=\"exampleFile\">File</Label>\n// //                   <Input id=\"exampleFile\" name=\"file\" type=\"file\" />\n// //                   <FormText>\n// //                     This is some placeholder block-level help text for the above\n// //                     input. It's a bit lighter and easily wraps to a new line.\n// //                   </FormText>\n// //                 </FormGroup>\n// //                 <FormGroup tag=\"fieldset\">\n// //                   <legend>Radio Buttons</legend>\n// //                   <FormGroup check>\n// //                     <Input name=\"radio1\" type=\"radio\" />{\" \"}\n// //                     <Label check>\n// //                       Option one is this and that—be sure to include why it's\n// //                       great\n// //                     </Label>\n// //                   </FormGroup>\n// //                   <FormGroup check>\n// //                     <Input name=\"radio1\" type=\"radio\" />{\" \"}\n// //                     <Label check>\n// //                       Option two can be something else and selecting it will\n// //                       deselect option one\n// //                     </Label>\n// //                   </FormGroup>\n// //                   <FormGroup check disabled>\n// //                     <Input disabled name=\"radio1\" type=\"radio\" />{\" \"}\n// //                     <Label check>Option three is disabled</Label>\n// //                   </FormGroup>\n// //                 </FormGroup>\n// //                 <FormGroup check>\n// //                   <Input type=\"checkbox\" /> <Label check>Check me out</Label>\n// //                 </FormGroup> */}\n// //                 <Button onClick={onAddBatch}>Submit</Button>\n// //               </Form>\n// //             </CardBody>\n// //           </Card>\n// //         </Col>\n// //       </Row>\n// //     );\n// //   };\n  \n// //   export default AddBatch;\n  \n// import React, { useState } from 'react';\n// // import { batch } from '../List/List';\n// import { batch as initialBatch } from '../List/List';\n\n// // export const batch = [\n// //   // ... (the initial array content)\n// // ];\n\n// const AddBatch = () => {\n//   const [batches, setBatches] = useState();\n//   const [apiData, setApiData] = useState({});\n//   const [newBatch, setNewBatch] = useState({\n//     BatchID: '',\n//     Batch: '',\n//     CourseID: '',\n//   });\n\n\n//   const [checkedItems, setCheckedItems] = useState({});\n\n//   const handleCheckboxChange = (event) => {\n//     const { name, checked } = event.target;\n//     setCheckedItems({\n//       ...checkedItems,\n//       [name]: checked,\n//     });\n//   };\n\n//   const handleChange = (event) => {\n//     const { name, value } = event.target;\n//     setNewBatch({\n//       ...newBatch,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleClick = () => {\n//     setBatches([...batches, newBatch]);\n//     setNewBatch({\n//       BatchID: '',\n//       Batch: '',\n//       CourseID: '',\n//     });\n//   };\n\n\n//   const addToBatch = () => {\n//     const newBatches = [...initialBatch];\n//     for (const batchID in checkedItems) {\n//       if (checkedItems[batchID]) {\n//         const selectedItem = Batch.find((batch) => batch.BatchID === parseInt(batchID));\n//         if (selectedItem && !newBatches.find((batch) => batch.BatchID === selectedItem.BatchID)) {\n//           newBatches.push(selectedItem);\n//         }\n//       }\n//     }\n//     setBatches(newBatches);\n//   };\n\n// const callIT=()=>{\n//   var requestOptions = {\n//     method: 'GET',\n//     redirect: 'follow'\n//   };\n  \n//   fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\", requestOptions)\n//   .then(response => response.json())\n//   .then(result => setApiData(result))\n//   .catch(error => console.log('error', error));\n    \n//   }\n\n\n//   const { Object: responseObject = {} } = apiData;\n//   const { Batch = [],FacultyList=[] } = responseObject;\n\n\n\n//   return (\n//     <div>\n//       <h1>Add New Batch</h1>\n//       <form>\n//         <button onClick={callIT}>call it</button>\n//         {/* <select>        {Batch.map((batch) => {\n//         return(\n          \n//           <option className='F-style batch-style' key={batch.BatchID}>{batch.Batch}</option>\n        \n//         )})}\n//         </select> */}\n//         <h2>Batch List with Checkboxes</h2>\n//       <ul style={{listStyle:'none'}}>\n//         {Batch.map((batch) => (\n//           <li key={batch.BatchID}>\n//             <label>\n//               <input\n//                 type=\"checkbox\"\n//                 name={batch.BatchID}\n//                 checked={checkedItems[batch.BatchID] || false}\n//                 onChange={handleCheckboxChange}\n//               />\n//               {batch.Batch}\n//             </label>\n//           </li>\n//         ))}\n//       </ul>\n//       <button onClick={addToBatch}>Add selected items to batch</button>\n//       {/* <select>\n//         <option>A1</option>\n//         <option>A2</option>\n//         <option>A3</option>\n//       </select> */}\n//         {/* <label>\n//           BatchID:\n//           <input\n//             type=\"number\"\n//             name=\"BatchID\"\n//             value={newBatch.BatchID}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <label>\n//           Batch:\n//           <input\n//             type=\"text\"\n//             name=\"Batch\"\n//             value={newBatch.Batch}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <label>\n//           CourseID:\n//           <input\n//             type=\"number\"\n//             name=\"CourseID\"\n//             value={newBatch.CourseID}\n//             onChange={handleChange}\n//           />\n//         </label> */}\n//       </form>\n//       {/* <button onClick={handleClick}>Add Batch</button>\n//       <h2>Batch List</h2> */}\n//       {/* <ul>\n//         {batches.map((batch) => (\n//           <li key={batch.BatchID}>\n//             {batch.BatchID} - {batch.Batch} - {batch.CourseID}\n//           </li>\n//         ))}\n//       </ul> */}\n//     </div>\n//   );\n// };\n\n// export default AddBatch;\n\n\nimport React, { useState } from 'react';\n// import { batch as initialBatch } from '../List/List';\nimport { batch } from '../List/List';\n\n\nconst AddBatch = () => {\n  console.log(\",,bb\" ,batch);\n  const [batches, setBatches] = useState(batch);\n  // const [batches, setBatches] = useState(JSON.parse(localStorage.getItem('batches')) || batch);\n  const [apiData, setApiData] = useState({});\n  const [checkedItems, setCheckedItems] = useState({});\n\n  const handleCheckboxChange = (event) => {\n    const { name, checked } = event.target;\n    setCheckedItems({\n      ...checkedItems,\n      [name]: checked,\n    });\n  };\n\n  const callIT = () => {\n    var requestOptions = {\n      method: 'GET',\n      redirect: 'follow',\n    };\n\n    fetch(\"https://api.aayamcareerinstitute.co.in/api/GetMasterData\", requestOptions)\n      .then(response => response.json())\n      .then(result => setApiData(result))\n      .catch(error => console.log('error', error));\n  }\n\n  const { Object: responseObject = {} } = apiData;\n  const { Batch = [] } = responseObject;\n\n  const addToBatch = () => {\n    const newBatches = batch;\n    for (const batchID in checkedItems) {\n      if (checkedItems[batchID]) {\n        const selectedItem = Batch.find((batch) => batch.BatchID === parseInt(batchID));\n        if (selectedItem && !newBatches.find((batch) => batch.BatchID === selectedItem.BatchID)) {\n          newBatches.push({\n            BatchID: selectedItem.BatchID,\n            Batch: selectedItem.Batch,\n            CourseID: selectedItem.CourseID,\n          });\n        }\n      }\n    }\n    console.log(newBatches)\n    setBatches(newBatches);\n//     setBatches(newBatches);\n// localStorage.setItem('batches', JSON.stringify(newBatches));\n    // batch.push(...newBatches);\n  };\n\n\n  \n\n  return (\n    \n    <div>\n    \n    \n      <h1>Add New Batch</h1>\n      <button onClick={callIT}>call it</button>\n      <h2>Batch List with Checkboxes</h2>\n      <ul style={{ listStyle: 'none' }}>\n        {Batch.map((batch) => (\n          <li key={batch.BatchID}>\n            <label>\n              <input\n                type=\"checkbox\"\n                name={batch.BatchID}\n                checked={checkedItems[batch.BatchID] || false}\n                onChange={handleCheckboxChange}\n              />\n              {batch.Batch}\n            </label>\n          </li>\n        ))}\n      </ul>\n      <button onClick={addToBatch}>Add selected items to batch</button>\n      <h2>Updated Batch List</h2>\n      <ul>\n        {batches.map((batch) => (\n          <li key={batch.BatchID}>\n            {batch.BatchID} - {batch.Batch} - {batch.CourseID}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default AddBatch;\n\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n"],"sourceRoot":""}