{"version":3,"sources":["service/GlobalEmitterService.js","const/url.js","api/tt.api.js","pages/TTPages/PreviousTimeTable/PreviousTimeTable.js"],"names":["GlobalEmitterService","emit","status","event","CustomEvent","detail","window","dispatchEvent","BASE_URL","URL","UPLOAD_FILE","GET_UPLOAD_FILE_URL","GET_SAVE_TIMETABLE_URL","GET_ALL_TT","GET_EDIT_TT","REMOVE_TT","TtApi","constructor","getTtList","async","res","fetch","method","result","json","e","Error","message","options","getEditTt","myHeaders","Headers","append","headers","body","JSON","stringify","FromDate","fromDateEdit","replaceAll","addUpdateTt","ttRequestBody","removeTtById","timeTableID","PreviousTimeTable","useEffect","getTimeTableList","timeTableList","setTimeTableList","useState","_result$Object","IsSuccessful","Object","length","console","log","_jsx","_Fragment","children","className","Card","_jsxs","CardBody","CardTitle","tag","Table","responsive","borderless","reverse","map","tdata","index","TimeTableID","Session","ToDate","NavLink","to","Button","onClick","row","outline","color","DeleteTt","RiDeleteBin2Line","style"],"mappings":"kHAAA,kCAAe,MAAMA,KACVC,KAAQC,IACX,MAAMC,EAAQ,IAAIC,YAAY,eAAgB,CAAEC,OAAQH,IACxDI,OAAOC,cAAcJ,EAAM,C,kCCHnC,wCAEMK,EAFU,6CAMHC,EAAM,CACfC,YAAaF,EAAW,yBACxBG,oBAAqBH,EAAW,YAChCI,uBAAwBJ,EAAU,sBAClCK,WAAYL,EAAW,gBAEvBM,YAAaN,EAAW,sBACxBO,UAAWP,EAAW,mB,kCCb1B,sDAGe,MAAMQ,EAAMC,cAAA,KACvBC,UAAYC,UACR,IACInB,IAAqBC,MAAK,GAC1B,MAAMmB,QAAYC,MAAMZ,IAAII,WAAY,CACpCS,OAAQ,QAENC,QAAeH,EAAII,OAEzB,OADAxB,IAAqBC,MAAK,GACnBsB,CACX,CAAE,MAAOE,GAEL,MADAzB,IAAqBC,MAAK,GACpB,IAAIyB,MAAMD,EAAEE,QAASF,EAAEG,QACjC,GACH,KAEDC,UAAYV,UACR,IAGInB,IAAqBC,MAAK,GAC1B,MAAM6B,EAAY,IAAIC,QACtBD,EAAUE,OAAO,eAAgB,oBACjC,MAAMZ,QAAYC,MAAMZ,IAAIK,YAAa,CACrCQ,OAAQ,OACRW,QAASH,EACTI,KAAMC,KAAKC,UAAU,CACjBC,SAAUC,EAAaC,WAAW,IAAK,SAGzChB,QAAeH,EAAII,OAEzB,OADAxB,IAAqBC,MAAK,GACnBsB,CACX,CAAE,MAAOE,GAEL,MADAzB,IAAqBC,MAAK,GACpB,IAAIyB,MAAMD,EAAEE,QAASF,EAAEG,QACjC,GACH,KAGDY,YAAcrB,UACV,IACInB,IAAqBC,MAAK,GAC1B,MAAM6B,EAAY,IAAIC,QACtBD,EAAUE,OAAO,eAAgB,oBACjC,MAAMZ,QAAYC,MAAMZ,IAAIG,uBAAwB,CAChDU,OAAQ,OACRW,QAASH,EACTI,KAAMC,KAAKC,UAAUK,KAEnBlB,QAAeH,EAAII,OAEzB,OADAxB,IAAqBC,MAAK,GACnBsB,CACX,CAAE,MAAOE,GAEL,MADAzB,IAAqBC,MAAK,GACpB,IAAIyB,MAAMD,EAAEE,QAASF,EAAEG,QACjC,GACH,KAEDc,aAAevB,UACX,IACInB,IAAqBC,MAAK,GAG1B,MAAM6B,EAAY,IAAIC,QACtBD,EAAUE,OAAO,eAAgB,oBACjC,MAAMZ,QAAYC,MAAMZ,IAAIM,UAAW,CACnCO,OAAQ,OACRW,QAASH,EACTI,KAAMS,IAEJpB,QAAeH,EAAII,OAEzB,OADAxB,IAAqBC,MAAK,GACnBsB,CACX,CAAE,MAAOE,GAEL,MADAzB,IAAqBC,MAAK,GACpB,IAAIyB,MAAMD,EAAEE,QAASF,EAAEG,QACjC,EACH,E,kCCjFL,uDAgFegB,UA1EWA,KAGxBC,qBAAU,KACRC,GAAkB,GACjB,IAGH,MAAOC,EAAeC,GAAoBC,mBAAS,IAG7CH,EAAmB3B,UAAa,IAAD+B,EACnC,MAAM3B,QAAe,IAAIP,KAAQE,YAC7BK,EAAO4B,eAA6B,QAAbD,EAAA3B,EAAO6B,cAAM,IAAAF,OAAA,EAAbA,EAAeG,QAAS,IACjDL,EAAiBzB,EAAO6B,QACxBE,QAAQC,IAAIhC,EAAO6B,QACrB,EAYF,OACEI,cAAAC,WAAA,CAAAC,SACEF,cAAA,OAAKG,UAAU,SAAQD,SACrBF,cAACI,IAAI,CAAAF,SACHG,eAACC,IAAQ,CAAAJ,SAAA,CACPF,cAACO,IAAS,CAACC,IAAI,KAAIN,SAAC,wBACpBG,eAACI,IAAK,CAACN,UAAU,4BAA4BO,YAAU,EAACC,YAAU,EAAAT,SAAA,CAChEF,cAAA,SAAAE,SACEG,eAAA,MAAAH,SAAA,CACEF,cAAA,MAAAE,SAAI,aACJF,cAAA,MAAAE,SAAI,YACJF,cAAA,MAAAE,SAAI,aACJF,cAAA,MAAAE,SAAI,YACJF,cAAA,MAAAE,SAAI,gBAGRF,cAAA,SAAAE,SACGX,EAAcqB,UAAUC,KAAI,CAACC,EAAOC,IACnCV,eAAA,MAA4BF,UAAU,aAAYD,SAAA,CAChDF,cAAA,MAAAE,SACGY,EAAME,cAEThB,cAAA,MAAAE,SAAKY,EAAMG,UACXjB,cAAA,MAAAE,SACGY,EAAMjC,WAETmB,cAAA,MAAAE,SAAKY,EAAMI,SACXb,eAAA,MAAAH,SAAA,CACEF,cAACmB,IAAO,CAACC,GAAI,UAAYN,EAAME,YAAc,IAAMF,EAAMjC,SAASE,WAAW,IAAK,KAAKmB,SAACF,cAACqB,IAAM,CAACC,QAASrD,IArC7GsD,QAqC2HT,EApCzIhB,QAAQC,IAAI,oBAAqBwB,EAoC8G,EAAIpB,UAAU,MAAMqB,SAAO,EAACC,MAAM,UAASvB,SAAC,YAGzKF,cAACqB,IAAM,CAAClB,UAAU,MAAMsB,MAAM,cAAcH,QAASrD,IApCxDN,iBACT,IAAIH,KAAQ0B,aAAaqC,EAAIP,YAAY,EAmC+BU,CAASZ,EAAM,EAAGZ,SAC5EF,cAAC2B,IAAgB,CAACC,MAAO,CAAEH,MAAO,gBAd/BX,EAAME,4BAwB1B,C","file":"static/js/11.41af49b0.chunk.js","sourcesContent":["export default class GlobalEmitterService {\r\n    static emit = (status) => {\r\n        const event = new CustomEvent('spinner-load', { detail: status });\r\n        window.dispatchEvent(event);\r\n    }\r\n\r\n    // static loggedInEmitter = (loggedIn) => {\r\n    //     const event = new CustomEvent('auth-changed', { detail: loggedIn });\r\n    //     window.dispatchEvent(event);\r\n    // }\r\n}","const ENV_URL = 'https://api.aayamcareerinstitute.co.in/api'; // producation fn\r\nconst DEV_URL = 'http://localhost:5001'; // producation fn\r\nconst BASE_URL= ENV_URL\r\n\r\n\r\n\r\nexport const URL = {\r\n    UPLOAD_FILE: BASE_URL + '/UploadFilesAttachment',\r\n    GET_UPLOAD_FILE_URL: BASE_URL + '/GetFiles', \r\n    GET_SAVE_TIMETABLE_URL: BASE_URL+ '/AddUpdateTimeTable',\r\n    GET_ALL_TT: BASE_URL + '/GetTimeTable', \r\n\r\n    GET_EDIT_TT: BASE_URL + '/GetTimeTableByDate',\r\n    REMOVE_TT: BASE_URL + '/DeleteTimeTable',\r\n\r\n\r\n\r\n\r\n};  \r\n","import GlobalEmitterService from '../service/GlobalEmitterService';\r\nimport { URL } from '../const/url';\r\n\r\nexport default class TtApi {\r\n    getTtList = async () => {\r\n        try {\r\n            GlobalEmitterService.emit(true);           // GlobalEmitterService.emit is made true for adding spinner untill api is completed\r\n            const res = await fetch(URL.GET_ALL_TT, {\r\n                method: 'GET',\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    getEditTt = async (fromDateEdit) => {\r\n        try {\r\n            // const formData = new FormData();\r\n            // formData.append('file', file, file.name);\r\n            GlobalEmitterService.emit(true);\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.GET_EDIT_TT, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: JSON.stringify({\r\n                    FromDate: fromDateEdit.replaceAll(\"-\", \"/\"),\r\n                })\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n\r\n    addUpdateTt = async (ttRequestBody) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.GET_SAVE_TIMETABLE_URL, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: JSON.stringify(ttRequestBody)\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n\r\n    removeTtById = async (timeTableID) => {\r\n        try {\r\n            GlobalEmitterService.emit(true);\r\n            // const formData = new FormData();\r\n            // formData.append('file', file, file.name);\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            const res = await fetch(URL.REMOVE_TT, {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: timeTableID\r\n            });\r\n            const result = await res.json();\r\n            GlobalEmitterService.emit(false);\r\n            return result;\r\n        } catch (e) {\r\n            GlobalEmitterService.emit(false);\r\n            throw new Error(e.message, e.options);\r\n        }\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport TtApi from '../../../api/tt.api.js';\r\nimport { Button, Card, CardBody, CardSubtitle, CardTitle, Table } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { RiDeleteBin2Line } from \"react-icons/ri\";\r\n\r\nconst PreviousTimeTable = () => {\r\n  /**************************************** const Section ************************************/\r\n  /**************************************** Use Effect Section ************************************/\r\n  useEffect(() => {\r\n    getTimeTableList();\r\n  }, []);\r\n\r\n  /**************************************** State Section *****************************************/\r\n  const [timeTableList, setTimeTableList] = useState([]);\r\n\r\n  /**************************************** Component Method Section *********************************/\r\n  const getTimeTableList = async () => {\r\n    const result = await new TtApi().getTtList();\r\n    if (result.IsSuccessful && result.Object?.length > 0) {\r\n      setTimeTableList(result.Object);\r\n      console.log(result.Object)\r\n    }\r\n  };\r\n\r\n  const editTt = (row) => {\r\n    console.log('xxx xx xx row is ', row);\r\n  }\r\n\r\n  const DeleteTt = async (row) => {\r\n    await new TtApi().removeTtById(row.TimeTableID);\r\n  }\r\n\r\n  /**************************************** Template Section *****************************************/\r\n  return (\r\n    <>\r\n      <div className='col-12'>\r\n        <Card>\r\n          <CardBody>\r\n            <CardTitle tag=\"h5\">Previous Time Table</CardTitle>\r\n            <Table className=\"no-wrap mt-3 align-middle\" responsive borderless>\r\n              <thead>\r\n                <tr>\r\n                  <th>Table Id</th>\r\n                  <th>Session</th>\r\n                  <th>FromDate</th>\r\n                  <th>To Date</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {timeTableList.reverse().map((tdata, index) => (\r\n                  <tr key={tdata.TimeTableID} className=\"border-top\">\r\n                    <td>\r\n                      {tdata.TimeTableID}\r\n                    </td>\r\n                    <td>{tdata.Session}</td>\r\n                    <td>\r\n                      {tdata.FromDate}\r\n                    </td>\r\n                    <td>{tdata.ToDate}</td>\r\n                    <td>\r\n                      <NavLink to={'/clone/' + tdata.TimeTableID + '/' + tdata.FromDate.replaceAll(\"/\", '-')}><Button onClick={e => { editTt(tdata) }} className=\"btn\" outline color=\"primary\">\r\n                        Clone\r\n                      </Button></NavLink>\r\n                      <Button className=\"btn\" color=\"transparent\" onClick={e => { DeleteTt(tdata) }}>\r\n                        <RiDeleteBin2Line style={{ color: \"red\" }} />\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PreviousTimeTable\r\n"],"sourceRoot":""}